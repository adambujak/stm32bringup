ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.global	pxCurrentTCB
  21              		.section	.bss.pxCurrentTCB,"aw",%nobits
  22              		.align	2
  25              	pxCurrentTCB:
  26 0000 00000000 		.space	4
  27              		.section	.bss.pxReadyTasksLists,"aw",%nobits
  28              		.align	2
  31              	pxReadyTasksLists:
  32 0000 00000000 		.space	140
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.section	.bss.xDelayedTaskList1,"aw",%nobits
  34              		.align	2
  37              	xDelayedTaskList1:
  38 0000 00000000 		.space	20
  38      00000000 
  38      00000000 
  38      00000000 
  38      00000000 
  39              		.section	.bss.xDelayedTaskList2,"aw",%nobits
  40              		.align	2
  43              	xDelayedTaskList2:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.section	.bss.pxDelayedTaskList,"aw",%nobits
  46              		.align	2
  49              	pxDelayedTaskList:
  50 0000 00000000 		.space	4
  51              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
  52              		.align	2
  55              	pxOverflowDelayedTaskList:
  56 0000 00000000 		.space	4
  57              		.section	.bss.xPendingReadyList,"aw",%nobits
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 2


  58              		.align	2
  61              	xPendingReadyList:
  62 0000 00000000 		.space	20
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
  64              		.align	2
  67              	xTasksWaitingTermination:
  68 0000 00000000 		.space	20
  68      00000000 
  68      00000000 
  68      00000000 
  68      00000000 
  69              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
  70              		.align	2
  73              	uxDeletedTasksWaitingCleanUp:
  74 0000 00000000 		.space	4
  75              		.section	.bss.xSuspendedTaskList,"aw",%nobits
  76              		.align	2
  79              	xSuspendedTaskList:
  80 0000 00000000 		.space	20
  80      00000000 
  80      00000000 
  80      00000000 
  80      00000000 
  81              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
  82              		.align	2
  85              	uxCurrentNumberOfTasks:
  86 0000 00000000 		.space	4
  87              		.section	.bss.xTickCount,"aw",%nobits
  88              		.align	2
  91              	xTickCount:
  92 0000 00000000 		.space	4
  93              		.section	.bss.uxTopReadyPriority,"aw",%nobits
  94              		.align	2
  97              	uxTopReadyPriority:
  98 0000 00000000 		.space	4
  99              		.section	.bss.xSchedulerRunning,"aw",%nobits
 100              		.align	2
 103              	xSchedulerRunning:
 104 0000 00000000 		.space	4
 105              		.section	.bss.xPendedTicks,"aw",%nobits
 106              		.align	2
 109              	xPendedTicks:
 110 0000 00000000 		.space	4
 111              		.section	.bss.xYieldPending,"aw",%nobits
 112              		.align	2
 115              	xYieldPending:
 116 0000 00000000 		.space	4
 117              		.section	.bss.xNumOfOverflows,"aw",%nobits
 118              		.align	2
 121              	xNumOfOverflows:
 122 0000 00000000 		.space	4
 123              		.section	.bss.uxTaskNumber,"aw",%nobits
 124              		.align	2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 3


 127              	uxTaskNumber:
 128 0000 00000000 		.space	4
 129              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 130              		.align	2
 133              	xNextTaskUnblockTime:
 134 0000 00000000 		.space	4
 135              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 136              		.align	2
 139              	xIdleTaskHandle:
 140 0000 00000000 		.space	4
 141              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 142              		.align	2
 145              	uxSchedulerSuspended:
 146 0000 00000000 		.space	4
 147              		.section	.text.xTaskCreate,"ax",%progbits
 148              		.align	2
 149              		.global	xTaskCreate
 150              		.thumb
 151              		.thumb_func
 153              	xTaskCreate:
 154              	.LFB5:
 155              		.file 1 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c"
   1:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
   2:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.4.1
   3:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
   5:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
  12:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
  15:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
  22:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * https://www.FreeRTOS.org
  23:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * https://github.com/FreeRTOS
  24:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
  25:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
  26:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  27:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  28:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  29:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #include <string.h>
  30:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  31:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  33:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * task.h is included from an application file. */
  34:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 4


  36:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  37:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  38:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #include "task.h"
  39:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #include "timers.h"
  40:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  41:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  42:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  43:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  44:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * for the header files above, but not in this file, in order to generate the
  45:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * correct privileged Vs unprivileged linkage and placement. */
  46:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  47:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  48:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  49:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * functions but without including stdio.h here. */
  50:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  51:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  52:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* At the bottom of this file are two optional functions that can be used
  53:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * to generate human readable text from the raw data generated by the
  54:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * for convenience only, and are NOT considered part of the kernel. */
  56:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #include <stdio.h>
  57:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  59:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_PREEMPTION == 0 )
  60:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  61:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* If the cooperative scheduler is being used then a yield should not be
  62:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * performed just because a higher priority task has been woken. */
  63:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()
  64:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #else
  65:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  66:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
  67:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  68:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  69:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION              ( ( uint8_t ) 0 ) /* Must be zero as it is the in
  70:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION                  ( ( uint8_t ) 1 )
  71:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED                 ( ( uint8_t ) 2 )
  72:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  73:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
  74:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  75:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  76:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
  77:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE                        ( 0xa5U )
  78:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  79:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  80:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB    ( ( uint8_t ) 0 )
  81:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY        ( ( uint8_t ) 1 )
  82:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB     ( ( uint8_t ) 2 )
  83:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
  84:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  85:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * value so the high water mark can be determined.  If none of the following are
  86:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * set then don't fill the stack so there is no unnecessary dependency on memset. */
  87:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
  88:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    1
  89:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #else
  90:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    0
  91:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
  92:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 5


  93:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
  94:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  95:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
  96:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR      ( 'X' )
  97:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR      ( 'B' )
  98:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR        ( 'R' )
  99:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR      ( 'D' )
 100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR    ( 'S' )
 101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define static
 108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define configIDLE_TASK_NAME    "IDLE"
 114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * performed in a generic way that is not optimised to any particular
 120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * microcontroller architecture. */
 121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* uxTopReadyPriority holds the priority of the highest priority ready
 123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * state task. */
 124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority ) \
 125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {                                               \
 126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( ( uxPriority ) > uxTopReadyPriority )   \
 127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {                                           \
 128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxTopReadyPriority = ( uxPriority );    \
 129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }                                           \
 130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     } /* taskRECORD_READY_PRIORITY */
 131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                \
 135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {                                                                         \
 136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxTopPriority = uxTopReadyPriority;                       \
 137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                                               \
 138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Find the highest priority queue that contains ready tasks. */      \
 139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) ) \
 140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {                                                                     \
 141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             configASSERT( uxTopPriority );                                    \
 142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             --uxTopPriority;                                                  \
 143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }                                                                     \
 144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                                               \
 145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of \
 146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the  same priority get an equal share of the processor time. */                    \
 147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) ); \
 148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxTopReadyPriority = uxTopPriority;                                                   \
 149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 6


 150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * they are only required when a port optimised method of task selection is
 155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * being used. */
 156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )
 157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * performed in a way that is tailored to the particular microcontroller
 163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * architecture being used. */
 164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* A port optimised version is provided.  Call the port defined macros. */
 166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority )    portRECORD_READY_PRIORITY( uxPriority, uxTop
 167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                                  \
 171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {                                                                                           \
 172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxTopPriority;                                                              \
 173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                                                                 \
 174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Find the highest priority list that contains ready tasks. */                         \
 175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );                          \
 176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 ); \
 177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );   \
 178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* A port optimised version is provided, call it only if the TCB being reset
 183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * is being referenced from a ready list.  If it is referenced from a delayed
 184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * or suspended list then it won't be in a ready list. */
 185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )                                                 
 186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {                                                                                              
 187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 
 188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {                                                                                          
 189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );                    
 190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }                                                                                          
 191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * count overflows. */
 199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()                                                \
 200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {                                                                             \
 201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         List_t * pxTemp;                                                          \
 202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                                                   \
 203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The delayed tasks list should be empty when the lists are switched. */ \
 204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );               \
 205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                                                   \
 206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTemp = pxDelayedTaskList;                                               \
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 7


 207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxDelayedTaskList = pxOverflowDelayedTaskList;                            \
 208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxOverflowDelayedTaskList = pxTemp;                                       \
 209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xNumOfOverflows++;                                                        \
 210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         prvResetNextTaskUnblockTime();                                            \
 211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )                                                             
 220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     traceMOVED_TASK_TO_READY_STATE( pxTCB );                                                       
 221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );                                            
 222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem )
 223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 232:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle )    ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle )
 233:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 234:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 235:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * of the task to which it belongs (coded to allow it to be held in reverse
 236:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * priority order).  However, it is occasionally borrowed for other purposes.  It
 237:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * is important its value is not updated due to a task priority change while it is
 238:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * being used for another purpose.  The following bit definition is used to inform
 239:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * the scheduler that the value should not be changed - in which case it is the
 240:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * responsibility of whichever module is using the value to ensure it gets set back
 241:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * to its original value when it is released. */
 242:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_16_BIT_TICKS == 1 )
 243:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x8000U
 244:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #else
 245:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x80000000UL
 246:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 247:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 248:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 249:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 250:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 251:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 252:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 253:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock       /* The old naming convention is used to prevent breaking k
 254:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 255:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     volatile StackType_t * pxTopOfStack; /*< Points to the location of the last item placed on the 
 256:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 257:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 258:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xMPU_SETTINGS xMPUSettings; /*< The MPU settings are defined as part of the port layer.  TH
 259:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 260:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 261:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     ListItem_t xStateListItem;                  /*< The list that the state list item of a task is 
 262:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     ListItem_t xEventListItem;                  /*< Used to reference a task from an event list. */
 263:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t uxPriority;                     /*< The priority of the task.  0 is the lowest prio
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 8


 264:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     StackType_t * pxStack;                      /*< Points to the start of the stack. */
 265:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     char pcTaskName[ configMAX_TASK_NAME_LEN ]; /*< Descriptive name given to the task when created
 266:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 267:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 268:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         StackType_t * pxEndOfStack; /*< Points to the highest valid address for the stack. */
 269:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 270:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 271:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 272:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxCriticalNesting; /*< Holds the critical section nesting depth for ports that 
 273:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 274:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 275:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 276:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxTCBNumber;  /*< Stores a number that increments each time a TCB is created.  
 277:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxTaskNumber; /*< Stores a number specifically for use by third party trace cod
 278:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 279:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 280:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 281:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxBasePriority; /*< The priority last assigned to the task - used by the priori
 282:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxMutexesHeld;
 283:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 284:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 285:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 286:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TaskHookFunction_t pxTaskTag;
 287:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 288:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 289:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 290:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         void * pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 291:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 292:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 293:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 294:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint32_t ulRunTimeCounter; /*< Stores the amount of time the task has spent in the Running 
 295:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 296:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 297:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_NEWLIB_REENTRANT == 1 )
 298:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 299:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Allocate a Newlib reent structure that is specific to this task.
 300:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * Note Newlib support has been included by popular demand, but is not
 301:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 302:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * responsible for resulting newlib operation.  User must be familiar with
 303:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * newlib and must provide system-wide implementations of the necessary
 304:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * stubs. Be warned that (at the time of writing) the current newlib design
 305:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * implements a system-wide malloc() that must be provided with locks.
 306:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
 307:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 308:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * for additional information. */
 309:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         struct  _reent xNewLib_reent;
 310:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 311:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 312:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 313:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         volatile uint32_t ulNotifiedValue[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 314:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         volatile uint8_t ucNotifyState[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 315:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 316:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 317:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* See the comments in FreeRTOS.h with the definition of
 318:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 319:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been conso
 320:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint8_t ucStaticallyAllocated;                     /*< Set to pdTRUE if the task is a stati
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 9


 321:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 322:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 323:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 324:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint8_t ucDelayAborted;
 325:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 326:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 327:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_POSIX_ERRNO == 1 )
 328:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         int iTaskErrno;
 329:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 330:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** } tskTCB;
 331:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 332:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 333:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * below to enable the use of older kernel aware debuggers. */
 334:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 335:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 336:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 337:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * which static variables must be declared volatile. */
 338:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 339:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 340:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 341:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 342:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * doing so breaks some kernel aware debuggers and debuggers that rely on removing
 343:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * the static qualifier. */
 344:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ]; /*< Prioritised ready task
 345:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;                         /*< Delayed tasks. */
 346:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;                         /*< Delayed tasks (two lis
 347:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /*< Points to the delayed 
 348:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /*< Points to the delayed 
 349:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;                         /*< Tasks that have been r
 350:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 351:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 352:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 353:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     PRIVILEGED_DATA static List_t xTasksWaitingTermination; /*< Tasks that have been deleted - but 
 354:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 355:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 356:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 357:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 358:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 359:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 360:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     PRIVILEGED_DATA static List_t xSuspendedTaskList; /*< Tasks that are currently suspended. */
 361:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 362:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 363:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 364:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 365:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * the errno of the currently running task. */
 366:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 367:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     int FreeRTOS_errno = 0;
 368:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 369:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 370:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 371:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
 372:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 373:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
 374:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
 375:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
 376:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending = pdFALSE;
 377:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 10


 378:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
 379:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised
 380:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle = NULL;                          /*< Holds the 
 381:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 382:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 383:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * interrupts must not manipulate the xStateListItem of a TCB, or any of the
 384:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * lists the xStateListItem can be referenced from, if the scheduler is suspended.
 385:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * If an interrupt needs to unblock a task while the scheduler is suspended then it
 386:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * moves the task's event list item into the xPendingReadyList, ready for the
 387:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * kernel to move the task from the pending ready list into the real ready list
 388:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * when the scheduler is unsuspended.  The pending ready list itself can only be
 389:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * accessed from a critical section. */
 390:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) pdFALSE;
 391:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 392:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 393:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 394:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* Do not move these variables to function scope as doing so prevents the
 395:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * code working with debuggers that need to remove the static qualifier. */
 396:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;    /*< Holds the value of a timer/c
 397:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     PRIVILEGED_DATA static volatile uint32_t ulTotalRunTime = 0UL; /*< Holds the total amount of ex
 398:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 399:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 400:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 401:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*lint -restore */
 402:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 403:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 404:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 405:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 406:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 407:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /**
 408:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 409:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 410:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * is in any other state.
 411:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 412:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 413:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 414:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 415:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 416:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 417:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 418:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 419:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 420:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 421:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 422:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 423:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 424:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 425:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 426:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 427:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 428:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
 429:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 430:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 431:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
 432:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 433:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
 434:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 11


 435:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters ) PRIVILEGED_FUNCTION;
 436:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 437:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 438:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 439:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 440:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
 441:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 442:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 443:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 444:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 445:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 446:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB ) PRIVILEGED_FUNCTION;
 447:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 448:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 449:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 450:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 451:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 452:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 453:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 454:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 455:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 456:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 457:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 458:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 459:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 460:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 461:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
 462:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely ) PRIVILEGED_FUN
 463:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 464:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 465:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 466:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 467:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 468:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
 469:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 470:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 471:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 472:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 473:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 474:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
 475:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                      List_t * pxList,
 476:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                      eTaskState eState ) PRIVILEGED_FUNCTION;
 477:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 478:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 479:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 480:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 481:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 482:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 483:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 484:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 485:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 486:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
 487:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                      const char pcNameToQuery[] ) PRIVILEGED_FUNCTI
 488:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 489:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 490:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 491:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 12


 492:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 493:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 494:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 495:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 496:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 497:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 498:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVIL
 499:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 500:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 501:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 502:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 503:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 504:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 505:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
 506:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 507:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 508:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 509:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 510:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 511:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 512:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 513:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 514:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 515:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 516:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 517:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 518:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 519:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 520:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 521:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void ) PRIVILEGED_FUNCTION;
 522:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 523:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 524:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 525:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 526:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Helper function used to pad task names with spaces when printing out
 527:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * human readable tables of task information.
 528:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 529:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
 530:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                         const char * pcTaskName ) PRIVILEGED_FUNCTION;
 531:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 532:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 533:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 534:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 535:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 536:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 537:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 538:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 539:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 540:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   const uint32_t ulStackDepth,
 541:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   void * const pvParameters,
 542:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   UBaseType_t uxPriority,
 543:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 544:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   TCB_t * pxNewTCB,
 545:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 546:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 547:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 548:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 13


 549:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 550:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 551:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB ) PRIVILEGED_FUNCTION;
 552:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 553:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
 554:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 555:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 556:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * called by the function.
 557:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
 558:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 559:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 560:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 561:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 562:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
 563:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 564:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 565:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 566:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 567:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 568:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode,
 569:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     const char * const pcName, /*lint !e971 Unqualified char types 
 570:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     const uint32_t ulStackDepth,
 571:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     void * const pvParameters,
 572:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     UBaseType_t uxPriority,
 573:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     StackType_t * const puxStackBuffer,
 574:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     StaticTask_t * const pxTaskBuffer )
 575:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 576:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxNewTCB;
 577:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TaskHandle_t xReturn;
 578:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 579:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( puxStackBuffer != NULL );
 580:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 581:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 582:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configASSERT_DEFINED == 1 )
 583:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
 584:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Sanity check that the size of the structure used to declare a
 585:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * variable of type StaticTask_t equals the size of the real task
 586:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * structure. */
 587:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 volatile size_t xSize = sizeof( StaticTask_t );
 588:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 configASSERT( xSize == sizeof( TCB_t ) );
 589:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 590:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
 591:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configASSERT_DEFINED */
 592:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 593:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 594:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 595:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* The memory used for the task's TCB and stack are passed into this
 596:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * function - use them. */
 597:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the stru
 598:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 599:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 600:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has be
 601:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
 602:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 603:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * task was created statically in case the task is later deleted. */
 604:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 605:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 14


 606:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 607:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 608:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xRet
 609:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 610:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 611:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
 612:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 613:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = NULL;
 614:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 615:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 616:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 617:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 618:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 619:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 620:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 621:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 622:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 623:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 624:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
 625:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                             TaskHandle_t * pxCreatedTask )
 626:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 627:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxNewTCB;
 628:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 629:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 630:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 631:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 632:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 633:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NUL
 634:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 635:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 636:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * on the implementation of the port malloc function and whether or
 637:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * not static allocation is being used. */
 638:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 639:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 640:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Store the stack location in the TCB. */
 641:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 642:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 643:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 644:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
 645:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 646:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * task was created statically in case the task is later deleted. */
 647:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 648:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
 649:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 650:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 651:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 652:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   pxTaskDefinition->pcName,
 653:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   ( uint32_t ) pxTaskDefinition->usStackDepth,
 654:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   pxTaskDefinition->pvParameters,
 655:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   pxTaskDefinition->uxPriority,
 656:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   pxCreatedTask, pxNewTCB,
 657:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   pxTaskDefinition->xRegions );
 658:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 659:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 660:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = pdPASS;
 661:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 662:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 15


 663:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 664:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 665:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 666:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 667:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 668:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 669:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 670:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 671:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
 672:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       TaskHandle_t * pxCreatedTask )
 673:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 674:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxNewTCB;
 675:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 676:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 677:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer );
 678:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 679:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxTaskDefinition->puxStackBuffer != NULL )
 680:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 681:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 682:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * on the implementation of the port malloc function and whether or
 683:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * not static allocation is being used. */
 684:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 685:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 686:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxNewTCB != NULL )
 687:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
 688:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Store the stack location in the TCB. */
 689:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 690:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 691:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 692:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
 693:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Tasks can be created statically or dynamically, so note
 694:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * this task had a statically allocated stack in case it is
 695:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * later deleted.  The TCB was allocated dynamically. */
 696:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 697:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
 698:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 699:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 700:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 701:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       pxTaskDefinition->pcName,
 702:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       ( uint32_t ) pxTaskDefinition->usStackDepth,
 703:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       pxTaskDefinition->pvParameters,
 704:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       pxTaskDefinition->uxPriority,
 705:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       pxCreatedTask, pxNewTCB,
 706:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       pxTaskDefinition->xRegions );
 707:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 708:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvAddNewTaskToReadyList( pxNewTCB );
 709:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdPASS;
 710:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
 711:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 712:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 713:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 714:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 715:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 716:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 717:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 718:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 719:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 16


 720:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 721:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
 722:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             const char * const pcName, /*lint !e971 Unqualified char types are allo
 723:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             const configSTACK_DEPTH_TYPE usStackDepth,
 724:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             void * const pvParameters,
 725:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             UBaseType_t uxPriority,
 726:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             TaskHandle_t * const pxCreatedTask )
 727:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 156              		.loc 1 727 0
 157              		.cfi_startproc
 158              		@ args = 8, pretend = 0, frame = 32
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              	.LCFI0:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 8CB0     		sub	sp, sp, #48
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 56
 168 0004 04AF     		add	r7, sp, #16
 169              	.LCFI2:
 170              		.cfi_def_cfa 7, 40
 171 0006 F860     		str	r0, [r7, #12]
 172 0008 B960     		str	r1, [r7, #8]
 173 000a 3B60     		str	r3, [r7]
 174 000c 1346     		mov	r3, r2	@ movhi
 175 000e FB80     		strh	r3, [r7, #6]	@ movhi
 176              	.LBB125:
 728:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxNewTCB;
 729:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn;
 730:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 731:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If the stack grows down then allocate the stack then the TCB so the stack
 732:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * does not grow into the TCB.  Likewise if the stack grows up then allocate
 733:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the TCB then the stack. */
 734:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( portSTACK_GROWTH > 0 )
 735:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
 736:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Allocate space for the TCB.  Where the memory comes from depends on
 737:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the implementation of the port malloc function and whether or not static
 738:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * allocation is being used. */
 739:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 740:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 741:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxNewTCB != NULL )
 742:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
 743:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Allocate space for the stack used by the task being created.
 744:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * The base of the stack memory stored in the TCB so the task can
 745:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * be deleted later if required. */
 746:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth
 747:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 748:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxNewTCB->pxStack == NULL )
 749:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
 750:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Could not allocate the stack.  Delete the allocated TCB. */
 751:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         vPortFree( pxNewTCB );
 752:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxNewTCB = NULL;
 753:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
 754:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
 755:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 17


 756:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #else /* portSTACK_GROWTH */
 757:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
 758:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 StackType_t * pxStack;
 759:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 760:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Allocate space for the stack used by the task being created. */
 761:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); 
 177              		.loc 1 761 0
 178 0010 FB88     		ldrh	r3, [r7, #6]
 179 0012 9B00     		lsls	r3, r3, #2
 180 0014 1846     		mov	r0, r3
 181 0016 FFF7FEFF 		bl	pvPortMalloc
 182 001a 7861     		str	r0, [r7, #20]
 762:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 763:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxStack != NULL )
 183              		.loc 1 763 0
 184 001c 7B69     		ldr	r3, [r7, #20]
 185 001e 002B     		cmp	r3, #0
 186 0020 0ED0     		beq	.L2
 764:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
 765:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Allocate space for the TCB. */
 766:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 Al
 187              		.loc 1 766 0
 188 0022 5C20     		movs	r0, #92
 189 0024 FFF7FEFF 		bl	pvPortMalloc
 190 0028 F861     		str	r0, [r7, #28]
 767:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 768:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxNewTCB != NULL )
 191              		.loc 1 768 0
 192 002a FB69     		ldr	r3, [r7, #28]
 193 002c 002B     		cmp	r3, #0
 194 002e 03D0     		beq	.L3
 769:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
 770:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Store the stack location in the TCB. */
 771:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxNewTCB->pxStack = pxStack;
 195              		.loc 1 771 0
 196 0030 FB69     		ldr	r3, [r7, #28]
 197 0032 7A69     		ldr	r2, [r7, #20]
 198 0034 1A63     		str	r2, [r3, #48]
 199 0036 05E0     		b	.L5
 200              	.L3:
 772:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
 773:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
 774:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
 775:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* The stack cannot be used as the TCB was not created.  Free
 776:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * it again. */
 777:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         vPortFree( pxStack );
 201              		.loc 1 777 0
 202 0038 7869     		ldr	r0, [r7, #20]
 203 003a FFF7FEFF 		bl	vPortFree
 204 003e 01E0     		b	.L5
 205              	.L2:
 778:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
 779:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
 780:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
 781:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
 782:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB = NULL;
 206              		.loc 1 782 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 18


 207 0040 0023     		movs	r3, #0
 208 0042 FB61     		str	r3, [r7, #28]
 209              	.L5:
 210              	.LBE125:
 783:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
 784:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
 785:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* portSTACK_GROWTH */
 786:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 787:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxNewTCB != NULL )
 211              		.loc 1 787 0
 212 0044 FB69     		ldr	r3, [r7, #28]
 213 0046 002B     		cmp	r3, #0
 214 0048 13D0     		beq	.L6
 788:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 789:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has be
 790:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
 791:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 792:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * task was created dynamically in case it is later deleted. */
 793:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 794:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
 795:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 796:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 797:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPr
 215              		.loc 1 797 0
 216 004a FA88     		ldrh	r2, [r7, #6]
 217 004c BB6A     		ldr	r3, [r7, #40]
 218 004e 0093     		str	r3, [sp]
 219 0050 FB6A     		ldr	r3, [r7, #44]
 220 0052 0193     		str	r3, [sp, #4]
 221 0054 FB69     		ldr	r3, [r7, #28]
 222 0056 0293     		str	r3, [sp, #8]
 223 0058 0023     		movs	r3, #0
 224 005a 0393     		str	r3, [sp, #12]
 225 005c F868     		ldr	r0, [r7, #12]
 226 005e B968     		ldr	r1, [r7, #8]
 227 0060 3B68     		ldr	r3, [r7]
 228 0062 FFF7FEFF 		bl	prvInitialiseNewTask
 798:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 229              		.loc 1 798 0
 230 0066 F869     		ldr	r0, [r7, #28]
 231 0068 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 799:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = pdPASS;
 232              		.loc 1 799 0
 233 006c 0123     		movs	r3, #1
 234 006e BB61     		str	r3, [r7, #24]
 235 0070 02E0     		b	.L7
 236              	.L6:
 800:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 801:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
 802:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 803:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 237              		.loc 1 803 0
 238 0072 4FF0FF33 		mov	r3, #-1
 239 0076 BB61     		str	r3, [r7, #24]
 240              	.L7:
 804:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 805:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 19


 806:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 241              		.loc 1 806 0
 242 0078 BB69     		ldr	r3, [r7, #24]
 807:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 243              		.loc 1 807 0
 244 007a 1846     		mov	r0, r3
 245 007c 2037     		adds	r7, r7, #32
 246              	.LCFI3:
 247              		.cfi_def_cfa_offset 8
 248 007e BD46     		mov	sp, r7
 249              	.LCFI4:
 250              		.cfi_def_cfa_register 13
 251              		@ sp needed
 252 0080 80BD     		pop	{r7, pc}
 253              		.cfi_endproc
 254              	.LFE5:
 256 0082 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 257              		.align	2
 258              		.thumb
 259              		.thumb_func
 261              	prvInitialiseNewTask:
 262              	.LFB6:
 808:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 809:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 810:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 811:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 812:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 813:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 814:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   const uint32_t ulStackDepth,
 815:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   void * const pvParameters,
 816:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   UBaseType_t uxPriority,
 817:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 818:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   TCB_t * pxNewTCB,
 819:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   const MemoryRegion_t * const xRegions )
 820:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 263              		.loc 1 820 0
 264              		.cfi_startproc
 265              		@ args = 16, pretend = 0, frame = 32
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267 0000 80B5     		push	{r7, lr}
 268              	.LCFI5:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 88B0     		sub	sp, sp, #32
 273              	.LCFI6:
 274              		.cfi_def_cfa_offset 40
 275 0004 00AF     		add	r7, sp, #0
 276              	.LCFI7:
 277              		.cfi_def_cfa_register 7
 278 0006 F860     		str	r0, [r7, #12]
 279 0008 B960     		str	r1, [r7, #8]
 280 000a 7A60     		str	r2, [r7, #4]
 281 000c 3B60     		str	r3, [r7]
 821:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     StackType_t * pxTopOfStack;
 822:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t x;
 823:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 20


 824:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 825:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Should the task be created in privileged mode? */
 826:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xRunPrivileged;
 827:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 828:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 829:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 830:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xRunPrivileged = pdTRUE;
 831:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 832:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
 833:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 834:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xRunPrivileged = pdFALSE;
 835:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 836:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxPriority &= ~portPRIVILEGE_BIT;
 837:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS == 1 */
 838:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 839:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Avoid dependency on memset() if it is not required. */
 840:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 841:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 842:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Fill the stack with a known value to assist debugging. */
 843:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth
 282              		.loc 1 843 0
 283 000e 3B6B     		ldr	r3, [r7, #48]
 284 0010 1A6B     		ldr	r2, [r3, #48]
 285 0012 7B68     		ldr	r3, [r7, #4]
 286 0014 9B00     		lsls	r3, r3, #2
 287 0016 1046     		mov	r0, r2
 288 0018 A521     		movs	r1, #165
 289 001a 1A46     		mov	r2, r3
 290 001c FFF7FEFF 		bl	memset
 844:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 845:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 846:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 847:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Calculate the top of stack address.  This depends on whether the stack
 848:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * grows from high memory to low (as per the 80x86) or vice versa.
 849:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * portSTACK_GROWTH is used to make the result positive or negative as required
 850:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * by the port. */
 851:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( portSTACK_GROWTH < 0 )
 852:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 853:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 291              		.loc 1 853 0
 292 0020 3B6B     		ldr	r3, [r7, #48]
 293 0022 1A6B     		ldr	r2, [r3, #48]
 294 0024 7B68     		ldr	r3, [r7, #4]
 295 0026 03F18043 		add	r3, r3, #1073741824
 296 002a 013B     		subs	r3, r3, #1
 297 002c 9B00     		lsls	r3, r3, #2
 298 002e 1344     		add	r3, r3, r2
 299 0030 BB61     		str	r3, [r7, #24]
 854:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
 300              		.loc 1 854 0
 301 0032 BB69     		ldr	r3, [r7, #24]
 302 0034 23F00703 		bic	r3, r3, #7
 303 0038 BB61     		str	r3, [r7, #24]
 855:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 856:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Check the alignment of the calculated top of stack is correct. */
 857:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) po
 304              		.loc 1 857 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 21


 305 003a BB69     		ldr	r3, [r7, #24]
 306 003c 03F00703 		and	r3, r3, #7
 307 0040 002B     		cmp	r3, #0
 308 0042 09D0     		beq	.L10
 309              	.LBB126:
 310              	.LBB127:
 311              		.file 2 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/p
   1:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.4.1
   3:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  23:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  24:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  31:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  33:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  34:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  35:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  48:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  49:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  50:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 22


  51:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  52:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  54:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  57:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  61:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  63:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  64:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  68:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  70:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  78:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  79:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  80:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  81:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  82:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  85:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
  90:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  91:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  96:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  98:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
  99:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 23


 108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 24


 165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         else
 184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
 196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 312              		.loc 2 197 0 discriminator 1
 313              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 314 0044 4FF05003 			mov r3, #80												
 315 0048 83F31188 		msr basepri, r3											
 316 004c BFF36F8F 		isb														
 317 0050 BFF34F8F 		dsb														
 318              	
 319              	@ 0 "" 2
 320              		.thumb
 321 0054 7B61     		str	r3, [r7, #20]
 322              	.L11:
 323              	.LBE127:
 324              	.LBE126:
 325              		.loc 1 857 0 discriminator 1
 326 0056 FEE7     		b	.L11
 327              	.L10:
 858:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 859:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( configRECORD_STACK_HIGH_ADDRESS == 1 )
 860:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
 861:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Also record the stack's high address, which may assist
 862:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * debugging. */
 863:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB->pxEndOfStack = pxTopOfStack;
 864:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
 865:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif /* configRECORD_STACK_HIGH_ADDRESS */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 25


 866:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 867:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #else /* portSTACK_GROWTH */
 868:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 869:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTopOfStack = pxNewTCB->pxStack;
 870:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 871:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Check the alignment of the stack buffer is correct. */
 872:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE
 873:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 874:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* The other extreme of the stack space is required if stack checking is
 875:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * performed. */
 876:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 877:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 878:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* portSTACK_GROWTH */
 879:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 880:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Store the task name in the TCB. */
 881:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( pcName != NULL )
 328              		.loc 1 881 0
 329 0058 BB68     		ldr	r3, [r7, #8]
 330 005a 002B     		cmp	r3, #0
 331 005c 1ED0     		beq	.L12
 882:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 883:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 332              		.loc 1 883 0
 333 005e 0023     		movs	r3, #0
 334 0060 FB61     		str	r3, [r7, #28]
 335 0062 13E0     		b	.L13
 336              	.L16:
 884:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 885:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 337              		.loc 1 885 0
 338 0064 BA68     		ldr	r2, [r7, #8]
 339 0066 FB69     		ldr	r3, [r7, #28]
 340 0068 1344     		add	r3, r3, r2
 341 006a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 342 006c 3A6B     		ldr	r2, [r7, #48]
 343 006e FB69     		ldr	r3, [r7, #28]
 344 0070 1344     		add	r3, r3, r2
 345 0072 3033     		adds	r3, r3, #48
 346 0074 0A46     		mov	r2, r1
 347 0076 1A71     		strb	r2, [r3, #4]
 886:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 887:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 888:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * configMAX_TASK_NAME_LEN characters just in case the memory after the
 889:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * string is not accessible (extremely unlikely). */
 890:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pcName[ x ] == ( char ) 0x00 )
 348              		.loc 1 890 0
 349 0078 BA68     		ldr	r2, [r7, #8]
 350 007a FB69     		ldr	r3, [r7, #28]
 351 007c 1344     		add	r3, r3, r2
 352 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 353 0080 002B     		cmp	r3, #0
 354 0082 00D1     		bne	.L14
 891:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
 892:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 break;
 355              		.loc 1 892 0
 356 0084 05E0     		b	.L15
 357              	.L14:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 26


 883:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 358              		.loc 1 883 0 discriminator 2
 359 0086 FB69     		ldr	r3, [r7, #28]
 360 0088 0133     		adds	r3, r3, #1
 361 008a FB61     		str	r3, [r7, #28]
 362              	.L13:
 883:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 363              		.loc 1 883 0 is_stmt 0 discriminator 1
 364 008c FB69     		ldr	r3, [r7, #28]
 365 008e 0F2B     		cmp	r3, #15
 366 0090 E8D9     		bls	.L16
 367              	.L15:
 893:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
 894:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
 895:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
 896:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 897:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
 898:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 899:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 900:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Ensure the name string is terminated in the case that the string length
 901:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * was greater or equal to configMAX_TASK_NAME_LEN. */
 902:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 368              		.loc 1 902 0 is_stmt 1
 369 0092 3B6B     		ldr	r3, [r7, #48]
 370 0094 0022     		movs	r2, #0
 371 0096 83F84320 		strb	r2, [r3, #67]
 372 009a 03E0     		b	.L17
 373              	.L12:
 903:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 904:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
 905:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 906:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The task has not been given a name, so just ensure there is a NULL
 907:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * terminator when it is read out. */
 908:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxNewTCB->pcTaskName[ 0 ] = 0x00;
 374              		.loc 1 908 0
 375 009c 3B6B     		ldr	r3, [r7, #48]
 376 009e 0022     		movs	r2, #0
 377 00a0 83F83420 		strb	r2, [r3, #52]
 378              	.L17:
 909:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 910:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 911:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* This is used as an array index so must ensure it's not too large.  First
 912:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * remove the privilege bit if one is present. */
 913:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 379              		.loc 1 913 0
 380 00a4 BB6A     		ldr	r3, [r7, #40]
 381 00a6 062B     		cmp	r3, #6
 382 00a8 01D9     		bls	.L18
 914:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 915:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 383              		.loc 1 915 0
 384 00aa 0623     		movs	r3, #6
 385 00ac BB62     		str	r3, [r7, #40]
 386              	.L18:
 916:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 917:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
 918:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 27


 919:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 920:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 921:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 922:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     pxNewTCB->uxPriority = uxPriority;
 387              		.loc 1 922 0
 388 00ae 3B6B     		ldr	r3, [r7, #48]
 389 00b0 BA6A     		ldr	r2, [r7, #40]
 390 00b2 DA62     		str	r2, [r3, #44]
 923:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 924:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 925:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->uxBasePriority = uxPriority;
 391              		.loc 1 925 0
 392 00b4 3B6B     		ldr	r3, [r7, #48]
 393 00b6 BA6A     		ldr	r2, [r7, #40]
 394 00b8 DA64     		str	r2, [r3, #76]
 926:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->uxMutexesHeld = 0;
 395              		.loc 1 926 0
 396 00ba 3B6B     		ldr	r3, [r7, #48]
 397 00bc 0022     		movs	r2, #0
 398 00be 1A65     		str	r2, [r3, #80]
 927:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 928:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* configUSE_MUTEXES */
 929:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 930:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 399              		.loc 1 930 0
 400 00c0 3B6B     		ldr	r3, [r7, #48]
 401 00c2 0433     		adds	r3, r3, #4
 402 00c4 1846     		mov	r0, r3
 403 00c6 FFF7FEFF 		bl	vListInitialiseItem
 931:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 404              		.loc 1 931 0
 405 00ca 3B6B     		ldr	r3, [r7, #48]
 406 00cc 1833     		adds	r3, r3, #24
 407 00ce 1846     		mov	r0, r3
 408 00d0 FFF7FEFF 		bl	vListInitialiseItem
 932:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 933:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 934:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * back to  the containing TCB from a generic item in a list. */
 935:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 409              		.loc 1 935 0
 410 00d4 3B6B     		ldr	r3, [r7, #48]
 411 00d6 3A6B     		ldr	r2, [r7, #48]
 412 00d8 1A61     		str	r2, [r3, #16]
 936:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 937:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Event lists are always in priority order. */
 938:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - (
 413              		.loc 1 938 0
 414 00da BB6A     		ldr	r3, [r7, #40]
 415 00dc C3F10702 		rsb	r2, r3, #7
 416 00e0 3B6B     		ldr	r3, [r7, #48]
 417 00e2 9A61     		str	r2, [r3, #24]
 939:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 418              		.loc 1 939 0
 419 00e4 3B6B     		ldr	r3, [r7, #48]
 420 00e6 3A6B     		ldr	r2, [r7, #48]
 421 00e8 5A62     		str	r2, [r3, #36]
 940:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 28


 941:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 942:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 943:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 944:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 945:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* portCRITICAL_NESTING_IN_TCB */
 946:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 947:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 948:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 949:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->pxTaskTag = NULL;
 950:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 951:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* configUSE_APPLICATION_TASK_TAG */
 952:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 953:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 954:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 955:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->ulRunTimeCounter = 0UL;
 956:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 957:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* configGENERATE_RUN_TIME_STATS */
 958:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 959:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 960:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 961:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ul
 962:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 963:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #else
 964:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 965:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Avoid compiler warning about unreferenced parameter. */
 966:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ( void ) xRegions;
 967:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 968:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 969:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 970:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 971:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 972:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             memset( ( void * ) &( pxNewTCB->pvThreadLocalStoragePointers[ 0 ] ), 0x00, sizeof( pxNe
 973:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 974:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 975:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 976:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 977:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 978:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotif
 422              		.loc 1 978 0
 423 00ea 3B6B     		ldr	r3, [r7, #48]
 424 00ec 5433     		adds	r3, r3, #84
 425 00ee 1846     		mov	r0, r3
 426 00f0 0021     		movs	r1, #0
 427 00f2 0422     		movs	r2, #4
 428 00f4 FFF7FEFF 		bl	memset
 979:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyS
 429              		.loc 1 979 0
 430 00f8 3B6B     		ldr	r3, [r7, #48]
 431 00fa 5833     		adds	r3, r3, #88
 432 00fc 1846     		mov	r0, r3
 433 00fe 0021     		movs	r1, #0
 434 0100 0122     		movs	r2, #1
 435 0102 FFF7FEFF 		bl	memset
 980:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 981:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 982:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 983:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_NEWLIB_REENTRANT == 1 )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 29


 984:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 985:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Initialise this task's Newlib reent structure.
 986:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 987:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * for additional information. */
 988:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             _REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 989:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 990:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 991:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 992:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 993:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 994:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxNewTCB->ucDelayAborted = pdFALSE;
 995:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
 996:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
 997:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 998:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Initialize the TCB stack to look as if the task was already running,
 999:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * but had been interrupted by the scheduler.  The return address is set
1000:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * to the start of the task function. Once the stack has been initialised
1001:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * the top of stack variable is updated. */
1002:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
1003:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1004:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If the port has capability to detect stack overflow,
1005:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * pass the stack end address to the stack initialization
1006:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * function as well. */
1007:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1008:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1009:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #if ( portSTACK_GROWTH < 0 )
1010:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1011:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1012:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1013:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #else /* portSTACK_GROWTH */
1014:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1015:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1016:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1017:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #endif /* portSTACK_GROWTH */
1018:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1019:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #else /* portHAS_STACK_OVERFLOW_CHECKING */
1020:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1021:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvPar
1022:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1023:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1024:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1025:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #else /* portUSING_MPU_WRAPPERS */
1026:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1027:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If the port has capability to detect stack overflow,
1028:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * pass the stack end address to the stack initialization
1029:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * function as well. */
1030:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1031:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1032:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #if ( portSTACK_GROWTH < 0 )
1033:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1034:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1035:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1036:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #else /* portSTACK_GROWTH */
1037:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1038:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1039:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1040:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #endif /* portSTACK_GROWTH */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 30


1041:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1042:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #else /* portHAS_STACK_OVERFLOW_CHECKING */
1043:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1044:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvPar
 436              		.loc 1 1044 0
 437 0106 B869     		ldr	r0, [r7, #24]
 438 0108 F968     		ldr	r1, [r7, #12]
 439 010a 3A68     		ldr	r2, [r7]
 440 010c FFF7FEFF 		bl	pxPortInitialiseStack
 441 0110 0246     		mov	r2, r0
 442 0112 3B6B     		ldr	r3, [r7, #48]
 443 0114 1A60     		str	r2, [r3]
1045:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1046:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1047:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1048:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS */
1049:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1050:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( pxCreatedTask != NULL )
 444              		.loc 1 1050 0
 445 0116 FB6A     		ldr	r3, [r7, #44]
 446 0118 002B     		cmp	r3, #0
 447 011a 02D0     		beq	.L9
1051:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
1052:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Pass the handle out in an anonymous way.  The handle can be used to
1053:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * change the created task's priority, delete the created task, etc.*/
1054:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 448              		.loc 1 1054 0
 449 011c FB6A     		ldr	r3, [r7, #44]
 450 011e 3A6B     		ldr	r2, [r7, #48]
 451 0120 1A60     		str	r2, [r3]
 452              	.L9:
1055:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
1056:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
1057:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
1058:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1059:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
1060:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 453              		.loc 1 1060 0
 454 0122 2037     		adds	r7, r7, #32
 455              	.LCFI8:
 456              		.cfi_def_cfa_offset 8
 457 0124 BD46     		mov	sp, r7
 458              	.LCFI9:
 459              		.cfi_def_cfa_register 13
 460              		@ sp needed
 461 0126 80BD     		pop	{r7, pc}
 462              		.cfi_endproc
 463              	.LFE6:
 465              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 466              		.align	2
 467              		.thumb
 468              		.thumb_func
 470              	prvAddNewTaskToReadyList:
 471              	.LFB7:
1061:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1062:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1063:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 31


1064:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 472              		.loc 1 1064 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476 0000 80B5     		push	{r7, lr}
 477              	.LCFI10:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 82B0     		sub	sp, sp, #8
 482              	.LCFI11:
 483              		.cfi_def_cfa_offset 16
 484 0004 00AF     		add	r7, sp, #0
 485              	.LCFI12:
 486              		.cfi_def_cfa_register 7
 487 0006 7860     		str	r0, [r7, #4]
1065:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
1066:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * updated. */
1067:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskENTER_CRITICAL();
 488              		.loc 1 1067 0
 489 0008 FFF7FEFF 		bl	vPortEnterCritical
1068:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
1069:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxCurrentNumberOfTasks++;
 490              		.loc 1 1069 0
 491 000c 2D4B     		ldr	r3, .L24
 492 000e 1B68     		ldr	r3, [r3]
 493 0010 0133     		adds	r3, r3, #1
 494 0012 2C4A     		ldr	r2, .L24
 495 0014 1360     		str	r3, [r2]
1070:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1071:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxCurrentTCB == NULL )
 496              		.loc 1 1071 0
 497 0016 2C4B     		ldr	r3, .L24+4
 498 0018 1B68     		ldr	r3, [r3]
 499 001a 002B     		cmp	r3, #0
 500 001c 09D1     		bne	.L21
1072:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1073:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* There are no other tasks, or all the other tasks are in
1074:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * the suspended state - make this the current task. */
1075:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxCurrentTCB = pxNewTCB;
 501              		.loc 1 1075 0
 502 001e 2A4A     		ldr	r2, .L24+4
 503 0020 7B68     		ldr	r3, [r7, #4]
 504 0022 1360     		str	r3, [r2]
1076:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1077:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 505              		.loc 1 1077 0
 506 0024 274B     		ldr	r3, .L24
 507 0026 1B68     		ldr	r3, [r3]
 508 0028 012B     		cmp	r3, #1
 509 002a 10D1     		bne	.L22
1078:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1079:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* This is the first task to be created so do the preliminary
1080:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * initialisation required.  We will not recover if this call
1081:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * fails, but we will report the failure. */
1082:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvInitialiseTaskLists();
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 32


 510              		.loc 1 1082 0
 511 002c FFF7FEFF 		bl	prvInitialiseTaskLists
 512 0030 0DE0     		b	.L22
 513              	.L21:
1083:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1084:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1085:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1086:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1087:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1088:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1089:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1090:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1091:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If the scheduler is not already running, make this task the
1092:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * current task if it is the highest priority task to be created
1093:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * so far. */
1094:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( xSchedulerRunning == pdFALSE )
 514              		.loc 1 1094 0
 515 0032 264B     		ldr	r3, .L24+8
 516 0034 1B68     		ldr	r3, [r3]
 517 0036 002B     		cmp	r3, #0
 518 0038 09D1     		bne	.L22
1095:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1096:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 519              		.loc 1 1096 0
 520 003a 234B     		ldr	r3, .L24+4
 521 003c 1B68     		ldr	r3, [r3]
 522 003e DA6A     		ldr	r2, [r3, #44]
 523 0040 7B68     		ldr	r3, [r7, #4]
 524 0042 DB6A     		ldr	r3, [r3, #44]
 525 0044 9A42     		cmp	r2, r3
 526 0046 02D8     		bhi	.L22
1097:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1098:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxCurrentTCB = pxNewTCB;
 527              		.loc 1 1098 0
 528 0048 1F4A     		ldr	r2, .L24+4
 529 004a 7B68     		ldr	r3, [r7, #4]
 530 004c 1360     		str	r3, [r2]
 531              	.L22:
1099:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxTaskNumber++;
 532              		.loc 1 1111 0
 533 004e 204B     		ldr	r3, .L24+12
 534 0050 1B68     		ldr	r3, [r3]
 535 0052 0133     		adds	r3, r3, #1
 536 0054 1E4A     		ldr	r2, .L24+12
 537 0056 1360     		str	r3, [r2]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 33


1112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
1114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Add a counter into the TCB for tracing only. */
1116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxNewTCB->uxTCBNumber = uxTaskNumber;
 538              		.loc 1 1116 0
 539 0058 1D4B     		ldr	r3, .L24+12
 540 005a 1A68     		ldr	r2, [r3]
 541 005c 7B68     		ldr	r3, [r7, #4]
 542 005e 5A64     		str	r2, [r3, #68]
1117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_TRACE_FACILITY */
1119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         traceTASK_CREATE( pxNewTCB );
1120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         prvAddTaskToReadyList( pxNewTCB );
 543              		.loc 1 1121 0
 544 0060 7B68     		ldr	r3, [r7, #4]
 545 0062 DB6A     		ldr	r3, [r3, #44]
 546 0064 1A46     		mov	r2, r3
 547 0066 0123     		movs	r3, #1
 548 0068 03FA02F2 		lsl	r2, r3, r2
 549 006c 194B     		ldr	r3, .L24+16
 550 006e 1B68     		ldr	r3, [r3]
 551 0070 1343     		orrs	r3, r3, r2
 552 0072 184A     		ldr	r2, .L24+16
 553 0074 1360     		str	r3, [r2]
 554 0076 7B68     		ldr	r3, [r7, #4]
 555 0078 DA6A     		ldr	r2, [r3, #44]
 556 007a 1346     		mov	r3, r2
 557 007c 9B00     		lsls	r3, r3, #2
 558 007e 1344     		add	r3, r3, r2
 559 0080 9B00     		lsls	r3, r3, #2
 560 0082 154A     		ldr	r2, .L24+20
 561 0084 1A44     		add	r2, r2, r3
 562 0086 7B68     		ldr	r3, [r7, #4]
 563 0088 0433     		adds	r3, r3, #4
 564 008a 1046     		mov	r0, r2
 565 008c 1946     		mov	r1, r3
 566 008e FFF7FEFF 		bl	vListInsertEnd
1122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portSETUP_TCB( pxNewTCB );
1124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
1125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskEXIT_CRITICAL();
 567              		.loc 1 1125 0
 568 0092 FFF7FEFF 		bl	vPortExitCritical
1126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( xSchedulerRunning != pdFALSE )
 569              		.loc 1 1127 0
 570 0096 0D4B     		ldr	r3, .L24+8
 571 0098 1B68     		ldr	r3, [r3]
 572 009a 002B     		cmp	r3, #0
 573 009c 0ED0     		beq	.L20
1128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
1129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If the created task is of a higher priority than the current task
1130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * then it should run now. */
1131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 574              		.loc 1 1131 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 34


 575 009e 0A4B     		ldr	r3, .L24+4
 576 00a0 1B68     		ldr	r3, [r3]
 577 00a2 DA6A     		ldr	r2, [r3, #44]
 578 00a4 7B68     		ldr	r3, [r7, #4]
 579 00a6 DB6A     		ldr	r3, [r3, #44]
 580 00a8 9A42     		cmp	r2, r3
 581 00aa 07D2     		bcs	.L20
1132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             taskYIELD_IF_USING_PREEMPTION();
 582              		.loc 1 1133 0
 583 00ac 0B4B     		ldr	r3, .L24+24
 584 00ae 4FF08052 		mov	r2, #268435456
 585 00b2 1A60     		str	r2, [r3]
 586              	@ 1133 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 587 00b4 BFF34F8F 		dsb
 588              	@ 0 "" 2
 589              	@ 1133 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 590 00b8 BFF36F8F 		isb
 591              	@ 0 "" 2
 592              		.thumb
 593              	.L20:
1134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
1140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
1141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
1142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
1144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 594              		.loc 1 1144 0
 595 00bc 0837     		adds	r7, r7, #8
 596              	.LCFI13:
 597              		.cfi_def_cfa_offset 8
 598 00be BD46     		mov	sp, r7
 599              	.LCFI14:
 600              		.cfi_def_cfa_register 13
 601              		@ sp needed
 602 00c0 80BD     		pop	{r7, pc}
 603              	.L25:
 604 00c2 00BF     		.align	2
 605              	.L24:
 606 00c4 00000000 		.word	uxCurrentNumberOfTasks
 607 00c8 00000000 		.word	pxCurrentTCB
 608 00cc 00000000 		.word	xSchedulerRunning
 609 00d0 00000000 		.word	uxTaskNumber
 610 00d4 00000000 		.word	uxTopReadyPriority
 611 00d8 00000000 		.word	pxReadyTasksLists
 612 00dc 04ED00E0 		.word	-536810236
 613              		.cfi_endproc
 614              	.LFE7:
 616              		.section	.text.vTaskDelete,"ax",%progbits
 617              		.align	2
 618              		.global	vTaskDelete
 619              		.thumb
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 35


 620              		.thumb_func
 622              	vTaskDelete:
 623              	.LFB8:
1145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskDelete( TaskHandle_t xTaskToDelete )
1150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 624              		.loc 1 1150 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 16
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              	.LCFI15:
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 7, -8
 632              		.cfi_offset 14, -4
 633 0002 84B0     		sub	sp, sp, #16
 634              	.LCFI16:
 635              		.cfi_def_cfa_offset 24
 636 0004 00AF     		add	r7, sp, #0
 637              	.LCFI17:
 638              		.cfi_def_cfa_register 7
 639 0006 7860     		str	r0, [r7, #4]
1151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
1152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 640              		.loc 1 1153 0
 641 0008 FFF7FEFF 		bl	vPortEnterCritical
1154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If null is passed in here then it is the calling task that is
1156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * being deleted. */
1157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 642              		.loc 1 1157 0
 643 000c 7B68     		ldr	r3, [r7, #4]
 644 000e 002B     		cmp	r3, #0
 645 0010 02D1     		bne	.L27
 646              		.loc 1 1157 0 is_stmt 0 discriminator 1
 647 0012 384B     		ldr	r3, .L37
 648 0014 1B68     		ldr	r3, [r3]
 649 0016 00E0     		b	.L28
 650              	.L27:
 651              		.loc 1 1157 0 discriminator 2
 652 0018 7B68     		ldr	r3, [r7, #4]
 653              	.L28:
 654              		.loc 1 1157 0 discriminator 4
 655 001a FB60     		str	r3, [r7, #12]
1158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Remove task from the ready/delayed list. */
1160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 656              		.loc 1 1160 0 is_stmt 1 discriminator 4
 657 001c FB68     		ldr	r3, [r7, #12]
 658 001e 0433     		adds	r3, r3, #4
 659 0020 1846     		mov	r0, r3
 660 0022 FFF7FEFF 		bl	uxListRemove
 661 0026 0346     		mov	r3, r0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 36


 662 0028 002B     		cmp	r3, #0
 663 002a 15D1     		bne	.L29
1161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 664              		.loc 1 1162 0
 665 002c FB68     		ldr	r3, [r7, #12]
 666 002e DA6A     		ldr	r2, [r3, #44]
 667 0030 3149     		ldr	r1, .L37+4
 668 0032 1346     		mov	r3, r2
 669 0034 9B00     		lsls	r3, r3, #2
 670 0036 1344     		add	r3, r3, r2
 671 0038 9B00     		lsls	r3, r3, #2
 672 003a 0B44     		add	r3, r3, r1
 673 003c 1B68     		ldr	r3, [r3]
 674 003e 002B     		cmp	r3, #0
 675 0040 0AD1     		bne	.L29
 676              		.loc 1 1162 0 is_stmt 0 discriminator 1
 677 0042 FB68     		ldr	r3, [r7, #12]
 678 0044 DB6A     		ldr	r3, [r3, #44]
 679 0046 1A46     		mov	r2, r3
 680 0048 0123     		movs	r3, #1
 681 004a 9340     		lsls	r3, r3, r2
 682 004c DA43     		mvns	r2, r3
 683 004e 2B4B     		ldr	r3, .L37+8
 684 0050 1B68     		ldr	r3, [r3]
 685 0052 1340     		ands	r3, r3, r2
 686 0054 294A     		ldr	r2, .L37+8
 687 0056 1360     		str	r3, [r2]
 688              	.L29:
1163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Is the task waiting on an event also? */
1170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 689              		.loc 1 1170 0 is_stmt 1
 690 0058 FB68     		ldr	r3, [r7, #12]
 691 005a 9B6A     		ldr	r3, [r3, #40]
 692 005c 002B     		cmp	r3, #0
 693 005e 04D0     		beq	.L31
1171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 694              		.loc 1 1172 0
 695 0060 FB68     		ldr	r3, [r7, #12]
 696 0062 1833     		adds	r3, r3, #24
 697 0064 1846     		mov	r0, r3
 698 0066 FFF7FEFF 		bl	uxListRemove
 699              	.L31:
1173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Increment the uxTaskNumber also so kernel aware debuggers can
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 37


1180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * detect that the task lists need re-generating.  This is done before
1181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * not return. */
1183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxTaskNumber++;
 700              		.loc 1 1183 0
 701 006a 254B     		ldr	r3, .L37+12
 702 006c 1B68     		ldr	r3, [r3]
 703 006e 0133     		adds	r3, r3, #1
 704 0070 234A     		ldr	r2, .L37+12
 705 0072 1360     		str	r3, [r2]
1184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB == pxCurrentTCB )
 706              		.loc 1 1185 0
 707 0074 1F4B     		ldr	r3, .L37
 708 0076 1B68     		ldr	r3, [r3]
 709 0078 FA68     		ldr	r2, [r7, #12]
 710 007a 9A42     		cmp	r2, r3
 711 007c 0BD1     		bne	.L32
1186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* A task is deleting itself.  This cannot complete within the
1188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * task itself, as a context switch to another task is required.
1189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * Place the task in the termination list.  The idle task will
1190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * check the termination list and free up any memory allocated by
1191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the scheduler for the TCB and stack of the deleted task. */
1192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
 712              		.loc 1 1192 0
 713 007e FB68     		ldr	r3, [r7, #12]
 714 0080 0433     		adds	r3, r3, #4
 715 0082 2048     		ldr	r0, .L37+16
 716 0084 1946     		mov	r1, r3
 717 0086 FFF7FEFF 		bl	vListInsertEnd
1193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Increment the ucTasksDeleted variable so the idle task knows
1195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * there is a task that has been deleted and that it should therefore
1196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * check the xTasksWaitingTermination list. */
1197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ++uxDeletedTasksWaitingCleanUp;
 718              		.loc 1 1197 0
 719 008a 1F4B     		ldr	r3, .L37+20
 720 008c 1B68     		ldr	r3, [r3]
 721 008e 0133     		adds	r3, r3, #1
 722 0090 1D4A     		ldr	r2, .L37+20
 723 0092 1360     		str	r3, [r2]
 724 0094 09E0     		b	.L33
 725              	.L32:
1198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 traceTASK_DELETE( pxTCB );
1202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The pre-delete hook is primarily for the Windows simulator,
1204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * in which Windows specific clean up operations are performed,
1205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * after which it is not possible to yield away from this task -
1206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * hence xYieldPending is used to latch that a context switch is
1207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * required. */
1208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 38


1211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 --uxCurrentNumberOfTasks;
 726              		.loc 1 1212 0
 727 0096 1D4B     		ldr	r3, .L37+24
 728 0098 1B68     		ldr	r3, [r3]
 729 009a 013B     		subs	r3, r3, #1
 730 009c 1B4A     		ldr	r2, .L37+24
 731 009e 1360     		str	r3, [r2]
1213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 traceTASK_DELETE( pxTCB );
1214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvDeleteTCB( pxTCB );
 732              		.loc 1 1214 0
 733 00a0 F868     		ldr	r0, [r7, #12]
 734 00a2 FFF7FEFF 		bl	prvDeleteTCB
1215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Reset the next expected unblock time in case it referred to
1217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the task that has just been deleted. */
1218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvResetNextTaskUnblockTime();
 735              		.loc 1 1218 0
 736 00a6 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 737              	.L33:
1219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 738              		.loc 1 1221 0
 739 00aa FFF7FEFF 		bl	vPortExitCritical
1222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Force a reschedule if it is the currently running task that has just
1224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * been deleted. */
1225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xSchedulerRunning != pdFALSE )
 740              		.loc 1 1225 0
 741 00ae 184B     		ldr	r3, .L37+28
 742 00b0 1B68     		ldr	r3, [r3]
 743 00b2 002B     		cmp	r3, #0
 744 00b4 1AD0     		beq	.L26
1226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB == pxCurrentTCB )
 745              		.loc 1 1227 0
 746 00b6 0F4B     		ldr	r3, .L37
 747 00b8 1B68     		ldr	r3, [r3]
 748 00ba FA68     		ldr	r2, [r7, #12]
 749 00bc 9A42     		cmp	r2, r3
 750 00be 15D1     		bne	.L26
1228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
 751              		.loc 1 1229 0
 752 00c0 144B     		ldr	r3, .L37+32
 753 00c2 1B68     		ldr	r3, [r3]
 754 00c4 002B     		cmp	r3, #0
 755 00c6 09D0     		beq	.L35
 756              	.LBB128:
 757              	.LBB129:
 758              		.loc 2 197 0 discriminator 1
 759              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 760 00c8 4FF05003 			mov r3, #80												
 761 00cc 83F31188 		msr basepri, r3											
 762 00d0 BFF36F8F 		isb														
 763 00d4 BFF34F8F 		dsb														
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 39


 764              	
 765              	@ 0 "" 2
 766              		.thumb
 767 00d8 BB60     		str	r3, [r7, #8]
 768              	.L36:
 769              	.LBE129:
 770              	.LBE128:
 771              		.loc 1 1229 0 discriminator 1
 772 00da FEE7     		b	.L36
 773              	.L35:
1230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 portYIELD_WITHIN_API();
 774              		.loc 1 1230 0
 775 00dc 0E4B     		ldr	r3, .L37+36
 776 00de 4FF08052 		mov	r2, #268435456
 777 00e2 1A60     		str	r2, [r3]
 778              	@ 1230 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 779 00e4 BFF34F8F 		dsb
 780              	@ 0 "" 2
 781              	@ 1230 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 782 00e8 BFF36F8F 		isb
 783              	@ 0 "" 2
 784              		.thumb
 785              	.L26:
1231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1232:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1233:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1234:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1235:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1236:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1237:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 786              		.loc 1 1237 0
 787 00ec 1037     		adds	r7, r7, #16
 788              	.LCFI18:
 789              		.cfi_def_cfa_offset 8
 790 00ee BD46     		mov	sp, r7
 791              	.LCFI19:
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 00f0 80BD     		pop	{r7, pc}
 795              	.L38:
 796 00f2 00BF     		.align	2
 797              	.L37:
 798 00f4 00000000 		.word	pxCurrentTCB
 799 00f8 00000000 		.word	pxReadyTasksLists
 800 00fc 00000000 		.word	uxTopReadyPriority
 801 0100 00000000 		.word	uxTaskNumber
 802 0104 00000000 		.word	xTasksWaitingTermination
 803 0108 00000000 		.word	uxDeletedTasksWaitingCleanUp
 804 010c 00000000 		.word	uxCurrentNumberOfTasks
 805 0110 00000000 		.word	xSchedulerRunning
 806 0114 00000000 		.word	uxSchedulerSuspended
 807 0118 04ED00E0 		.word	-536810236
 808              		.cfi_endproc
 809              	.LFE8:
 811              		.section	.text.vTaskDelayUntil,"ax",%progbits
 812              		.align	2
 813              		.global	vTaskDelayUntil
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 40


 814              		.thumb
 815              		.thumb_func
 817              	vTaskDelayUntil:
 818              	.LFB9:
1238:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1239:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1240:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1241:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1242:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1243:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1244:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
1245:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                           const TickType_t xTimeIncrement )
1246:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 819              		.loc 1 1246 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 40
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              	.LCFI20:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 8AB0     		sub	sp, sp, #40
 829              	.LCFI21:
 830              		.cfi_def_cfa_offset 48
 831 0004 00AF     		add	r7, sp, #0
 832              	.LCFI22:
 833              		.cfi_def_cfa_register 7
 834 0006 7860     		str	r0, [r7, #4]
 835 0008 3960     		str	r1, [r7]
1247:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TickType_t xTimeToWake;
1248:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 836              		.loc 1 1248 0
 837 000a 0023     		movs	r3, #0
 838 000c 7B62     		str	r3, [r7, #36]
1249:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1250:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( pxPreviousWakeTime );
 839              		.loc 1 1250 0
 840 000e 7B68     		ldr	r3, [r7, #4]
 841 0010 002B     		cmp	r3, #0
 842 0012 09D1     		bne	.L40
 843              	.LBB130:
 844              	.LBB131:
 845              		.loc 2 197 0 discriminator 1
 846              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 847 0014 4FF05003 			mov r3, #80												
 848 0018 83F31188 		msr basepri, r3											
 849 001c BFF36F8F 		isb														
 850 0020 BFF34F8F 		dsb														
 851              	
 852              	@ 0 "" 2
 853              		.thumb
 854 0024 7B61     		str	r3, [r7, #20]
 855              	.L41:
 856              	.LBE131:
 857              	.LBE130:
 858              		.loc 1 1250 0 discriminator 1
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 41


 859 0026 FEE7     		b	.L41
 860              	.L40:
1251:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 861              		.loc 1 1251 0
 862 0028 3B68     		ldr	r3, [r7]
 863 002a 002B     		cmp	r3, #0
 864 002c 09D1     		bne	.L42
 865              	.LBB132:
 866              	.LBB133:
 867              		.loc 2 197 0 discriminator 1
 868              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 869 002e 4FF05003 			mov r3, #80												
 870 0032 83F31188 		msr basepri, r3											
 871 0036 BFF36F8F 		isb														
 872 003a BFF34F8F 		dsb														
 873              	
 874              	@ 0 "" 2
 875              		.thumb
 876 003e 3B61     		str	r3, [r7, #16]
 877              	.L43:
 878              	.LBE133:
 879              	.LBE132:
 880              		.loc 1 1251 0 discriminator 2
 881 0040 FEE7     		b	.L43
 882              	.L42:
1252:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 883              		.loc 1 1252 0
 884 0042 294B     		ldr	r3, .L51
 885 0044 1B68     		ldr	r3, [r3]
 886 0046 002B     		cmp	r3, #0
 887 0048 09D0     		beq	.L44
 888              	.LBB134:
 889              	.LBB135:
 890              		.loc 2 197 0 discriminator 1
 891              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 892 004a 4FF05003 			mov r3, #80												
 893 004e 83F31188 		msr basepri, r3											
 894 0052 BFF36F8F 		isb														
 895 0056 BFF34F8F 		dsb														
 896              	
 897              	@ 0 "" 2
 898              		.thumb
 899 005a FB60     		str	r3, [r7, #12]
 900              	.L45:
 901              	.LBE135:
 902              	.LBE134:
 903              		.loc 1 1252 0 discriminator 3
 904 005c FEE7     		b	.L45
 905              	.L44:
1253:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1254:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         vTaskSuspendAll();
 906              		.loc 1 1254 0
 907 005e FFF7FEFF 		bl	vTaskSuspendAll
 908              	.LBB136:
1255:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1256:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Minor optimisation.  The tick count cannot change in this
1257:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * block. */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 42


1258:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             const TickType_t xConstTickCount = xTickCount;
 909              		.loc 1 1258 0
 910 0062 224B     		ldr	r3, .L51+4
 911 0064 1B68     		ldr	r3, [r3]
 912 0066 3B62     		str	r3, [r7, #32]
1259:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1260:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Generate the tick time at which the task wants to wake. */
1261:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 913              		.loc 1 1261 0
 914 0068 7B68     		ldr	r3, [r7, #4]
 915 006a 1A68     		ldr	r2, [r3]
 916 006c 3B68     		ldr	r3, [r7]
 917 006e 1344     		add	r3, r3, r2
 918 0070 FB61     		str	r3, [r7, #28]
1262:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1263:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( xConstTickCount < *pxPreviousWakeTime )
 919              		.loc 1 1263 0
 920 0072 7B68     		ldr	r3, [r7, #4]
 921 0074 1A68     		ldr	r2, [r3]
 922 0076 3B6A     		ldr	r3, [r7, #32]
 923 0078 9A42     		cmp	r2, r3
 924 007a 0BD9     		bls	.L46
1264:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1265:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The tick count has overflowed since this function was
1266:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * lasted called.  In this case the only time we should ever
1267:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * actually delay is if the wake time has also  overflowed,
1268:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * and the wake time is greater than the tick time.  When this
1269:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * is the case it is as if neither time had overflowed. */
1270:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
 925              		.loc 1 1270 0
 926 007c 7B68     		ldr	r3, [r7, #4]
 927 007e 1A68     		ldr	r2, [r3]
 928 0080 FB69     		ldr	r3, [r7, #28]
 929 0082 9A42     		cmp	r2, r3
 930 0084 11D9     		bls	.L47
 931              		.loc 1 1270 0 is_stmt 0 discriminator 1
 932 0086 FA69     		ldr	r2, [r7, #28]
 933 0088 3B6A     		ldr	r3, [r7, #32]
 934 008a 9A42     		cmp	r2, r3
 935 008c 0DD9     		bls	.L47
1271:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1272:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xShouldDelay = pdTRUE;
 936              		.loc 1 1272 0 is_stmt 1
 937 008e 0123     		movs	r3, #1
 938 0090 7B62     		str	r3, [r7, #36]
 939 0092 0AE0     		b	.L47
 940              	.L46:
1273:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1274:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1275:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1276:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1277:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1278:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1279:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1280:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1281:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The tick time has not overflowed.  In this case we will
1282:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * delay if either the wake time has overflowed, and/or the
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 43


1283:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * tick time is less than the wake time. */
1284:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
 941              		.loc 1 1284 0
 942 0094 7B68     		ldr	r3, [r7, #4]
 943 0096 1A68     		ldr	r2, [r3]
 944 0098 FB69     		ldr	r3, [r7, #28]
 945 009a 9A42     		cmp	r2, r3
 946 009c 03D8     		bhi	.L48
 947              		.loc 1 1284 0 is_stmt 0 discriminator 1
 948 009e FA69     		ldr	r2, [r7, #28]
 949 00a0 3B6A     		ldr	r3, [r7, #32]
 950 00a2 9A42     		cmp	r2, r3
 951 00a4 01D9     		bls	.L47
 952              	.L48:
1285:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1286:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xShouldDelay = pdTRUE;
 953              		.loc 1 1286 0 is_stmt 1
 954 00a6 0123     		movs	r3, #1
 955 00a8 7B62     		str	r3, [r7, #36]
 956              	.L47:
1287:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1288:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1289:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1290:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1291:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1292:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1293:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1294:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Update the wake time ready for the next call. */
1295:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             *pxPreviousWakeTime = xTimeToWake;
 957              		.loc 1 1295 0
 958 00aa 7B68     		ldr	r3, [r7, #4]
 959 00ac FA69     		ldr	r2, [r7, #28]
 960 00ae 1A60     		str	r2, [r3]
1296:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1297:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( xShouldDelay != pdFALSE )
 961              		.loc 1 1297 0
 962 00b0 7B6A     		ldr	r3, [r7, #36]
 963 00b2 002B     		cmp	r3, #0
 964 00b4 06D0     		beq	.L49
1298:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1299:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 traceTASK_DELAY_UNTIL( xTimeToWake );
1300:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1301:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* prvAddCurrentTaskToDelayedList() needs the block time, not
1302:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the time to wake, so subtract the current tick count. */
1303:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
 965              		.loc 1 1303 0
 966 00b6 FA69     		ldr	r2, [r7, #28]
 967 00b8 3B6A     		ldr	r3, [r7, #32]
 968 00ba D31A     		subs	r3, r2, r3
 969 00bc 1846     		mov	r0, r3
 970 00be 0021     		movs	r1, #0
 971 00c0 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 972              	.L49:
 973              	.LBE136:
1304:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1305:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1306:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 44


1307:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1308:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1309:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1310:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xAlreadyYielded = xTaskResumeAll();
 974              		.loc 1 1310 0
 975 00c4 FFF7FEFF 		bl	xTaskResumeAll
 976 00c8 B861     		str	r0, [r7, #24]
1311:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1312:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1313:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * have put ourselves to sleep. */
1314:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xAlreadyYielded == pdFALSE )
 977              		.loc 1 1314 0
 978 00ca BB69     		ldr	r3, [r7, #24]
 979 00cc 002B     		cmp	r3, #0
 980 00ce 07D1     		bne	.L39
1315:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1316:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             portYIELD_WITHIN_API();
 981              		.loc 1 1316 0
 982 00d0 074B     		ldr	r3, .L51+8
 983 00d2 4FF08052 		mov	r2, #268435456
 984 00d6 1A60     		str	r2, [r3]
 985              	@ 1316 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 986 00d8 BFF34F8F 		dsb
 987              	@ 0 "" 2
 988              	@ 1316 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 989 00dc BFF36F8F 		isb
 990              	@ 0 "" 2
 991              		.thumb
 992              	.L39:
1317:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1318:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1319:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1320:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1321:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1322:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 993              		.loc 1 1322 0
 994 00e0 2837     		adds	r7, r7, #40
 995              	.LCFI23:
 996              		.cfi_def_cfa_offset 8
 997 00e2 BD46     		mov	sp, r7
 998              	.LCFI24:
 999              		.cfi_def_cfa_register 13
 1000              		@ sp needed
 1001 00e4 80BD     		pop	{r7, pc}
 1002              	.L52:
 1003 00e6 00BF     		.align	2
 1004              	.L51:
 1005 00e8 00000000 		.word	uxSchedulerSuspended
 1006 00ec 00000000 		.word	xTickCount
 1007 00f0 04ED00E0 		.word	-536810236
 1008              		.cfi_endproc
 1009              	.LFE9:
 1011              		.section	.text.vTaskDelay,"ax",%progbits
 1012              		.align	2
 1013              		.global	vTaskDelay
 1014              		.thumb
 1015              		.thumb_func
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 45


 1017              	vTaskDelay:
 1018              	.LFB10:
1323:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1324:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1325:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1326:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1327:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1328:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1329:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskDelay( const TickType_t xTicksToDelay )
1330:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 1019              		.loc 1 1330 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 16
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023 0000 80B5     		push	{r7, lr}
 1024              	.LCFI25:
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 84B0     		sub	sp, sp, #16
 1029              	.LCFI26:
 1030              		.cfi_def_cfa_offset 24
 1031 0004 00AF     		add	r7, sp, #0
 1032              	.LCFI27:
 1033              		.cfi_def_cfa_register 7
 1034 0006 7860     		str	r0, [r7, #4]
1331:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 1035              		.loc 1 1331 0
 1036 0008 0023     		movs	r3, #0
 1037 000a FB60     		str	r3, [r7, #12]
1332:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1333:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* A delay time of zero just forces a reschedule. */
1334:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xTicksToDelay > ( TickType_t ) 0U )
 1038              		.loc 1 1334 0
 1039 000c 7B68     		ldr	r3, [r7, #4]
 1040 000e 002B     		cmp	r3, #0
 1041 0010 16D0     		beq	.L54
1335:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1336:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             configASSERT( uxSchedulerSuspended == 0 );
 1042              		.loc 1 1336 0
 1043 0012 124B     		ldr	r3, .L58
 1044 0014 1B68     		ldr	r3, [r3]
 1045 0016 002B     		cmp	r3, #0
 1046 0018 09D0     		beq	.L55
 1047              	.LBB137:
 1048              	.LBB138:
 1049              		.loc 2 197 0 discriminator 1
 1050              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1051 001a 4FF05003 			mov r3, #80												
 1052 001e 83F31188 		msr basepri, r3											
 1053 0022 BFF36F8F 		isb														
 1054 0026 BFF34F8F 		dsb														
 1055              	
 1056              	@ 0 "" 2
 1057              		.thumb
 1058 002a BB60     		str	r3, [r7, #8]
 1059              	.L56:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 46


 1060              	.LBE138:
 1061              	.LBE137:
 1062              		.loc 1 1336 0 discriminator 1
 1063 002c FEE7     		b	.L56
 1064              	.L55:
1337:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vTaskSuspendAll();
 1065              		.loc 1 1337 0
 1066 002e FFF7FEFF 		bl	vTaskSuspendAll
1338:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1339:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 traceTASK_DELAY();
1340:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1341:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* A task that is removed from the event list while the
1342:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * scheduler is suspended will not get placed in the ready
1343:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * list or removed from the blocked list until the scheduler
1344:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * is resumed.
1345:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  *
1346:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * This task cannot be in an event list as it is the currently
1347:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * executing task. */
1348:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 1067              		.loc 1 1348 0
 1068 0032 7868     		ldr	r0, [r7, #4]
 1069 0034 0021     		movs	r1, #0
 1070 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
1349:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1350:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xAlreadyYielded = xTaskResumeAll();
 1071              		.loc 1 1350 0
 1072 003a FFF7FEFF 		bl	xTaskResumeAll
 1073 003e F860     		str	r0, [r7, #12]
 1074              	.L54:
1351:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1352:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1353:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1354:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1355:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1356:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1357:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1358:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * have put ourselves to sleep. */
1359:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xAlreadyYielded == pdFALSE )
 1075              		.loc 1 1359 0
 1076 0040 FB68     		ldr	r3, [r7, #12]
 1077 0042 002B     		cmp	r3, #0
 1078 0044 07D1     		bne	.L53
1360:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1361:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             portYIELD_WITHIN_API();
 1079              		.loc 1 1361 0
 1080 0046 064B     		ldr	r3, .L58+4
 1081 0048 4FF08052 		mov	r2, #268435456
 1082 004c 1A60     		str	r2, [r3]
 1083              	@ 1361 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 1084 004e BFF34F8F 		dsb
 1085              	@ 0 "" 2
 1086              	@ 1361 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 1087 0052 BFF36F8F 		isb
 1088              	@ 0 "" 2
 1089              		.thumb
 1090              	.L53:
1362:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 47


1363:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1364:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1365:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1366:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1367:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 1091              		.loc 1 1367 0
 1092 0056 1037     		adds	r7, r7, #16
 1093              	.LCFI28:
 1094              		.cfi_def_cfa_offset 8
 1095 0058 BD46     		mov	sp, r7
 1096              	.LCFI29:
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 005a 80BD     		pop	{r7, pc}
 1100              	.L59:
 1101              		.align	2
 1102              	.L58:
 1103 005c 00000000 		.word	uxSchedulerSuspended
 1104 0060 04ED00E0 		.word	-536810236
 1105              		.cfi_endproc
 1106              	.LFE10:
 1108              		.section	.text.eTaskGetState,"ax",%progbits
 1109              		.align	2
 1110              		.global	eTaskGetState
 1111              		.thumb
 1112              		.thumb_func
 1114              	eTaskGetState:
 1115              	.LFB11:
1368:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1369:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1370:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1371:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1372:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDe
1373:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1374:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     eTaskState eTaskGetState( TaskHandle_t xTask )
1375:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 1116              		.loc 1 1375 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 40
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              	.LCFI30:
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 8AB0     		sub	sp, sp, #40
 1126              	.LCFI31:
 1127              		.cfi_def_cfa_offset 48
 1128 0004 00AF     		add	r7, sp, #0
 1129              	.LCFI32:
 1130              		.cfi_def_cfa_register 7
 1131 0006 7860     		str	r0, [r7, #4]
1376:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         eTaskState eReturn;
1377:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         List_t const * pxStateList, * pxDelayedList, * pxOverflowedDelayedList;
1378:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         const TCB_t * const pxTCB = xTask;
 1132              		.loc 1 1378 0
 1133 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 48


 1134 000a FB61     		str	r3, [r7, #28]
1379:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1380:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( pxTCB );
 1135              		.loc 1 1380 0
 1136 000c FB69     		ldr	r3, [r7, #28]
 1137 000e 002B     		cmp	r3, #0
 1138 0010 09D1     		bne	.L61
 1139              	.LBB139:
 1140              	.LBB140:
 1141              		.loc 2 197 0 discriminator 1
 1142              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1143 0012 4FF05003 			mov r3, #80												
 1144 0016 83F31188 		msr basepri, r3											
 1145 001a BFF36F8F 		isb														
 1146 001e BFF34F8F 		dsb														
 1147              	
 1148              	@ 0 "" 2
 1149              		.thumb
 1150 0022 FB60     		str	r3, [r7, #12]
 1151              	.L62:
 1152              	.LBE140:
 1153              	.LBE139:
 1154              		.loc 1 1380 0 discriminator 1
 1155 0024 FEE7     		b	.L62
 1156              	.L61:
1381:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1382:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxTCB == pxCurrentTCB )
 1157              		.loc 1 1382 0
 1158 0026 2D4B     		ldr	r3, .L77
 1159 0028 1B68     		ldr	r3, [r3]
 1160 002a FA69     		ldr	r2, [r7, #28]
 1161 002c 9A42     		cmp	r2, r3
 1162 002e 03D1     		bne	.L63
1383:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1384:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* The task calling this function is querying its own state. */
1385:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             eReturn = eRunning;
 1163              		.loc 1 1385 0
 1164 0030 0023     		movs	r3, #0
 1165 0032 87F82730 		strb	r3, [r7, #39]
 1166 0036 4BE0     		b	.L64
 1167              	.L63:
1386:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1387:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1388:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1389:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             taskENTER_CRITICAL();
 1168              		.loc 1 1389 0
 1169 0038 FFF7FEFF 		bl	vPortEnterCritical
1390:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1391:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 1170              		.loc 1 1391 0
 1171 003c FB69     		ldr	r3, [r7, #28]
 1172 003e 5B69     		ldr	r3, [r3, #20]
 1173 0040 BB61     		str	r3, [r7, #24]
1392:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
 1174              		.loc 1 1392 0
 1175 0042 274B     		ldr	r3, .L77+4
 1176 0044 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 49


 1177 0046 7B61     		str	r3, [r7, #20]
1393:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 1178              		.loc 1 1393 0
 1179 0048 264B     		ldr	r3, .L77+8
 1180 004a 1B68     		ldr	r3, [r3]
 1181 004c 3B61     		str	r3, [r7, #16]
1394:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1395:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             taskEXIT_CRITICAL();
 1182              		.loc 1 1395 0
 1183 004e FFF7FEFF 		bl	vPortExitCritical
1396:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1397:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 1184              		.loc 1 1397 0
 1185 0052 BA69     		ldr	r2, [r7, #24]
 1186 0054 7B69     		ldr	r3, [r7, #20]
 1187 0056 9A42     		cmp	r2, r3
 1188 0058 03D0     		beq	.L65
 1189              		.loc 1 1397 0 is_stmt 0 discriminator 1
 1190 005a BA69     		ldr	r2, [r7, #24]
 1191 005c 3B69     		ldr	r3, [r7, #16]
 1192 005e 9A42     		cmp	r2, r3
 1193 0060 03D1     		bne	.L66
 1194              	.L65:
1398:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1399:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The task being queried is referenced from one of the Blocked
1400:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * lists. */
1401:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 eReturn = eBlocked;
 1195              		.loc 1 1401 0 is_stmt 1
 1196 0062 0223     		movs	r3, #2
 1197 0064 87F82730 		strb	r3, [r7, #39]
 1198 0068 32E0     		b	.L64
 1199              	.L66:
1402:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1403:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1404:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
1405:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else if( pxStateList == &xSuspendedTaskList )
 1200              		.loc 1 1405 0
 1201 006a BB69     		ldr	r3, [r7, #24]
 1202 006c 1E4A     		ldr	r2, .L77+12
 1203 006e 9342     		cmp	r3, r2
 1204 0070 20D1     		bne	.L67
1406:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1407:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The task being queried is referenced from the suspended
1408:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * list.  Is it genuinely suspended or is it blocked
1409:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * indefinitely? */
1410:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 1205              		.loc 1 1410 0
 1206 0072 FB69     		ldr	r3, [r7, #28]
 1207 0074 9B6A     		ldr	r3, [r3, #40]
 1208 0076 002B     		cmp	r3, #0
 1209 0078 18D1     		bne	.L68
 1210              	.LBB141:
1411:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1412:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1413:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
1414:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 BaseType_t x;
1415:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 50


1416:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 /* The task does not appear on the event list item of
1417:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                  * and of the RTOS objects, but could still be in the
1418:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                  * blocked state if it is waiting on its notification
1419:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                  * rather than waiting on an object.  If not, is
1420:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                  * suspended. */
1421:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 eReturn = eSuspended;
 1211              		.loc 1 1421 0
 1212 007a 0323     		movs	r3, #3
 1213 007c 87F82730 		strb	r3, [r7, #39]
1422:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1423:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
 1214              		.loc 1 1423 0
 1215 0080 0023     		movs	r3, #0
 1216 0082 3B62     		str	r3, [r7, #32]
 1217 0084 0EE0     		b	.L69
 1218              	.L72:
1424:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 {
1425:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
 1219              		.loc 1 1425 0
 1220 0086 FA69     		ldr	r2, [r7, #28]
 1221 0088 3B6A     		ldr	r3, [r7, #32]
 1222 008a 1344     		add	r3, r3, r2
 1223 008c 5833     		adds	r3, r3, #88
 1224 008e 1B78     		ldrb	r3, [r3]
 1225 0090 DBB2     		uxtb	r3, r3
 1226 0092 012B     		cmp	r3, #1
 1227 0094 03D1     		bne	.L70
1426:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     {
1427:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                         eReturn = eBlocked;
 1228              		.loc 1 1427 0
 1229 0096 0223     		movs	r3, #2
 1230 0098 87F82730 		strb	r3, [r7, #39]
1428:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                         break;
 1231              		.loc 1 1428 0
 1232 009c 05E0     		b	.L71
 1233              	.L70:
1423:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 {
 1234              		.loc 1 1423 0 discriminator 2
 1235 009e 3B6A     		ldr	r3, [r7, #32]
 1236 00a0 0133     		adds	r3, r3, #1
 1237 00a2 3B62     		str	r3, [r7, #32]
 1238              	.L69:
1423:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 {
 1239              		.loc 1 1423 0 is_stmt 0 discriminator 1
 1240 00a4 3B6A     		ldr	r3, [r7, #32]
 1241 00a6 002B     		cmp	r3, #0
 1242 00a8 EDDD     		ble	.L72
 1243              	.L71:
 1244              	.LBE141:
 1245 00aa 11E0     		b	.L64
 1246              	.L68:
1429:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     }
1430:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 }
1431:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
1432:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #else /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1433:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
1434:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 eReturn = eSuspended;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 51


1435:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
1436:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1437:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1438:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
1439:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1440:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         eReturn = eBlocked;
 1247              		.loc 1 1440 0 is_stmt 1
 1248 00ac 0223     		movs	r3, #2
 1249 00ae 87F82730 		strb	r3, [r7, #39]
 1250 00b2 0DE0     		b	.L64
 1251              	.L67:
1441:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1442:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1443:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif /* if ( INCLUDE_vTaskSuspend == 1 ) */
1444:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1445:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
1446:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 1252              		.loc 1 1446 0
 1253 00b4 BB69     		ldr	r3, [r7, #24]
 1254 00b6 0D4A     		ldr	r2, .L77+16
 1255 00b8 9342     		cmp	r3, r2
 1256 00ba 02D0     		beq	.L74
 1257              		.loc 1 1446 0 is_stmt 0 discriminator 1
 1258 00bc BB69     		ldr	r3, [r7, #24]
 1259 00be 002B     		cmp	r3, #0
 1260 00c0 03D1     		bne	.L75
 1261              	.L74:
1447:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1448:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The task being queried is referenced from the deleted
1449:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * tasks list, or it is not referenced from any lists at
1450:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * all. */
1451:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     eReturn = eDeleted;
 1262              		.loc 1 1451 0 is_stmt 1
 1263 00c2 0423     		movs	r3, #4
 1264 00c4 87F82730 		strb	r3, [r7, #39]
 1265 00c8 02E0     		b	.L64
 1266              	.L75:
1452:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1453:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif
1454:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1455:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer
1456:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1457:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* If the task is not in any other state, it must be in the
1458:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * Ready (including pending ready) state. */
1459:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 eReturn = eReady;
 1267              		.loc 1 1459 0
 1268 00ca 0123     		movs	r3, #1
 1269 00cc 87F82730 		strb	r3, [r7, #39]
 1270              	.L64:
1460:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1461:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1462:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1463:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return eReturn;
 1271              		.loc 1 1463 0
 1272 00d0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
1464:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1273              		.loc 1 1464 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 52


 1274 00d4 1846     		mov	r0, r3
 1275 00d6 2837     		adds	r7, r7, #40
 1276              	.LCFI33:
 1277              		.cfi_def_cfa_offset 8
 1278 00d8 BD46     		mov	sp, r7
 1279              	.LCFI34:
 1280              		.cfi_def_cfa_register 13
 1281              		@ sp needed
 1282 00da 80BD     		pop	{r7, pc}
 1283              	.L78:
 1284              		.align	2
 1285              	.L77:
 1286 00dc 00000000 		.word	pxCurrentTCB
 1287 00e0 00000000 		.word	pxDelayedTaskList
 1288 00e4 00000000 		.word	pxOverflowDelayedTaskList
 1289 00e8 00000000 		.word	xSuspendedTaskList
 1290 00ec 00000000 		.word	xTasksWaitingTermination
 1291              		.cfi_endproc
 1292              	.LFE11:
 1294              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1295              		.align	2
 1296              		.global	uxTaskPriorityGet
 1297              		.thumb
 1298              		.thumb_func
 1300              	uxTaskPriorityGet:
 1301              	.LFB12:
1465:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1466:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1467:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1468:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1469:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1470:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1471:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1472:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 1302              		.loc 1 1472 0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 16
 1305              		@ frame_needed = 1, uses_anonymous_args = 0
 1306 0000 80B5     		push	{r7, lr}
 1307              	.LCFI35:
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 84B0     		sub	sp, sp, #16
 1312              	.LCFI36:
 1313              		.cfi_def_cfa_offset 24
 1314 0004 00AF     		add	r7, sp, #0
 1315              	.LCFI37:
 1316              		.cfi_def_cfa_register 7
 1317 0006 7860     		str	r0, [r7, #4]
1473:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t const * pxTCB;
1474:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxReturn;
1475:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1476:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 1318              		.loc 1 1476 0
 1319 0008 FFF7FEFF 		bl	vPortEnterCritical
1477:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 53


1478:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If null is passed in here then it is the priority of the task
1479:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * that called uxTaskPriorityGet() that is being queried. */
1480:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
 1320              		.loc 1 1480 0
 1321 000c 7B68     		ldr	r3, [r7, #4]
 1322 000e 002B     		cmp	r3, #0
 1323 0010 02D1     		bne	.L80
 1324              		.loc 1 1480 0 is_stmt 0 discriminator 1
 1325 0012 074B     		ldr	r3, .L83
 1326 0014 1B68     		ldr	r3, [r3]
 1327 0016 00E0     		b	.L81
 1328              	.L80:
 1329              		.loc 1 1480 0 discriminator 2
 1330 0018 7B68     		ldr	r3, [r7, #4]
 1331              	.L81:
 1332              		.loc 1 1480 0 discriminator 4
 1333 001a FB60     		str	r3, [r7, #12]
1481:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1334              		.loc 1 1481 0 is_stmt 1 discriminator 4
 1335 001c FB68     		ldr	r3, [r7, #12]
 1336 001e DB6A     		ldr	r3, [r3, #44]
 1337 0020 BB60     		str	r3, [r7, #8]
1482:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1483:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 1338              		.loc 1 1483 0 discriminator 4
 1339 0022 FFF7FEFF 		bl	vPortExitCritical
1484:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1485:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return uxReturn;
 1340              		.loc 1 1485 0 discriminator 4
 1341 0026 BB68     		ldr	r3, [r7, #8]
1486:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 1342              		.loc 1 1486 0 discriminator 4
 1343 0028 1846     		mov	r0, r3
 1344 002a 1037     		adds	r7, r7, #16
 1345              	.LCFI38:
 1346              		.cfi_def_cfa_offset 8
 1347 002c BD46     		mov	sp, r7
 1348              	.LCFI39:
 1349              		.cfi_def_cfa_register 13
 1350              		@ sp needed
 1351 002e 80BD     		pop	{r7, pc}
 1352              	.L84:
 1353              		.align	2
 1354              	.L83:
 1355 0030 00000000 		.word	pxCurrentTCB
 1356              		.cfi_endproc
 1357              	.LFE12:
 1359              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1360              		.align	2
 1361              		.global	uxTaskPriorityGetFromISR
 1362              		.thumb
 1363              		.thumb_func
 1365              	uxTaskPriorityGetFromISR:
 1366              	.LFB13:
1487:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1488:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1489:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 54


1490:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1491:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1492:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1493:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1494:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 1367              		.loc 1 1494 0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 32
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371 0000 80B5     		push	{r7, lr}
 1372              	.LCFI40:
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 88B0     		sub	sp, sp, #32
 1377              	.LCFI41:
 1378              		.cfi_def_cfa_offset 40
 1379 0004 00AF     		add	r7, sp, #0
 1380              	.LCFI42:
 1381              		.cfi_def_cfa_register 7
 1382 0006 7860     		str	r0, [r7, #4]
1495:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t const * pxTCB;
1496:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
1497:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1498:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1499:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1500:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1501:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1502:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1503:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * is defined in FreeRTOSConfig.h then
1504:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1505:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1506:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * been assigned a priority above the configured maximum system call
1507:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1508:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1509:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1510:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1511:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1512:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * provided on the following link:
1513:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1514:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1383              		.loc 1 1514 0
 1384 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1385              	.LBB142:
 1386              	.LBB143:
 198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         );
 205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 55


 210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1387              		.loc 2 213 0
 1388              	@ 213 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1389 000c EFF31182 			mrs r2, basepri											
 1390 0010 4FF05003 		mov r3, #80												
 1391 0014 83F31188 		msr basepri, r3											
 1392 0018 BFF36F8F 		isb														
 1393 001c BFF34F8F 		dsb														
 1394              	
 1395              	@ 0 "" 2
 1396              		.thumb
 1397 0020 3A61     		str	r2, [r7, #16]
 1398 0022 FB60     		str	r3, [r7, #12]
 214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         );
 222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 1399              		.loc 2 225 0
 1400 0024 3B69     		ldr	r3, [r7, #16]
 1401              	.LBE143:
 1402              	.LBE142:
1515:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1516:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
 1403              		.loc 1 1516 0
 1404 0026 FB61     		str	r3, [r7, #28]
1517:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1518:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1519:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * task that is being queried. */
1520:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
 1405              		.loc 1 1520 0
 1406 0028 7B68     		ldr	r3, [r7, #4]
 1407 002a 002B     		cmp	r3, #0
 1408 002c 02D1     		bne	.L87
 1409              		.loc 1 1520 0 is_stmt 0 discriminator 1
 1410 002e 094B     		ldr	r3, .L90
 1411 0030 1B68     		ldr	r3, [r3]
 1412 0032 00E0     		b	.L88
 1413              	.L87:
 1414              		.loc 1 1520 0 discriminator 2
 1415 0034 7B68     		ldr	r3, [r7, #4]
 1416              	.L88:
 1417              		.loc 1 1520 0 discriminator 4
 1418 0036 BB61     		str	r3, [r7, #24]
1521:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1419              		.loc 1 1521 0 is_stmt 1 discriminator 4
 1420 0038 BB69     		ldr	r3, [r7, #24]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 56


 1421 003a DB6A     		ldr	r3, [r3, #44]
 1422 003c 7B61     		str	r3, [r7, #20]
 1423 003e FB69     		ldr	r3, [r7, #28]
 1424 0040 BB60     		str	r3, [r7, #8]
 1425              	.LBB144:
 1426              	.LBB145:
 226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1427              		.loc 2 231 0 discriminator 4
 1428 0042 BB68     		ldr	r3, [r7, #8]
 1429              	@ 231 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1430 0044 83F31188 			msr basepri, r3	
 1431              	@ 0 "" 2
 1432              		.thumb
 1433              	.LBE145:
 1434              	.LBE144:
1522:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1523:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1524:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1525:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return uxReturn;
 1435              		.loc 1 1525 0 discriminator 4
 1436 0048 7B69     		ldr	r3, [r7, #20]
1526:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 1437              		.loc 1 1526 0 discriminator 4
 1438 004a 1846     		mov	r0, r3
 1439 004c 2037     		adds	r7, r7, #32
 1440              	.LCFI43:
 1441              		.cfi_def_cfa_offset 8
 1442 004e BD46     		mov	sp, r7
 1443              	.LCFI44:
 1444              		.cfi_def_cfa_register 13
 1445              		@ sp needed
 1446 0050 80BD     		pop	{r7, pc}
 1447              	.L91:
 1448 0052 00BF     		.align	2
 1449              	.L90:
 1450 0054 00000000 		.word	pxCurrentTCB
 1451              		.cfi_endproc
 1452              	.LFE13:
 1454              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1455              		.align	2
 1456              		.global	vTaskPrioritySet
 1457              		.thumb
 1458              		.thumb_func
 1460              	vTaskPrioritySet:
 1461              	.LFB14:
1527:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1528:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1529:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1530:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1531:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1532:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1533:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskPrioritySet( TaskHandle_t xTask,
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 57


1534:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                            UBaseType_t uxNewPriority )
1535:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 1462              		.loc 1 1535 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 32
 1465              		@ frame_needed = 1, uses_anonymous_args = 0
 1466 0000 80B5     		push	{r7, lr}
 1467              	.LCFI45:
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 7, -8
 1470              		.cfi_offset 14, -4
 1471 0002 88B0     		sub	sp, sp, #32
 1472              	.LCFI46:
 1473              		.cfi_def_cfa_offset 40
 1474 0004 00AF     		add	r7, sp, #0
 1475              	.LCFI47:
 1476              		.cfi_def_cfa_register 7
 1477 0006 7860     		str	r0, [r7, #4]
 1478 0008 3960     		str	r1, [r7]
1536:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
1537:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1538:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 1479              		.loc 1 1538 0
 1480 000a 0023     		movs	r3, #0
 1481 000c FB61     		str	r3, [r7, #28]
1539:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1540:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
 1482              		.loc 1 1540 0
 1483 000e 3B68     		ldr	r3, [r7]
 1484 0010 062B     		cmp	r3, #6
 1485 0012 09D9     		bls	.L93
 1486              	.LBB146:
 1487              	.LBB147:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1488              		.loc 2 197 0 discriminator 1
 1489              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1490 0014 4FF05003 			mov r3, #80												
 1491 0018 83F31188 		msr basepri, r3											
 1492 001c BFF36F8F 		isb														
 1493 0020 BFF34F8F 		dsb														
 1494              	
 1495              	@ 0 "" 2
 1496              		.thumb
 1497 0024 FB60     		str	r3, [r7, #12]
 1498              	.L94:
 1499              	.LBE147:
 1500              	.LBE146:
 1501              		.loc 1 1540 0 discriminator 1
 1502 0026 FEE7     		b	.L94
 1503              	.L93:
1541:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1542:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Ensure the new priority is valid. */
1543:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 1504              		.loc 1 1543 0
 1505 0028 3B68     		ldr	r3, [r7]
 1506 002a 062B     		cmp	r3, #6
 1507 002c 01D9     		bls	.L95
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 58


1544:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1545:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 1508              		.loc 1 1545 0
 1509 002e 0623     		movs	r3, #6
 1510 0030 3B60     		str	r3, [r7]
 1511              	.L95:
1546:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1547:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1548:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1549:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1550:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1551:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1552:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 1512              		.loc 1 1552 0
 1513 0032 FFF7FEFF 		bl	vPortEnterCritical
1553:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1554:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1555:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * task that is being changed. */
1556:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
 1514              		.loc 1 1556 0
 1515 0036 7B68     		ldr	r3, [r7, #4]
 1516 0038 002B     		cmp	r3, #0
 1517 003a 02D1     		bne	.L96
 1518              		.loc 1 1556 0 is_stmt 0 discriminator 1
 1519 003c 414B     		ldr	r3, .L105
 1520 003e 1B68     		ldr	r3, [r3]
 1521 0040 00E0     		b	.L97
 1522              	.L96:
 1523              		.loc 1 1556 0 discriminator 2
 1524 0042 7B68     		ldr	r3, [r7, #4]
 1525              	.L97:
 1526              		.loc 1 1556 0 discriminator 4
 1527 0044 BB61     		str	r3, [r7, #24]
1557:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1558:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1559:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1560:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( configUSE_MUTEXES == 1 )
1561:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1562:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     uxCurrentBasePriority = pxTCB->uxBasePriority;
 1528              		.loc 1 1562 0 is_stmt 1 discriminator 4
 1529 0046 BB69     		ldr	r3, [r7, #24]
 1530 0048 DB6C     		ldr	r3, [r3, #76]
 1531 004a 7B61     		str	r3, [r7, #20]
1563:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1564:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #else
1565:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1566:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     uxCurrentBasePriority = pxTCB->uxPriority;
1567:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1568:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif
1569:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1570:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( uxCurrentBasePriority != uxNewPriority )
 1532              		.loc 1 1570 0 discriminator 4
 1533 004c 7A69     		ldr	r2, [r7, #20]
 1534 004e 3B68     		ldr	r3, [r7]
 1535 0050 9A42     		cmp	r2, r3
 1536 0052 71D0     		beq	.L98
1571:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 59


1572:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The priority change may have readied a task of higher
1573:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * priority than the calling task. */
1574:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( uxNewPriority > uxCurrentBasePriority )
 1537              		.loc 1 1574 0
 1538 0054 3A68     		ldr	r2, [r7]
 1539 0056 7B69     		ldr	r3, [r7, #20]
 1540 0058 9A42     		cmp	r2, r3
 1541 005a 0DD9     		bls	.L99
1575:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1576:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxTCB != pxCurrentTCB )
 1542              		.loc 1 1576 0
 1543 005c 394B     		ldr	r3, .L105
 1544 005e 1B68     		ldr	r3, [r3]
 1545 0060 BA69     		ldr	r2, [r7, #24]
 1546 0062 9A42     		cmp	r2, r3
 1547 0064 0FD0     		beq	.L100
1577:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1578:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* The priority of a task other than the currently
1579:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * running task is being raised.  Is the priority being
1580:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * raised above that of the running task? */
1581:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( uxNewPriority >= pxCurrentTCB->uxPriority )
 1548              		.loc 1 1581 0
 1549 0066 374B     		ldr	r3, .L105
 1550 0068 1B68     		ldr	r3, [r3]
 1551 006a DA6A     		ldr	r2, [r3, #44]
 1552 006c 3B68     		ldr	r3, [r7]
 1553 006e 9A42     		cmp	r2, r3
 1554 0070 09D8     		bhi	.L100
1582:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1583:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             xYieldRequired = pdTRUE;
 1555              		.loc 1 1583 0
 1556 0072 0123     		movs	r3, #1
 1557 0074 FB61     		str	r3, [r7, #28]
 1558 0076 06E0     		b	.L100
 1559              	.L99:
1584:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1585:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         else
1586:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1587:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1588:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1589:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1590:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
1591:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1592:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* The priority of the running task is being raised,
1593:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * but the running task must already be the highest
1594:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * priority task able to run so no yield is required. */
1595:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1596:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1597:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else if( pxTCB == pxCurrentTCB )
 1560              		.loc 1 1597 0
 1561 0078 324B     		ldr	r3, .L105
 1562 007a 1B68     		ldr	r3, [r3]
 1563 007c BA69     		ldr	r2, [r7, #24]
 1564 007e 9A42     		cmp	r2, r3
 1565 0080 01D1     		bne	.L100
1598:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1599:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Setting the priority of the running task down means
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 60


1600:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * there may now be another task of higher priority that
1601:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * is ready to execute. */
1602:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xYieldRequired = pdTRUE;
 1566              		.loc 1 1602 0
 1567 0082 0123     		movs	r3, #1
 1568 0084 FB61     		str	r3, [r7, #28]
 1569              	.L100:
1603:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1604:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1605:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1606:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Setting the priority of any other task down does not
1607:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * require a yield as the running task must be above the
1608:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * new priority of the task being modified. */
1609:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1610:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1611:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Remember the ready list the task might be referenced from
1612:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * before its uxPriority member is changed so the
1613:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * taskRESET_READY_PRIORITY() macro can function correctly. */
1614:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 uxPriorityUsedOnEntry = pxTCB->uxPriority;
 1570              		.loc 1 1614 0
 1571 0086 BB69     		ldr	r3, [r7, #24]
 1572 0088 DB6A     		ldr	r3, [r3, #44]
 1573 008a 3B61     		str	r3, [r7, #16]
1615:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1616:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #if ( configUSE_MUTEXES == 1 )
1617:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1618:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Only change the priority being used if the task is not
1619:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * currently using an inherited priority. */
1620:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 1574              		.loc 1 1620 0
 1575 008c BB69     		ldr	r3, [r7, #24]
 1576 008e DA6C     		ldr	r2, [r3, #76]
 1577 0090 BB69     		ldr	r3, [r7, #24]
 1578 0092 DB6A     		ldr	r3, [r3, #44]
 1579 0094 9A42     		cmp	r2, r3
 1580 0096 02D1     		bne	.L101
1621:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1622:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             pxTCB->uxPriority = uxNewPriority;
 1581              		.loc 1 1622 0
 1582 0098 BB69     		ldr	r3, [r7, #24]
 1583 009a 3A68     		ldr	r2, [r7]
 1584 009c DA62     		str	r2, [r3, #44]
 1585              	.L101:
1623:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1624:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         else
1625:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1626:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1627:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1628:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1629:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* The base priority gets set whatever. */
1630:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxTCB->uxBasePriority = uxNewPriority;
 1586              		.loc 1 1630 0
 1587 009e BB69     		ldr	r3, [r7, #24]
 1588 00a0 3A68     		ldr	r2, [r7]
 1589 00a2 DA64     		str	r2, [r3, #76]
1631:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1632:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #else /* if ( configUSE_MUTEXES == 1 ) */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 61


1633:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1634:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxTCB->uxPriority = uxNewPriority;
1635:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1636:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1637:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1638:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Only reset the event list item value if the value is not
1639:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * being used for anything else. */
1640:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_V
 1590              		.loc 1 1640 0
 1591 00a4 BB69     		ldr	r3, [r7, #24]
 1592 00a6 9B69     		ldr	r3, [r3, #24]
 1593 00a8 002B     		cmp	r3, #0
 1594 00aa 04DB     		blt	.L102
1641:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1642:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX
 1595              		.loc 1 1642 0
 1596 00ac 3B68     		ldr	r3, [r7]
 1597 00ae C3F10702 		rsb	r2, r3, #7
 1598 00b2 BB69     		ldr	r3, [r7, #24]
 1599 00b4 9A61     		str	r2, [r3, #24]
 1600              	.L102:
1643:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1644:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1645:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1646:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1647:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1648:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1649:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* If the task is in the blocked or suspended list we need do
1650:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * nothing more than change its priority variable. However, if
1651:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the task is in a ready list it needs to be removed and placed
1652:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * in the list appropriate to its new priority. */
1653:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( px
 1601              		.loc 1 1653 0
 1602 00b6 BB69     		ldr	r3, [r7, #24]
 1603 00b8 5969     		ldr	r1, [r3, #20]
 1604 00ba 3A69     		ldr	r2, [r7, #16]
 1605 00bc 1346     		mov	r3, r2
 1606 00be 9B00     		lsls	r3, r3, #2
 1607 00c0 1344     		add	r3, r3, r2
 1608 00c2 9B00     		lsls	r3, r3, #2
 1609 00c4 204A     		ldr	r2, .L105+4
 1610 00c6 1344     		add	r3, r3, r2
 1611 00c8 9942     		cmp	r1, r3
 1612 00ca 2AD1     		bne	.L103
1654:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1655:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The task is currently in its ready list - remove before
1656:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * adding it to it's new ready list.  As we are in a critical
1657:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * section we can do this even if the scheduler is suspended. */
1658:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 1613              		.loc 1 1658 0
 1614 00cc BB69     		ldr	r3, [r7, #24]
 1615 00ce 0433     		adds	r3, r3, #4
 1616 00d0 1846     		mov	r0, r3
 1617 00d2 FFF7FEFF 		bl	uxListRemove
 1618 00d6 0346     		mov	r3, r0
 1619 00d8 002B     		cmp	r3, #0
 1620 00da 09D1     		bne	.L104
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 62


1659:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1660:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* It is known that the task is in its ready list so
1661:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * there is no need to check again and the port level
1662:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * reset macro can be called directly. */
1663:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
 1621              		.loc 1 1663 0
 1622 00dc 3B69     		ldr	r3, [r7, #16]
 1623 00de 0122     		movs	r2, #1
 1624 00e0 02FA03F3 		lsl	r3, r2, r3
 1625 00e4 DA43     		mvns	r2, r3
 1626 00e6 194B     		ldr	r3, .L105+8
 1627 00e8 1B68     		ldr	r3, [r3]
 1628 00ea 1340     		ands	r3, r3, r2
 1629 00ec 174A     		ldr	r2, .L105+8
 1630 00ee 1360     		str	r3, [r2]
 1631              	.L104:
1664:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1665:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
1666:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1667:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1668:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1669:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1670:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1632              		.loc 1 1670 0
 1633 00f0 BB69     		ldr	r3, [r7, #24]
 1634 00f2 DB6A     		ldr	r3, [r3, #44]
 1635 00f4 1A46     		mov	r2, r3
 1636 00f6 0123     		movs	r3, #1
 1637 00f8 03FA02F2 		lsl	r2, r3, r2
 1638 00fc 134B     		ldr	r3, .L105+8
 1639 00fe 1B68     		ldr	r3, [r3]
 1640 0100 1343     		orrs	r3, r3, r2
 1641 0102 124A     		ldr	r2, .L105+8
 1642 0104 1360     		str	r3, [r2]
 1643 0106 BB69     		ldr	r3, [r7, #24]
 1644 0108 DA6A     		ldr	r2, [r3, #44]
 1645 010a 1346     		mov	r3, r2
 1646 010c 9B00     		lsls	r3, r3, #2
 1647 010e 1344     		add	r3, r3, r2
 1648 0110 9B00     		lsls	r3, r3, #2
 1649 0112 0D4A     		ldr	r2, .L105+4
 1650 0114 1A44     		add	r2, r2, r3
 1651 0116 BB69     		ldr	r3, [r7, #24]
 1652 0118 0433     		adds	r3, r3, #4
 1653 011a 1046     		mov	r0, r2
 1654 011c 1946     		mov	r1, r3
 1655 011e FFF7FEFF 		bl	vListInsertEnd
 1656              	.L103:
1671:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1672:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1673:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1674:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1675:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1676:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1677:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xYieldRequired != pdFALSE )
 1657              		.loc 1 1677 0
 1658 0122 FB69     		ldr	r3, [r7, #28]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 63


 1659 0124 002B     		cmp	r3, #0
 1660 0126 07D0     		beq	.L98
1678:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1679:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
 1661              		.loc 1 1679 0
 1662 0128 094B     		ldr	r3, .L105+12
 1663 012a 4FF08052 		mov	r2, #268435456
 1664 012e 1A60     		str	r2, [r3]
 1665              	@ 1679 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 1666 0130 BFF34F8F 		dsb
 1667              	@ 0 "" 2
 1668              	@ 1679 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 1669 0134 BFF36F8F 		isb
 1670              	@ 0 "" 2
 1671              		.thumb
 1672              	.L98:
1680:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1681:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1682:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1683:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1684:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1685:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1686:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Remove compiler warning about unused variables when the port
1687:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * optimised task selection is not being used. */
1688:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ( void ) uxPriorityUsedOnEntry;
1689:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1690:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1691:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 1673              		.loc 1 1691 0
 1674 0138 FFF7FEFF 		bl	vPortExitCritical
1692:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 1675              		.loc 1 1692 0
 1676 013c 2037     		adds	r7, r7, #32
 1677              	.LCFI48:
 1678              		.cfi_def_cfa_offset 8
 1679 013e BD46     		mov	sp, r7
 1680              	.LCFI49:
 1681              		.cfi_def_cfa_register 13
 1682              		@ sp needed
 1683 0140 80BD     		pop	{r7, pc}
 1684              	.L106:
 1685 0142 00BF     		.align	2
 1686              	.L105:
 1687 0144 00000000 		.word	pxCurrentTCB
 1688 0148 00000000 		.word	pxReadyTasksLists
 1689 014c 00000000 		.word	uxTopReadyPriority
 1690 0150 04ED00E0 		.word	-536810236
 1691              		.cfi_endproc
 1692              	.LFE14:
 1694              		.section	.text.vTaskSuspend,"ax",%progbits
 1695              		.align	2
 1696              		.global	vTaskSuspend
 1697              		.thumb
 1698              		.thumb_func
 1700              	vTaskSuspend:
 1701              	.LFB15:
1693:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 64


1694:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1695:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1696:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1697:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1698:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1699:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1700:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 1702              		.loc 1 1700 0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 24
 1705              		@ frame_needed = 1, uses_anonymous_args = 0
 1706 0000 80B5     		push	{r7, lr}
 1707              	.LCFI50:
 1708              		.cfi_def_cfa_offset 8
 1709              		.cfi_offset 7, -8
 1710              		.cfi_offset 14, -4
 1711 0002 86B0     		sub	sp, sp, #24
 1712              	.LCFI51:
 1713              		.cfi_def_cfa_offset 32
 1714 0004 00AF     		add	r7, sp, #0
 1715              	.LCFI52:
 1716              		.cfi_def_cfa_register 7
 1717 0006 7860     		str	r0, [r7, #4]
1701:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
1702:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1703:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 1718              		.loc 1 1703 0
 1719 0008 FFF7FEFF 		bl	vPortEnterCritical
1704:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1705:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If null is passed in here then it is the running task that is
1706:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * being suspended. */
1707:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 1720              		.loc 1 1707 0
 1721 000c 7B68     		ldr	r3, [r7, #4]
 1722 000e 002B     		cmp	r3, #0
 1723 0010 02D1     		bne	.L108
 1724              		.loc 1 1707 0 is_stmt 0 discriminator 1
 1725 0012 424B     		ldr	r3, .L123
 1726 0014 1B68     		ldr	r3, [r3]
 1727 0016 00E0     		b	.L109
 1728              	.L108:
 1729              		.loc 1 1707 0 discriminator 2
 1730 0018 7B68     		ldr	r3, [r7, #4]
 1731              	.L109:
 1732              		.loc 1 1707 0 discriminator 4
 1733 001a 3B61     		str	r3, [r7, #16]
1708:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1709:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             traceTASK_SUSPEND( pxTCB );
1710:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1711:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Remove task from the ready/delayed list and place in the
1712:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * suspended list. */
1713:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 1734              		.loc 1 1713 0 is_stmt 1 discriminator 4
 1735 001c 3B69     		ldr	r3, [r7, #16]
 1736 001e 0433     		adds	r3, r3, #4
 1737 0020 1846     		mov	r0, r3
 1738 0022 FFF7FEFF 		bl	uxListRemove
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 65


 1739 0026 0346     		mov	r3, r0
 1740 0028 002B     		cmp	r3, #0
 1741 002a 15D1     		bne	.L110
1714:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1715:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 1742              		.loc 1 1715 0
 1743 002c 3B69     		ldr	r3, [r7, #16]
 1744 002e DA6A     		ldr	r2, [r3, #44]
 1745 0030 3B49     		ldr	r1, .L123+4
 1746 0032 1346     		mov	r3, r2
 1747 0034 9B00     		lsls	r3, r3, #2
 1748 0036 1344     		add	r3, r3, r2
 1749 0038 9B00     		lsls	r3, r3, #2
 1750 003a 0B44     		add	r3, r3, r1
 1751 003c 1B68     		ldr	r3, [r3]
 1752 003e 002B     		cmp	r3, #0
 1753 0040 0AD1     		bne	.L110
 1754              		.loc 1 1715 0 is_stmt 0 discriminator 1
 1755 0042 3B69     		ldr	r3, [r7, #16]
 1756 0044 DB6A     		ldr	r3, [r3, #44]
 1757 0046 1A46     		mov	r2, r3
 1758 0048 0123     		movs	r3, #1
 1759 004a 9340     		lsls	r3, r3, r2
 1760 004c DA43     		mvns	r2, r3
 1761 004e 354B     		ldr	r3, .L123+8
 1762 0050 1B68     		ldr	r3, [r3]
 1763 0052 1340     		ands	r3, r3, r2
 1764 0054 334A     		ldr	r2, .L123+8
 1765 0056 1360     		str	r3, [r2]
 1766              	.L110:
1716:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1717:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1718:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1719:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1720:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1721:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1722:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Is the task waiting on an event also? */
1723:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 1767              		.loc 1 1723 0 is_stmt 1
 1768 0058 3B69     		ldr	r3, [r7, #16]
 1769 005a 9B6A     		ldr	r3, [r3, #40]
 1770 005c 002B     		cmp	r3, #0
 1771 005e 04D0     		beq	.L112
1724:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1725:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1772              		.loc 1 1725 0
 1773 0060 3B69     		ldr	r3, [r7, #16]
 1774 0062 1833     		adds	r3, r3, #24
 1775 0064 1846     		mov	r0, r3
 1776 0066 FFF7FEFF 		bl	uxListRemove
 1777              	.L112:
1726:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1727:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1728:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1729:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1730:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1731:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 66


1732:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 1778              		.loc 1 1732 0
 1779 006a 3B69     		ldr	r3, [r7, #16]
 1780 006c 0433     		adds	r3, r3, #4
 1781 006e 2E48     		ldr	r0, .L123+12
 1782 0070 1946     		mov	r1, r3
 1783 0072 FFF7FEFF 		bl	vListInsertEnd
 1784              	.LBB148:
1733:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1734:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1735:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1736:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     BaseType_t x;
1737:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1738:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
 1785              		.loc 1 1738 0
 1786 0076 0023     		movs	r3, #0
 1787 0078 7B61     		str	r3, [r7, #20]
 1788 007a 10E0     		b	.L113
 1789              	.L115:
1739:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1740:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
 1790              		.loc 1 1740 0
 1791 007c 3A69     		ldr	r2, [r7, #16]
 1792 007e 7B69     		ldr	r3, [r7, #20]
 1793 0080 1344     		add	r3, r3, r2
 1794 0082 5833     		adds	r3, r3, #88
 1795 0084 1B78     		ldrb	r3, [r3]
 1796 0086 DBB2     		uxtb	r3, r3
 1797 0088 012B     		cmp	r3, #1
 1798 008a 05D1     		bne	.L114
1741:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
1742:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             /* The task was blocked to wait for a notification, but is
1743:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                              * now suspended, so no notification was received. */
1744:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             pxTCB->ucNotifyState[ x ] = taskNOT_WAITING_NOTIFICATION;
 1799              		.loc 1 1744 0
 1800 008c 3A69     		ldr	r2, [r7, #16]
 1801 008e 7B69     		ldr	r3, [r7, #20]
 1802 0090 1344     		add	r3, r3, r2
 1803 0092 5833     		adds	r3, r3, #88
 1804 0094 0022     		movs	r2, #0
 1805 0096 1A70     		strb	r2, [r3]
 1806              	.L114:
1738:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
 1807              		.loc 1 1738 0 discriminator 2
 1808 0098 7B69     		ldr	r3, [r7, #20]
 1809 009a 0133     		adds	r3, r3, #1
 1810 009c 7B61     		str	r3, [r7, #20]
 1811              	.L113:
1738:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
 1812              		.loc 1 1738 0 is_stmt 0 discriminator 1
 1813 009e 7B69     		ldr	r3, [r7, #20]
 1814 00a0 002B     		cmp	r3, #0
 1815 00a2 EBDD     		ble	.L115
 1816              	.LBE148:
1745:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
1746:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1747:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 67


1748:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1749:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1750:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 1817              		.loc 1 1750 0 is_stmt 1
 1818 00a4 FFF7FEFF 		bl	vPortExitCritical
1751:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1752:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xSchedulerRunning != pdFALSE )
 1819              		.loc 1 1752 0
 1820 00a8 204B     		ldr	r3, .L123+16
 1821 00aa 1B68     		ldr	r3, [r3]
 1822 00ac 002B     		cmp	r3, #0
 1823 00ae 05D0     		beq	.L116
1753:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1754:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Reset the next expected unblock time in case it referred to the
1755:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * task that is now in the Suspended state. */
1756:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             taskENTER_CRITICAL();
 1824              		.loc 1 1756 0
 1825 00b0 FFF7FEFF 		bl	vPortEnterCritical
1757:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1758:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvResetNextTaskUnblockTime();
 1826              		.loc 1 1758 0
 1827 00b4 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
1759:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1760:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             taskEXIT_CRITICAL();
 1828              		.loc 1 1760 0
 1829 00b8 FFF7FEFF 		bl	vPortExitCritical
 1830              	.L116:
1761:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1762:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1763:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1764:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1765:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1766:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1767:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxTCB == pxCurrentTCB )
 1831              		.loc 1 1767 0
 1832 00bc 174B     		ldr	r3, .L123
 1833 00be 1B68     		ldr	r3, [r3]
 1834 00c0 3A69     		ldr	r2, [r7, #16]
 1835 00c2 9A42     		cmp	r2, r3
 1836 00c4 26D1     		bne	.L107
1768:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1769:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( xSchedulerRunning != pdFALSE )
 1837              		.loc 1 1769 0
 1838 00c6 194B     		ldr	r3, .L123+16
 1839 00c8 1B68     		ldr	r3, [r3]
 1840 00ca 002B     		cmp	r3, #0
 1841 00cc 16D0     		beq	.L118
1770:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1771:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The current task has just been suspended. */
1772:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
 1842              		.loc 1 1772 0
 1843 00ce 184B     		ldr	r3, .L123+20
 1844 00d0 1B68     		ldr	r3, [r3]
 1845 00d2 002B     		cmp	r3, #0
 1846 00d4 09D0     		beq	.L119
 1847              	.LBB149:
 1848              	.LBB150:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 68


 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1849              		.loc 2 197 0 discriminator 1
 1850              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1851 00d6 4FF05003 			mov r3, #80												
 1852 00da 83F31188 		msr basepri, r3											
 1853 00de BFF36F8F 		isb														
 1854 00e2 BFF34F8F 		dsb														
 1855              	
 1856              	@ 0 "" 2
 1857              		.thumb
 1858 00e6 FB60     		str	r3, [r7, #12]
 1859              	.L120:
 1860              	.LBE150:
 1861              	.LBE149:
 1862              		.loc 1 1772 0 discriminator 1
 1863 00e8 FEE7     		b	.L120
 1864              	.L119:
1773:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 portYIELD_WITHIN_API();
 1865              		.loc 1 1773 0
 1866 00ea 124B     		ldr	r3, .L123+24
 1867 00ec 4FF08052 		mov	r2, #268435456
 1868 00f0 1A60     		str	r2, [r3]
 1869              	@ 1773 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 1870 00f2 BFF34F8F 		dsb
 1871              	@ 0 "" 2
 1872              	@ 1773 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 1873 00f6 BFF36F8F 		isb
 1874              	@ 0 "" 2
 1875              		.thumb
 1876 00fa 0BE0     		b	.L107
 1877              	.L118:
1774:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1775:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1776:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1777:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The scheduler is not running, but the task that was pointed
1778:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * must be adjusted to point to a different task. */
1780:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*li
 1878              		.loc 1 1780 0
 1879 00fc 0A4B     		ldr	r3, .L123+12
 1880 00fe 1A68     		ldr	r2, [r3]
 1881 0100 0D4B     		ldr	r3, .L123+28
 1882 0102 1B68     		ldr	r3, [r3]
 1883 0104 9A42     		cmp	r2, r3
 1884 0106 03D1     		bne	.L122
1781:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1782:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* No other tasks are ready, so set pxCurrentTCB back to
1783:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * NULL so when the next task is created pxCurrentTCB will
1784:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * be set to point to it no matter what its relative priority
1785:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * is. */
1786:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxCurrentTCB = NULL;
 1885              		.loc 1 1786 0
 1886 0108 044B     		ldr	r3, .L123
 1887 010a 0022     		movs	r2, #0
 1888 010c 1A60     		str	r2, [r3]
 1889 010e 01E0     		b	.L107
 1890              	.L122:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 69


1787:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1788:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1789:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1790:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vTaskSwitchContext();
 1891              		.loc 1 1790 0
 1892 0110 FFF7FEFF 		bl	vTaskSwitchContext
 1893              	.L107:
1791:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1792:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1793:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1794:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1795:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1796:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1797:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1798:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 1894              		.loc 1 1798 0
 1895 0114 1837     		adds	r7, r7, #24
 1896              	.LCFI53:
 1897              		.cfi_def_cfa_offset 8
 1898 0116 BD46     		mov	sp, r7
 1899              	.LCFI54:
 1900              		.cfi_def_cfa_register 13
 1901              		@ sp needed
 1902 0118 80BD     		pop	{r7, pc}
 1903              	.L124:
 1904 011a 00BF     		.align	2
 1905              	.L123:
 1906 011c 00000000 		.word	pxCurrentTCB
 1907 0120 00000000 		.word	pxReadyTasksLists
 1908 0124 00000000 		.word	uxTopReadyPriority
 1909 0128 00000000 		.word	xSuspendedTaskList
 1910 012c 00000000 		.word	xSchedulerRunning
 1911 0130 00000000 		.word	uxSchedulerSuspended
 1912 0134 04ED00E0 		.word	-536810236
 1913 0138 00000000 		.word	uxCurrentNumberOfTasks
 1914              		.cfi_endproc
 1915              	.LFE15:
 1917              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
 1918              		.align	2
 1919              		.thumb
 1920              		.thumb_func
 1922              	prvTaskIsTaskSuspended:
 1923              	.LFB16:
1799:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1800:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1803:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1805:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 1924              		.loc 1 1806 0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 24
 1927              		@ frame_needed = 1, uses_anonymous_args = 0
 1928              		@ link register save eliminated.
 1929 0000 80B4     		push	{r7}
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 70


 1930              	.LCFI55:
 1931              		.cfi_def_cfa_offset 4
 1932              		.cfi_offset 7, -4
 1933 0002 87B0     		sub	sp, sp, #28
 1934              	.LCFI56:
 1935              		.cfi_def_cfa_offset 32
 1936 0004 00AF     		add	r7, sp, #0
 1937              	.LCFI57:
 1938              		.cfi_def_cfa_register 7
 1939 0006 7860     		str	r0, [r7, #4]
1807:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn = pdFALSE;
 1940              		.loc 1 1807 0
 1941 0008 0023     		movs	r3, #0
 1942 000a 7B61     		str	r3, [r7, #20]
1808:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         const TCB_t * const pxTCB = xTask;
 1943              		.loc 1 1808 0
 1944 000c 7B68     		ldr	r3, [r7, #4]
 1945 000e 3B61     		str	r3, [r7, #16]
1809:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1810:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Accesses xPendingReadyList so must be called from a critical
1811:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * section. */
1812:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1813:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* It does not make sense to check if the calling task is suspended. */
1814:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( xTask );
 1946              		.loc 1 1814 0
 1947 0010 7B68     		ldr	r3, [r7, #4]
 1948 0012 002B     		cmp	r3, #0
 1949 0014 09D1     		bne	.L126
 1950              	.LBB151:
 1951              	.LBB152:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1952              		.loc 2 197 0 discriminator 1
 1953              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1954 0016 4FF05003 			mov r3, #80												
 1955 001a 83F31188 		msr basepri, r3											
 1956 001e BFF36F8F 		isb														
 1957 0022 BFF34F8F 		dsb														
 1958              	
 1959              	@ 0 "" 2
 1960              		.thumb
 1961 0026 FB60     		str	r3, [r7, #12]
 1962              	.L127:
 1963              	.LBE152:
 1964              	.LBE151:
 1965              		.loc 1 1814 0 discriminator 1
 1966 0028 FEE7     		b	.L127
 1967              	.L126:
1815:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1816:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Is the task being resumed actually in the suspended list? */
1817:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
 1968              		.loc 1 1817 0
 1969 002a 3B69     		ldr	r3, [r7, #16]
 1970 002c 5B69     		ldr	r3, [r3, #20]
 1971 002e 0A4A     		ldr	r2, .L130
 1972 0030 9342     		cmp	r3, r2
 1973 0032 0AD1     		bne	.L128
1818:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 71


1819:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Has the task already been resumed from within an ISR? */
1820:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALS
 1974              		.loc 1 1820 0
 1975 0034 3B69     		ldr	r3, [r7, #16]
 1976 0036 9B6A     		ldr	r3, [r3, #40]
 1977 0038 084A     		ldr	r2, .L130+4
 1978 003a 9342     		cmp	r3, r2
 1979 003c 05D0     		beq	.L128
1821:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1822:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Is it in the suspended list because it is in the Suspended
1823:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * state, or because is is blocked with no timeout? */
1824:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint
 1980              		.loc 1 1824 0
 1981 003e 3B69     		ldr	r3, [r7, #16]
 1982 0040 9B6A     		ldr	r3, [r3, #40]
 1983 0042 002B     		cmp	r3, #0
 1984 0044 01D1     		bne	.L128
1825:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1826:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xReturn = pdTRUE;
 1985              		.loc 1 1826 0
 1986 0046 0123     		movs	r3, #1
 1987 0048 7B61     		str	r3, [r7, #20]
 1988              	.L128:
1827:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1828:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1829:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1830:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1831:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1832:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1833:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1834:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1835:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1836:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1837:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1838:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1839:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1840:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1841:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1842:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1843:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 1989              		.loc 1 1843 0
 1990 004a 7B69     		ldr	r3, [r7, #20]
1844:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1991              		.loc 1 1844 0
 1992 004c 1846     		mov	r0, r3
 1993 004e 1C37     		adds	r7, r7, #28
 1994              	.LCFI58:
 1995              		.cfi_def_cfa_offset 4
 1996 0050 BD46     		mov	sp, r7
 1997              	.LCFI59:
 1998              		.cfi_def_cfa_register 13
 1999              		@ sp needed
 2000 0052 5DF8047B 		ldr	r7, [sp], #4
 2001              	.LCFI60:
 2002              		.cfi_restore 7
 2003              		.cfi_def_cfa_offset 0
 2004 0056 7047     		bx	lr
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 72


 2005              	.L131:
 2006              		.align	2
 2007              	.L130:
 2008 0058 00000000 		.word	xSuspendedTaskList
 2009 005c 00000000 		.word	xPendingReadyList
 2010              		.cfi_endproc
 2011              	.LFE16:
 2013              		.section	.text.vTaskResume,"ax",%progbits
 2014              		.align	2
 2015              		.global	vTaskResume
 2016              		.thumb
 2017              		.thumb_func
 2019              	vTaskResume:
 2020              	.LFB17:
1845:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1846:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1849:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1851:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskResume( TaskHandle_t xTaskToResume )
1852:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 2021              		.loc 1 1852 0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 16
 2024              		@ frame_needed = 1, uses_anonymous_args = 0
 2025 0000 80B5     		push	{r7, lr}
 2026              	.LCFI61:
 2027              		.cfi_def_cfa_offset 8
 2028              		.cfi_offset 7, -8
 2029              		.cfi_offset 14, -4
 2030 0002 84B0     		sub	sp, sp, #16
 2031              	.LCFI62:
 2032              		.cfi_def_cfa_offset 24
 2033 0004 00AF     		add	r7, sp, #0
 2034              	.LCFI63:
 2035              		.cfi_def_cfa_register 7
 2036 0006 7860     		str	r0, [r7, #4]
1853:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2037              		.loc 1 1853 0
 2038 0008 7B68     		ldr	r3, [r7, #4]
 2039 000a FB60     		str	r3, [r7, #12]
1854:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1855:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* It does not make sense to resume the calling task. */
1856:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( xTaskToResume );
 2040              		.loc 1 1856 0
 2041 000c 7B68     		ldr	r3, [r7, #4]
 2042 000e 002B     		cmp	r3, #0
 2043 0010 09D1     		bne	.L133
 2044              	.LBB153:
 2045              	.LBB154:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2046              		.loc 2 197 0 discriminator 1
 2047              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2048 0012 4FF05003 			mov r3, #80												
 2049 0016 83F31188 		msr basepri, r3											
 2050 001a BFF36F8F 		isb														
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 73


 2051 001e BFF34F8F 		dsb														
 2052              	
 2053              	@ 0 "" 2
 2054              		.thumb
 2055 0022 BB60     		str	r3, [r7, #8]
 2056              	.L134:
 2057              	.LBE154:
 2058              	.LBE153:
 2059              		.loc 1 1856 0 discriminator 1
 2060 0024 FEE7     		b	.L134
 2061              	.L133:
1857:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1858:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The parameter cannot be NULL as it is impossible to resume the
1859:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * currently executing task. */
1860:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
 2062              		.loc 1 1860 0
 2063 0026 214B     		ldr	r3, .L137
 2064 0028 1B68     		ldr	r3, [r3]
 2065 002a FA68     		ldr	r2, [r7, #12]
 2066 002c 9A42     		cmp	r2, r3
 2067 002e 39D0     		beq	.L132
 2068              		.loc 1 1860 0 is_stmt 0 discriminator 1
 2069 0030 FB68     		ldr	r3, [r7, #12]
 2070 0032 002B     		cmp	r3, #0
 2071 0034 36D0     		beq	.L132
1861:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1862:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             taskENTER_CRITICAL();
 2072              		.loc 1 1862 0 is_stmt 1
 2073 0036 FFF7FEFF 		bl	vPortEnterCritical
1863:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1864:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 2074              		.loc 1 1864 0
 2075 003a F868     		ldr	r0, [r7, #12]
 2076 003c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2077 0040 0346     		mov	r3, r0
 2078 0042 002B     		cmp	r3, #0
 2079 0044 2CD0     		beq	.L136
1865:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1866:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     traceTASK_RESUME( pxTCB );
1867:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1868:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The ready list can be accessed even if the scheduler is
1869:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * suspended because this is inside a critical section. */
1870:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2080              		.loc 1 1870 0
 2081 0046 FB68     		ldr	r3, [r7, #12]
 2082 0048 0433     		adds	r3, r3, #4
 2083 004a 1846     		mov	r0, r3
 2084 004c FFF7FEFF 		bl	uxListRemove
1871:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2085              		.loc 1 1871 0
 2086 0050 FB68     		ldr	r3, [r7, #12]
 2087 0052 DB6A     		ldr	r3, [r3, #44]
 2088 0054 1A46     		mov	r2, r3
 2089 0056 0123     		movs	r3, #1
 2090 0058 03FA02F2 		lsl	r2, r3, r2
 2091 005c 144B     		ldr	r3, .L137+4
 2092 005e 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 74


 2093 0060 1343     		orrs	r3, r3, r2
 2094 0062 134A     		ldr	r2, .L137+4
 2095 0064 1360     		str	r3, [r2]
 2096 0066 FB68     		ldr	r3, [r7, #12]
 2097 0068 DA6A     		ldr	r2, [r3, #44]
 2098 006a 1346     		mov	r3, r2
 2099 006c 9B00     		lsls	r3, r3, #2
 2100 006e 1344     		add	r3, r3, r2
 2101 0070 9B00     		lsls	r3, r3, #2
 2102 0072 104A     		ldr	r2, .L137+8
 2103 0074 1A44     		add	r2, r2, r3
 2104 0076 FB68     		ldr	r3, [r7, #12]
 2105 0078 0433     		adds	r3, r3, #4
 2106 007a 1046     		mov	r0, r2
 2107 007c 1946     		mov	r1, r3
 2108 007e FFF7FEFF 		bl	vListInsertEnd
1872:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1873:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* A higher priority task may have just been resumed. */
1874:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2109              		.loc 1 1874 0
 2110 0082 FB68     		ldr	r3, [r7, #12]
 2111 0084 DA6A     		ldr	r2, [r3, #44]
 2112 0086 094B     		ldr	r3, .L137
 2113 0088 1B68     		ldr	r3, [r3]
 2114 008a DB6A     		ldr	r3, [r3, #44]
 2115 008c 9A42     		cmp	r2, r3
 2116 008e 07D3     		bcc	.L136
1875:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1876:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* This yield may not cause the task just resumed to run,
1877:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * but will leave the lists in the correct state for the
1878:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * next yield. */
1879:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         taskYIELD_IF_USING_PREEMPTION();
 2117              		.loc 1 1879 0
 2118 0090 094B     		ldr	r3, .L137+12
 2119 0092 4FF08052 		mov	r2, #268435456
 2120 0096 1A60     		str	r2, [r3]
 2121              	@ 1879 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 2122 0098 BFF34F8F 		dsb
 2123              	@ 0 "" 2
 2124              	@ 1879 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 2125 009c BFF36F8F 		isb
 2126              	@ 0 "" 2
 2127              		.thumb
 2128              	.L136:
1880:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1881:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
1882:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1883:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1884:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1885:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1886:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1887:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1888:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1889:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1890:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1891:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             taskEXIT_CRITICAL();
 2129              		.loc 1 1891 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 75


 2130 00a0 FFF7FEFF 		bl	vPortExitCritical
 2131              	.L132:
1892:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1893:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
1894:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1895:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1896:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1897:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 2132              		.loc 1 1897 0
 2133 00a4 1037     		adds	r7, r7, #16
 2134              	.LCFI64:
 2135              		.cfi_def_cfa_offset 8
 2136 00a6 BD46     		mov	sp, r7
 2137              	.LCFI65:
 2138              		.cfi_def_cfa_register 13
 2139              		@ sp needed
 2140 00a8 80BD     		pop	{r7, pc}
 2141              	.L138:
 2142 00aa 00BF     		.align	2
 2143              	.L137:
 2144 00ac 00000000 		.word	pxCurrentTCB
 2145 00b0 00000000 		.word	uxTopReadyPriority
 2146 00b4 00000000 		.word	pxReadyTasksLists
 2147 00b8 04ED00E0 		.word	-536810236
 2148              		.cfi_endproc
 2149              	.LFE17:
 2151              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2152              		.align	2
 2153              		.global	xTaskResumeFromISR
 2154              		.thumb
 2155              		.thumb_func
 2157              	xTaskResumeFromISR:
 2158              	.LFB18:
1898:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1899:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1901:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1903:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1905:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 2159              		.loc 1 1906 0
 2160              		.cfi_startproc
 2161              		@ args = 0, pretend = 0, frame = 40
 2162              		@ frame_needed = 1, uses_anonymous_args = 0
 2163 0000 80B5     		push	{r7, lr}
 2164              	.LCFI66:
 2165              		.cfi_def_cfa_offset 8
 2166              		.cfi_offset 7, -8
 2167              		.cfi_offset 14, -4
 2168 0002 8AB0     		sub	sp, sp, #40
 2169              	.LCFI67:
 2170              		.cfi_def_cfa_offset 48
 2171 0004 00AF     		add	r7, sp, #0
 2172              	.LCFI68:
 2173              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 76


 2174 0006 7860     		str	r0, [r7, #4]
1907:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 2175              		.loc 1 1907 0
 2176 0008 0023     		movs	r3, #0
 2177 000a 7B62     		str	r3, [r7, #36]
1908:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2178              		.loc 1 1908 0
 2179 000c 7B68     		ldr	r3, [r7, #4]
 2180 000e 3B62     		str	r3, [r7, #32]
1909:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
1910:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1911:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( xTaskToResume );
 2181              		.loc 1 1911 0
 2182 0010 7B68     		ldr	r3, [r7, #4]
 2183 0012 002B     		cmp	r3, #0
 2184 0014 09D1     		bne	.L140
 2185              	.LBB155:
 2186              	.LBB156:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2187              		.loc 2 197 0 discriminator 1
 2188              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2189 0016 4FF05003 			mov r3, #80												
 2190 001a 83F31188 		msr basepri, r3											
 2191 001e BFF36F8F 		isb														
 2192 0022 BFF34F8F 		dsb														
 2193              	
 2194              	@ 0 "" 2
 2195              		.thumb
 2196 0026 BB61     		str	r3, [r7, #24]
 2197              	.L141:
 2198              	.LBE156:
 2199              	.LBE155:
 2200              		.loc 1 1911 0 discriminator 1
 2201 0028 FEE7     		b	.L141
 2202              	.L140:
1912:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1913:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1914:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1915:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1916:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1917:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * is defined in FreeRTOSConfig.h then
1919:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1921:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * been assigned a priority above the configured maximum system call
1922:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1923:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1924:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1926:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1927:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * provided on the following link:
1928:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1929:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2203              		.loc 1 1929 0
 2204 002a FFF7FEFF 		bl	vPortValidateInterruptPriority
 2205              	.LBB157:
 2206              	.LBB158:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 77


 213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2207              		.loc 2 213 0
 2208              	@ 213 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2209 002e EFF31182 			mrs r2, basepri											
 2210 0032 4FF05003 		mov r3, #80												
 2211 0036 83F31188 		msr basepri, r3											
 2212 003a BFF36F8F 		isb														
 2213 003e BFF34F8F 		dsb														
 2214              	
 2215              	@ 0 "" 2
 2216              		.thumb
 2217 0042 7A61     		str	r2, [r7, #20]
 2218 0044 3B61     		str	r3, [r7, #16]
 225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 2219              		.loc 2 225 0
 2220 0046 7B69     		ldr	r3, [r7, #20]
 2221              	.LBE158:
 2222              	.LBE157:
1930:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1931:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2223              		.loc 1 1931 0
 2224 0048 FB61     		str	r3, [r7, #28]
1932:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1933:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 2225              		.loc 1 1933 0
 2226 004a 386A     		ldr	r0, [r7, #32]
 2227 004c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2228 0050 0346     		mov	r3, r0
 2229 0052 002B     		cmp	r3, #0
 2230 0054 31D0     		beq	.L143
1934:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1935:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 traceTASK_RESUME_FROM_ISR( pxTCB );
1936:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1937:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Check the ready lists can be accessed. */
1938:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2231              		.loc 1 1938 0
 2232 0056 1E4B     		ldr	r3, .L148
 2233 0058 1B68     		ldr	r3, [r3]
 2234 005a 002B     		cmp	r3, #0
 2235 005c 27D1     		bne	.L144
1939:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1940:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Ready lists can be accessed so move the task from the
1941:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * suspended list to the ready list directly. */
1942:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2236              		.loc 1 1942 0
 2237 005e 3B6A     		ldr	r3, [r7, #32]
 2238 0060 DA6A     		ldr	r2, [r3, #44]
 2239 0062 1C4B     		ldr	r3, .L148+4
 2240 0064 1B68     		ldr	r3, [r3]
 2241 0066 DB6A     		ldr	r3, [r3, #44]
 2242 0068 9A42     		cmp	r2, r3
 2243 006a 01D3     		bcc	.L145
1943:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1944:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xYieldRequired = pdTRUE;
 2244              		.loc 1 1944 0
 2245 006c 0123     		movs	r3, #1
 2246 006e 7B62     		str	r3, [r7, #36]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 78


 2247              	.L145:
1945:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1946:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
1947:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
1948:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1949:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
1950:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1951:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2248              		.loc 1 1951 0
 2249 0070 3B6A     		ldr	r3, [r7, #32]
 2250 0072 0433     		adds	r3, r3, #4
 2251 0074 1846     		mov	r0, r3
 2252 0076 FFF7FEFF 		bl	uxListRemove
1952:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2253              		.loc 1 1952 0
 2254 007a 3B6A     		ldr	r3, [r7, #32]
 2255 007c DB6A     		ldr	r3, [r3, #44]
 2256 007e 1A46     		mov	r2, r3
 2257 0080 0123     		movs	r3, #1
 2258 0082 03FA02F2 		lsl	r2, r3, r2
 2259 0086 144B     		ldr	r3, .L148+8
 2260 0088 1B68     		ldr	r3, [r3]
 2261 008a 1343     		orrs	r3, r3, r2
 2262 008c 124A     		ldr	r2, .L148+8
 2263 008e 1360     		str	r3, [r2]
 2264 0090 3B6A     		ldr	r3, [r7, #32]
 2265 0092 DA6A     		ldr	r2, [r3, #44]
 2266 0094 1346     		mov	r3, r2
 2267 0096 9B00     		lsls	r3, r3, #2
 2268 0098 1344     		add	r3, r3, r2
 2269 009a 9B00     		lsls	r3, r3, #2
 2270 009c 0F4A     		ldr	r2, .L148+12
 2271 009e 1A44     		add	r2, r2, r3
 2272 00a0 3B6A     		ldr	r3, [r7, #32]
 2273 00a2 0433     		adds	r3, r3, #4
 2274 00a4 1046     		mov	r0, r2
 2275 00a6 1946     		mov	r1, r3
 2276 00a8 FFF7FEFF 		bl	vListInsertEnd
 2277 00ac 05E0     		b	.L143
 2278              	.L144:
1953:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1954:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
1955:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
1956:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The delayed or ready lists cannot be accessed so the task
1957:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * is held in the pending ready list until the scheduler is
1958:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * unsuspended. */
1959:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 2279              		.loc 1 1959 0
 2280 00ae 3B6A     		ldr	r3, [r7, #32]
 2281 00b0 1833     		adds	r3, r3, #24
 2282 00b2 0B48     		ldr	r0, .L148+16
 2283 00b4 1946     		mov	r1, r3
 2284 00b6 FFF7FEFF 		bl	vListInsertEnd
 2285              	.L143:
 2286 00ba FB69     		ldr	r3, [r7, #28]
 2287 00bc FB60     		str	r3, [r7, #12]
 2288              	.LBB159:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 79


 2289              	.LBB160:
 2290              		.loc 2 231 0
 2291 00be FB68     		ldr	r3, [r7, #12]
 2292              	@ 231 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2293 00c0 83F31188 			msr basepri, r3	
 2294              	@ 0 "" 2
 2295              		.thumb
 2296              	.LBE160:
 2297              	.LBE159:
1960:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
1961:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1962:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
1963:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1964:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1965:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
1966:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
1967:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1969:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xYieldRequired;
 2298              		.loc 1 1969 0
 2299 00c4 7B6A     		ldr	r3, [r7, #36]
1970:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 2300              		.loc 1 1970 0
 2301 00c6 1846     		mov	r0, r3
 2302 00c8 2837     		adds	r7, r7, #40
 2303              	.LCFI69:
 2304              		.cfi_def_cfa_offset 8
 2305 00ca BD46     		mov	sp, r7
 2306              	.LCFI70:
 2307              		.cfi_def_cfa_register 13
 2308              		@ sp needed
 2309 00cc 80BD     		pop	{r7, pc}
 2310              	.L149:
 2311 00ce 00BF     		.align	2
 2312              	.L148:
 2313 00d0 00000000 		.word	uxSchedulerSuspended
 2314 00d4 00000000 		.word	pxCurrentTCB
 2315 00d8 00000000 		.word	uxTopReadyPriority
 2316 00dc 00000000 		.word	pxReadyTasksLists
 2317 00e0 00000000 		.word	xPendingReadyList
 2318              		.cfi_endproc
 2319              	.LFE18:
 2321              		.section	.rodata
 2322              		.align	2
 2323              	.LC0:
 2324 0000 49444C45 		.ascii	"IDLE\000"
 2324      00
 2325              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2326              		.align	2
 2327              		.global	vTaskStartScheduler
 2328              		.thumb
 2329              		.thumb_func
 2331              	vTaskStartScheduler:
 2332              	.LFB19:
1971:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1972:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 80


1974:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1975:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 2333              		.loc 1 1976 0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 16
 2336              		@ frame_needed = 1, uses_anonymous_args = 0
 2337 0000 80B5     		push	{r7, lr}
 2338              	.LCFI71:
 2339              		.cfi_def_cfa_offset 8
 2340              		.cfi_offset 7, -8
 2341              		.cfi_offset 14, -4
 2342 0002 86B0     		sub	sp, sp, #24
 2343              	.LCFI72:
 2344              		.cfi_def_cfa_offset 32
 2345 0004 02AF     		add	r7, sp, #8
 2346              	.LCFI73:
 2347              		.cfi_def_cfa 7, 24
1977:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xReturn;
1978:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1979:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Add the idle task at the lowest priority. */
1980:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
1982:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             StaticTask_t * pxIdleTaskTCBBuffer = NULL;
1983:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             StackType_t * pxIdleTaskStackBuffer = NULL;
1984:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uint32_t ulIdleTaskStackSize;
1985:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1986:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* The Idle task is created using user provided RAM - obtain the
1987:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * address of the RAM then create the idle task. */
1988:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTas
1989:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
1990:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                  configIDLE_TASK_NAME,
1991:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                  ulIdleTaskStackSize,
1992:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                  ( void * ) NULL,       /*lint !e961.  The cast is 
1993:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                  portPRIVILEGE_BIT,     /* In effect ( tskIDLE_PRIO
1994:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                  pxIdleTaskStackBuffer,
1995:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                  pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exceptio
1996:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
1997:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( xIdleTaskHandle != NULL )
1998:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
1999:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdPASS;
2000:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2001:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
2002:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2003:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdFAIL;
2004:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2005:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2006:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
2007:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2008:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* The Idle task is being created using dynamically allocated RAM. */
2009:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = xTaskCreate( prvIdleTask,
 2348              		.loc 1 2009 0
 2349 0006 0023     		movs	r3, #0
 2350 0008 0093     		str	r3, [sp]
 2351 000a 1C4B     		ldr	r3, .L155
 2352 000c 0193     		str	r3, [sp, #4]
 2353 000e 1C48     		ldr	r0, .L155+4
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 81


 2354 0010 1C49     		ldr	r1, .L155+8
 2355 0012 8022     		movs	r2, #128
 2356 0014 0023     		movs	r3, #0
 2357 0016 FFF7FEFF 		bl	xTaskCreate
 2358 001a F860     		str	r0, [r7, #12]
2010:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    configIDLE_TASK_NAME,
2011:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    configMINIMAL_STACK_SIZE,
2012:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    ( void * ) NULL,
2013:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    portPRIVILEGE_BIT,  /* In effect ( tskIDLE_PRIORITY | portPRIVIL
2014:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as i
2015:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2016:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
2017:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2018:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_TIMERS == 1 )
2019:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2020:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( xReturn == pdPASS )
 2359              		.loc 1 2020 0
 2360 001c FB68     		ldr	r3, [r7, #12]
 2361 001e 012B     		cmp	r3, #1
 2362 0020 02D1     		bne	.L151
2021:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2022:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = xTimerCreateTimerTask();
 2363              		.loc 1 2022 0
 2364 0022 FFF7FEFF 		bl	xTimerCreateTimerTask
 2365 0026 F860     		str	r0, [r7, #12]
 2366              	.L151:
2023:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2024:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
2025:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2026:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2027:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2028:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2029:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* configUSE_TIMERS */
2030:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2031:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( xReturn == pdPASS )
 2367              		.loc 1 2031 0
 2368 0028 FB68     		ldr	r3, [r7, #12]
 2369 002a 012B     		cmp	r3, #1
 2370 002c 15D1     		bne	.L152
 2371              	.LBB161:
 2372              	.LBB162:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2373              		.loc 2 197 0
 2374              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2375 002e 4FF05003 			mov r3, #80												
 2376 0032 83F31188 		msr basepri, r3											
 2377 0036 BFF36F8F 		isb														
 2378 003a BFF34F8F 		dsb														
 2379              	
 2380              	@ 0 "" 2
 2381              		.thumb
 2382 003e BB60     		str	r3, [r7, #8]
 2383              	.LBE162:
 2384              	.LBE161:
2032:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2033:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* freertos_tasks_c_additions_init() should only be called if the user
2034:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 82


2035:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the only macro called by the function. */
2036:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2038:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 freertos_tasks_c_additions_init();
2039:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2040:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
2041:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2042:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Interrupts are turned off here, to ensure a tick does not occur
2043:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * before or during the call to xPortStartScheduler().  The stacks of
2044:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the created tasks contain a status word with interrupts switched on
2045:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * so interrupts will automatically get re-enabled when the first task
2046:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * starts to run. */
2047:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portDISABLE_INTERRUPTS();
2048:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2049:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2051:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Switch Newlib's _impure_ptr variable to point to the _reent
2052:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * structure specific to the task that will run first.
2053:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * for additional information. */
2055:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 _impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2057:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
2058:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2059:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
 2385              		.loc 1 2059 0
 2386 0040 114B     		ldr	r3, .L155+12
 2387 0042 4FF0FF32 		mov	r2, #-1
 2388 0046 1A60     		str	r2, [r3]
2060:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xSchedulerRunning = pdTRUE;
 2389              		.loc 1 2060 0
 2390 0048 104B     		ldr	r3, .L155+16
 2391 004a 0122     		movs	r2, #1
 2392 004c 1A60     		str	r2, [r3]
2061:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2393              		.loc 1 2061 0
 2394 004e 104B     		ldr	r3, .L155+20
 2395 0050 0022     		movs	r2, #0
 2396 0052 1A60     		str	r2, [r3]
2062:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2063:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * macro must be defined to configure the timer/counter used to generate
2065:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * is set to 0 and the following line fails to build then ensure you do not
2067:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * FreeRTOSConfig.h file. */
2069:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2071:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         traceTASK_SWITCHED_IN();
2072:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2073:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Setting up the timer tick is hardware specific and thus in the
2074:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * portable interface. */
2075:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xPortStartScheduler() != pdFALSE )
 2397              		.loc 1 2075 0
 2398 0054 FFF7FEFF 		bl	xPortStartScheduler
 2399 0058 0DE0     		b	.L150
 2400              	.L152:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 83


2076:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2077:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Should not reach here as if the scheduler is running the
2078:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * function will not return. */
2079:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2080:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
2081:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2082:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Should only reach here if a task calls xTaskEndScheduler(). */
2083:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2084:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2085:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
2086:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2087:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* This line will only be reached if the kernel could not be started,
2088:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * because there was not enough FreeRTOS heap to create the idle task
2089:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * or the timer task. */
2090:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 2401              		.loc 1 2090 0
 2402 005a FB68     		ldr	r3, [r7, #12]
 2403 005c B3F1FF3F 		cmp	r3, #-1
 2404 0060 09D1     		bne	.L150
 2405              	.LBB163:
 2406              	.LBB164:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2407              		.loc 2 197 0 discriminator 1
 2408              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2409 0062 4FF05003 			mov r3, #80												
 2410 0066 83F31188 		msr basepri, r3											
 2411 006a BFF36F8F 		isb														
 2412 006e BFF34F8F 		dsb														
 2413              	
 2414              	@ 0 "" 2
 2415              		.thumb
 2416 0072 7B60     		str	r3, [r7, #4]
 2417              	.L154:
 2418              	.LBE164:
 2419              	.LBE163:
 2420              		.loc 1 2090 0 discriminator 2
 2421 0074 FEE7     		b	.L154
 2422              	.L150:
2091:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2092:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2093:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * meaning xIdleTaskHandle is not used anywhere else. */
2095:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     ( void ) xIdleTaskHandle;
2096:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 2423              		.loc 1 2096 0
 2424 0076 1037     		adds	r7, r7, #16
 2425              	.LCFI74:
 2426              		.cfi_def_cfa_offset 8
 2427 0078 BD46     		mov	sp, r7
 2428              	.LCFI75:
 2429              		.cfi_def_cfa_register 13
 2430              		@ sp needed
 2431 007a 80BD     		pop	{r7, pc}
 2432              	.L156:
 2433              		.align	2
 2434              	.L155:
 2435 007c 00000000 		.word	xIdleTaskHandle
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 84


 2436 0080 00000000 		.word	prvIdleTask
 2437 0084 00000000 		.word	.LC0
 2438 0088 00000000 		.word	xNextTaskUnblockTime
 2439 008c 00000000 		.word	xSchedulerRunning
 2440 0090 00000000 		.word	xTickCount
 2441              		.cfi_endproc
 2442              	.LFE19:
 2444              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2445              		.align	2
 2446              		.global	vTaskEndScheduler
 2447              		.thumb
 2448              		.thumb_func
 2450              	vTaskEndScheduler:
 2451              	.LFB20:
2097:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2099:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 2452              		.loc 1 2100 0
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 8
 2455              		@ frame_needed = 1, uses_anonymous_args = 0
 2456 0000 80B5     		push	{r7, lr}
 2457              	.LCFI76:
 2458              		.cfi_def_cfa_offset 8
 2459              		.cfi_offset 7, -8
 2460              		.cfi_offset 14, -4
 2461 0002 82B0     		sub	sp, sp, #8
 2462              	.LCFI77:
 2463              		.cfi_def_cfa_offset 16
 2464 0004 00AF     		add	r7, sp, #0
 2465              	.LCFI78:
 2466              		.cfi_def_cfa_register 7
 2467              	.LBB165:
 2468              	.LBB166:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2469              		.loc 2 197 0
 2470              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2471 0006 4FF05003 			mov r3, #80												
 2472 000a 83F31188 		msr basepri, r3											
 2473 000e BFF36F8F 		isb														
 2474 0012 BFF34F8F 		dsb														
 2475              	
 2476              	@ 0 "" 2
 2477              		.thumb
 2478 0016 7B60     		str	r3, [r7, #4]
 2479              	.LBE166:
 2480              	.LBE165:
2101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
2102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * routine so the original ISRs can be restored if necessary.  The port
2103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * layer must ensure interrupts enable  bit is left in the correct state. */
2104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     portDISABLE_INTERRUPTS();
2105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     xSchedulerRunning = pdFALSE;
 2481              		.loc 1 2105 0
 2482 0018 034B     		ldr	r3, .L158
 2483 001a 0022     		movs	r2, #0
 2484 001c 1A60     		str	r2, [r3]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 85


2106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vPortEndScheduler();
 2485              		.loc 1 2106 0
 2486 001e FFF7FEFF 		bl	vPortEndScheduler
2107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 2487              		.loc 1 2107 0
 2488 0022 0837     		adds	r7, r7, #8
 2489              	.LCFI79:
 2490              		.cfi_def_cfa_offset 8
 2491 0024 BD46     		mov	sp, r7
 2492              	.LCFI80:
 2493              		.cfi_def_cfa_register 13
 2494              		@ sp needed
 2495 0026 80BD     		pop	{r7, pc}
 2496              	.L159:
 2497              		.align	2
 2498              	.L158:
 2499 0028 00000000 		.word	xSchedulerRunning
 2500              		.cfi_endproc
 2501              	.LFE20:
 2503              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2504              		.align	2
 2505              		.global	vTaskSuspendAll
 2506              		.thumb
 2507              		.thumb_func
 2509              	vTaskSuspendAll:
 2510              	.LFB21:
2108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 2511              		.loc 1 2111 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 1, uses_anonymous_args = 0
 2515              		@ link register save eliminated.
 2516 0000 80B4     		push	{r7}
 2517              	.LCFI81:
 2518              		.cfi_def_cfa_offset 4
 2519              		.cfi_offset 7, -4
 2520 0002 00AF     		add	r7, sp, #0
 2521              	.LCFI82:
 2522              		.cfi_def_cfa_register 7
2112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* A critical section is not required as the variable is of type
2113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * post in the FreeRTOS support forum before reporting this as a bug! -
2115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * http://goo.gl/wu4acr */
2116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * do not otherwise exhibit real time behaviour. */
2119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     portSOFTWARE_BARRIER();
2120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * is used to allow calls to vTaskSuspendAll() to nest. */
2123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     ++uxSchedulerSuspended;
 2523              		.loc 1 2123 0
 2524 0004 044B     		ldr	r3, .L161
 2525 0006 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 86


 2526 0008 0133     		adds	r3, r3, #1
 2527 000a 034A     		ldr	r2, .L161
 2528 000c 1360     		str	r3, [r2]
2124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Enforces ordering for ports and optimised compilers that may otherwise place
2126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * the above increment elsewhere. */
2127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     portMEMORY_BARRIER();
 2529              		.loc 1 2127 0
2128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 2530              		.loc 1 2128 0
 2531 000e BD46     		mov	sp, r7
 2532              	.LCFI83:
 2533              		.cfi_def_cfa_register 13
 2534              		@ sp needed
 2535 0010 5DF8047B 		ldr	r7, [sp], #4
 2536              	.LCFI84:
 2537              		.cfi_restore 7
 2538              		.cfi_def_cfa_offset 0
 2539 0014 7047     		bx	lr
 2540              	.L162:
 2541 0016 00BF     		.align	2
 2542              	.L161:
 2543 0018 00000000 		.word	uxSchedulerSuspended
 2544              		.cfi_endproc
 2545              	.LFE21:
 2547              		.section	.text.xTaskResumeAll,"ax",%progbits
 2548              		.align	2
 2549              		.global	xTaskResumeAll
 2550              		.thumb
 2551              		.thumb_func
 2553              	xTaskResumeAll:
 2554              	.LFB22:
2129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void )
2134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TickType_t xReturn;
2136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* uxHigherPriorityReadyTasks takes care of the case where
2139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * task that are in the Ready state, even though the idle task is
2141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * running. */
2142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     uxHigherPriorityReadyTasks = pdTRUE;
2147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #else
2150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* When port optimised task selection is used the uxTopReadyPriority
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 87


2154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * variable is used as a bit map.  If bits other than the least
2155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * significant bit are set then there are tasks that have a priority
2156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * above the idle priority that are in the Ready state.  This takes
2157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * care of the case where the co-operative scheduler is in use. */
2158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( uxTopReadyPriority > uxLeastSignificantBit )
2159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     uxHigherPriorityReadyTasks = pdTRUE;
2161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */
2164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = 0;
2168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* There are other idle priority tasks in the ready state.  If
2172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * time slicing is used then the very next tick interrupt must be
2173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * processed. */
2174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = 0;
2175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* There are tasks in the Ready state that have a priority above the
2179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * idle priority.  This path can only be reached if
2180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * configUSE_PREEMPTION is 0. */
2181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = 0;
2182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
2184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = xNextTaskUnblockTime - xTickCount;
2186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
2189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 2555              		.loc 1 2195 0
 2556              		.cfi_startproc
 2557              		@ args = 0, pretend = 0, frame = 16
 2558              		@ frame_needed = 1, uses_anonymous_args = 0
 2559 0000 80B5     		push	{r7, lr}
 2560              	.LCFI85:
 2561              		.cfi_def_cfa_offset 8
 2562              		.cfi_offset 7, -8
 2563              		.cfi_offset 14, -4
 2564 0002 84B0     		sub	sp, sp, #16
 2565              	.LCFI86:
 2566              		.cfi_def_cfa_offset 24
 2567 0004 00AF     		add	r7, sp, #0
 2568              	.LCFI87:
 2569              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 88


2196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TCB_t * pxTCB = NULL;
 2570              		.loc 1 2196 0
 2571 0006 0023     		movs	r3, #0
 2572 0008 FB60     		str	r3, [r7, #12]
2197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 2573              		.loc 1 2197 0
 2574 000a 0023     		movs	r3, #0
 2575 000c BB60     		str	r3, [r7, #8]
2198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* If uxSchedulerSuspended is zero then this function does not match a
2200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * previous call to vTaskSuspendAll(). */
2201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( uxSchedulerSuspended );
 2576              		.loc 1 2201 0
 2577 000e 424B     		ldr	r3, .L174
 2578 0010 1B68     		ldr	r3, [r3]
 2579 0012 002B     		cmp	r3, #0
 2580 0014 09D1     		bne	.L164
 2581              	.LBB167:
 2582              	.LBB168:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2583              		.loc 2 197 0 discriminator 1
 2584              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2585 0016 4FF05003 			mov r3, #80												
 2586 001a 83F31188 		msr basepri, r3											
 2587 001e BFF36F8F 		isb														
 2588 0022 BFF34F8F 		dsb														
 2589              	
 2590              	@ 0 "" 2
 2591              		.thumb
 2592 0026 3B60     		str	r3, [r7]
 2593              	.L165:
 2594              	.LBE168:
 2595              	.LBE167:
 2596              		.loc 1 2201 0 discriminator 1
 2597 0028 FEE7     		b	.L165
 2598              	.L164:
2202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* It is possible that an ISR caused a task to be removed from an event
2204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * list while the scheduler was suspended.  If this was the case then the
2205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * removed task will have been added to the xPendingReadyList.  Once the
2206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * scheduler has been resumed it is safe to move all the pending ready
2207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * tasks from this list into their appropriate ready list. */
2208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskENTER_CRITICAL();
 2599              		.loc 1 2208 0
 2600 002a FFF7FEFF 		bl	vPortEnterCritical
2209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         --uxSchedulerSuspended;
 2601              		.loc 1 2210 0
 2602 002e 3A4B     		ldr	r3, .L174
 2603 0030 1B68     		ldr	r3, [r3]
 2604 0032 013B     		subs	r3, r3, #1
 2605 0034 384A     		ldr	r2, .L174
 2606 0036 1360     		str	r3, [r2]
2211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2607              		.loc 1 2212 0
 2608 0038 374B     		ldr	r3, .L174
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 89


 2609 003a 1B68     		ldr	r3, [r3]
 2610 003c 002B     		cmp	r3, #0
 2611 003e 63D1     		bne	.L166
2213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 2612              		.loc 1 2214 0
 2613 0040 364B     		ldr	r3, .L174+4
 2614 0042 1B68     		ldr	r3, [r3]
 2615 0044 002B     		cmp	r3, #0
 2616 0046 5FD0     		beq	.L166
2215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Move any readied tasks from the pending list into the
2217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * appropriate ready list. */
2218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 2617              		.loc 1 2218 0
 2618 0048 30E0     		b	.L167
 2619              	.L168:
2219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 vo
 2620              		.loc 1 2220 0
 2621 004a 354B     		ldr	r3, .L174+8
 2622 004c DB68     		ldr	r3, [r3, #12]
 2623 004e DB68     		ldr	r3, [r3, #12]
 2624 0050 FB60     		str	r3, [r7, #12]
2221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2625              		.loc 1 2221 0
 2626 0052 FB68     		ldr	r3, [r7, #12]
 2627 0054 1833     		adds	r3, r3, #24
 2628 0056 1846     		mov	r0, r3
 2629 0058 FFF7FEFF 		bl	uxListRemove
2222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2630              		.loc 1 2222 0
 2631 005c FB68     		ldr	r3, [r7, #12]
 2632 005e 0433     		adds	r3, r3, #4
 2633 0060 1846     		mov	r0, r3
 2634 0062 FFF7FEFF 		bl	uxListRemove
2223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2635              		.loc 1 2223 0
 2636 0066 FB68     		ldr	r3, [r7, #12]
 2637 0068 DB6A     		ldr	r3, [r3, #44]
 2638 006a 1A46     		mov	r2, r3
 2639 006c 0123     		movs	r3, #1
 2640 006e 03FA02F2 		lsl	r2, r3, r2
 2641 0072 2C4B     		ldr	r3, .L174+12
 2642 0074 1B68     		ldr	r3, [r3]
 2643 0076 1343     		orrs	r3, r3, r2
 2644 0078 2A4A     		ldr	r2, .L174+12
 2645 007a 1360     		str	r3, [r2]
 2646 007c FB68     		ldr	r3, [r7, #12]
 2647 007e DA6A     		ldr	r2, [r3, #44]
 2648 0080 1346     		mov	r3, r2
 2649 0082 9B00     		lsls	r3, r3, #2
 2650 0084 1344     		add	r3, r3, r2
 2651 0086 9B00     		lsls	r3, r3, #2
 2652 0088 274A     		ldr	r2, .L174+16
 2653 008a 1A44     		add	r2, r2, r3
 2654 008c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 90


 2655 008e 0433     		adds	r3, r3, #4
 2656 0090 1046     		mov	r0, r2
 2657 0092 1946     		mov	r1, r3
 2658 0094 FFF7FEFF 		bl	vListInsertEnd
2224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* If the moved task has a priority higher than the current
2226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * task then a yield must be performed. */
2227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2659              		.loc 1 2227 0
 2660 0098 FB68     		ldr	r3, [r7, #12]
 2661 009a DA6A     		ldr	r2, [r3, #44]
 2662 009c 234B     		ldr	r3, .L174+20
 2663 009e 1B68     		ldr	r3, [r3]
 2664 00a0 DB6A     		ldr	r3, [r3, #44]
 2665 00a2 9A42     		cmp	r2, r3
 2666 00a4 02D3     		bcc	.L167
2228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xYieldPending = pdTRUE;
 2667              		.loc 1 2229 0
 2668 00a6 224B     		ldr	r3, .L174+24
 2669 00a8 0122     		movs	r2, #1
 2670 00aa 1A60     		str	r2, [r3]
 2671              	.L167:
2218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
 2672              		.loc 1 2218 0
 2673 00ac 1C4B     		ldr	r3, .L174+8
 2674 00ae 1B68     		ldr	r3, [r3]
 2675 00b0 002B     		cmp	r3, #0
 2676 00b2 CAD1     		bne	.L168
2230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
2232:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2233:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2234:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2235:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2236:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2237:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxTCB != NULL )
 2677              		.loc 1 2237 0
 2678 00b4 FB68     		ldr	r3, [r7, #12]
 2679 00b6 002B     		cmp	r3, #0
 2680 00b8 01D0     		beq	.L169
2238:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2239:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* A task was unblocked while the scheduler was suspended,
2240:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * which may have prevented the next unblock time from being
2241:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * re-calculated, in which case re-calculate it now.  Mainly
2242:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * important for low power tickless implementations, where
2243:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * this can prevent an unnecessary exit from low power
2244:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * state. */
2245:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvResetNextTaskUnblockTime();
 2681              		.loc 1 2245 0
 2682 00ba FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2683              	.L169:
 2684              	.LBB169:
2246:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2247:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2248:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* If any ticks occurred while the scheduler was suspended then
2249:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * they should be processed now.  This ensures the tick count does
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 91


2250:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * not  slip, and that any delayed tasks are resumed at the correct
2251:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * time. */
2252:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2253:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 2685              		.loc 1 2253 0
 2686 00be 1D4B     		ldr	r3, .L174+28
 2687 00c0 1B68     		ldr	r3, [r3]
 2688 00c2 7B60     		str	r3, [r7, #4]
2254:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2255:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( xPendedCounts > ( TickType_t ) 0U )
 2689              		.loc 1 2255 0
 2690 00c4 7B68     		ldr	r3, [r7, #4]
 2691 00c6 002B     		cmp	r3, #0
 2692 00c8 10D0     		beq	.L170
 2693              	.L172:
2256:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2257:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         do
2258:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
2259:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             if( xTaskIncrementTick() != pdFALSE )
 2694              		.loc 1 2259 0
 2695 00ca FFF7FEFF 		bl	xTaskIncrementTick
 2696 00ce 0346     		mov	r3, r0
 2697 00d0 002B     		cmp	r3, #0
 2698 00d2 02D0     		beq	.L171
2260:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
2261:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 xYieldPending = pdTRUE;
 2699              		.loc 1 2261 0
 2700 00d4 164B     		ldr	r3, .L174+24
 2701 00d6 0122     		movs	r2, #1
 2702 00d8 1A60     		str	r2, [r3]
 2703              	.L171:
2262:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
2263:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             else
2264:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
2265:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2266:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
2267:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2268:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             --xPendedCounts;
 2704              		.loc 1 2268 0
 2705 00da 7B68     		ldr	r3, [r7, #4]
 2706 00dc 013B     		subs	r3, r3, #1
 2707 00de 7B60     		str	r3, [r7, #4]
2269:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
 2708              		.loc 1 2269 0
 2709 00e0 7B68     		ldr	r3, [r7, #4]
 2710 00e2 002B     		cmp	r3, #0
 2711 00e4 F1D1     		bne	.L172
2270:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2271:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xPendedTicks = 0;
 2712              		.loc 1 2271 0
 2713 00e6 134B     		ldr	r3, .L174+28
 2714 00e8 0022     		movs	r2, #0
 2715 00ea 1A60     		str	r2, [r3]
 2716              	.L170:
 2717              	.LBE169:
2272:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2273:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 92


2274:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2275:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2276:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2277:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2278:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2279:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xYieldPending != pdFALSE )
 2718              		.loc 1 2279 0
 2719 00ec 104B     		ldr	r3, .L174+24
 2720 00ee 1B68     		ldr	r3, [r3]
 2721 00f0 002B     		cmp	r3, #0
 2722 00f2 09D0     		beq	.L166
2280:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2281:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #if ( configUSE_PREEMPTION != 0 )
2282:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
2283:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             xAlreadyYielded = pdTRUE;
 2723              		.loc 1 2283 0
 2724 00f4 0123     		movs	r3, #1
 2725 00f6 BB60     		str	r3, [r7, #8]
2284:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
2285:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #endif
2286:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
 2726              		.loc 1 2286 0
 2727 00f8 0F4B     		ldr	r3, .L174+32
 2728 00fa 4FF08052 		mov	r2, #268435456
 2729 00fe 1A60     		str	r2, [r3]
 2730              	@ 2286 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 2731 0100 BFF34F8F 		dsb
 2732              	@ 0 "" 2
 2733              	@ 2286 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 2734 0104 BFF36F8F 		isb
 2735              	@ 0 "" 2
 2736              		.thumb
 2737              	.L166:
2287:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2288:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
2289:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2290:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2291:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2292:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2293:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2294:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
2295:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2296:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2297:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2298:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2299:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskEXIT_CRITICAL();
 2738              		.loc 1 2299 0
 2739 0108 FFF7FEFF 		bl	vPortExitCritical
2300:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2301:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return xAlreadyYielded;
 2740              		.loc 1 2301 0
 2741 010c BB68     		ldr	r3, [r7, #8]
2302:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 2742              		.loc 1 2302 0
 2743 010e 1846     		mov	r0, r3
 2744 0110 1037     		adds	r7, r7, #16
 2745              	.LCFI88:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 93


 2746              		.cfi_def_cfa_offset 8
 2747 0112 BD46     		mov	sp, r7
 2748              	.LCFI89:
 2749              		.cfi_def_cfa_register 13
 2750              		@ sp needed
 2751 0114 80BD     		pop	{r7, pc}
 2752              	.L175:
 2753 0116 00BF     		.align	2
 2754              	.L174:
 2755 0118 00000000 		.word	uxSchedulerSuspended
 2756 011c 00000000 		.word	uxCurrentNumberOfTasks
 2757 0120 00000000 		.word	xPendingReadyList
 2758 0124 00000000 		.word	uxTopReadyPriority
 2759 0128 00000000 		.word	pxReadyTasksLists
 2760 012c 00000000 		.word	pxCurrentTCB
 2761 0130 00000000 		.word	xYieldPending
 2762 0134 00000000 		.word	xPendedTicks
 2763 0138 04ED00E0 		.word	-536810236
 2764              		.cfi_endproc
 2765              	.LFE22:
 2767              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2768              		.align	2
 2769              		.global	xTaskGetTickCount
 2770              		.thumb
 2771              		.thumb_func
 2773              	xTaskGetTickCount:
 2774              	.LFB23:
2303:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2304:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2305:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2306:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 2775              		.loc 1 2306 0
 2776              		.cfi_startproc
 2777              		@ args = 0, pretend = 0, frame = 8
 2778              		@ frame_needed = 1, uses_anonymous_args = 0
 2779              		@ link register save eliminated.
 2780 0000 80B4     		push	{r7}
 2781              	.LCFI90:
 2782              		.cfi_def_cfa_offset 4
 2783              		.cfi_offset 7, -4
 2784 0002 83B0     		sub	sp, sp, #12
 2785              	.LCFI91:
 2786              		.cfi_def_cfa_offset 16
 2787 0004 00AF     		add	r7, sp, #0
 2788              	.LCFI92:
 2789              		.cfi_def_cfa_register 7
2307:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TickType_t xTicks;
2308:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2309:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Critical section required if running on a 16 bit processor. */
2310:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     portTICK_TYPE_ENTER_CRITICAL();
2311:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2312:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xTicks = xTickCount;
 2790              		.loc 1 2312 0
 2791 0006 054B     		ldr	r3, .L178
 2792 0008 1B68     		ldr	r3, [r3]
 2793 000a 7B60     		str	r3, [r7, #4]
2313:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 94


2314:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     portTICK_TYPE_EXIT_CRITICAL();
2315:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2316:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return xTicks;
 2794              		.loc 1 2316 0
 2795 000c 7B68     		ldr	r3, [r7, #4]
2317:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 2796              		.loc 1 2317 0
 2797 000e 1846     		mov	r0, r3
 2798 0010 0C37     		adds	r7, r7, #12
 2799              	.LCFI93:
 2800              		.cfi_def_cfa_offset 4
 2801 0012 BD46     		mov	sp, r7
 2802              	.LCFI94:
 2803              		.cfi_def_cfa_register 13
 2804              		@ sp needed
 2805 0014 5DF8047B 		ldr	r7, [sp], #4
 2806              	.LCFI95:
 2807              		.cfi_restore 7
 2808              		.cfi_def_cfa_offset 0
 2809 0018 7047     		bx	lr
 2810              	.L179:
 2811 001a 00BF     		.align	2
 2812              	.L178:
 2813 001c 00000000 		.word	xTickCount
 2814              		.cfi_endproc
 2815              	.LFE23:
 2817              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2818              		.align	2
 2819              		.global	xTaskGetTickCountFromISR
 2820              		.thumb
 2821              		.thumb_func
 2823              	xTaskGetTickCountFromISR:
 2824              	.LFB24:
2318:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2319:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2320:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2321:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 2825              		.loc 1 2321 0
 2826              		.cfi_startproc
 2827              		@ args = 0, pretend = 0, frame = 8
 2828              		@ frame_needed = 1, uses_anonymous_args = 0
 2829 0000 80B5     		push	{r7, lr}
 2830              	.LCFI96:
 2831              		.cfi_def_cfa_offset 8
 2832              		.cfi_offset 7, -8
 2833              		.cfi_offset 14, -4
 2834 0002 82B0     		sub	sp, sp, #8
 2835              	.LCFI97:
 2836              		.cfi_def_cfa_offset 16
 2837 0004 00AF     		add	r7, sp, #0
 2838              	.LCFI98:
 2839              		.cfi_def_cfa_register 7
2322:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TickType_t xReturn;
2323:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
2324:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2325:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
2326:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 95


2327:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * above the maximum system call priority are kept permanently enabled, even
2328:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
2329:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2330:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2331:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
2332:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * assigned a priority above the configured maximum system call priority.
2333:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
2334:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * that have been assigned a priority at or (logically) below the maximum
2335:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * system call  interrupt priority.  FreeRTOS maintains a separate interrupt
2336:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
2337:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * More information (albeit Cortex-M specific) is provided on the following
2338:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
2339:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2840              		.loc 1 2339 0
 2841 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
2340:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2341:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
 2842              		.loc 1 2341 0
 2843 000a 0023     		movs	r3, #0
 2844 000c 7B60     		str	r3, [r7, #4]
2342:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2343:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xReturn = xTickCount;
 2845              		.loc 1 2343 0
 2846 000e 044B     		ldr	r3, .L182
 2847 0010 1B68     		ldr	r3, [r3]
 2848 0012 3B60     		str	r3, [r7]
2344:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2345:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2346:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2347:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return xReturn;
 2849              		.loc 1 2347 0
 2850 0014 3B68     		ldr	r3, [r7]
2348:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 2851              		.loc 1 2348 0
 2852 0016 1846     		mov	r0, r3
 2853 0018 0837     		adds	r7, r7, #8
 2854              	.LCFI99:
 2855              		.cfi_def_cfa_offset 8
 2856 001a BD46     		mov	sp, r7
 2857              	.LCFI100:
 2858              		.cfi_def_cfa_register 13
 2859              		@ sp needed
 2860 001c 80BD     		pop	{r7, pc}
 2861              	.L183:
 2862 001e 00BF     		.align	2
 2863              	.L182:
 2864 0020 00000000 		.word	xTickCount
 2865              		.cfi_endproc
 2866              	.LFE24:
 2868              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2869              		.align	2
 2870              		.global	uxTaskGetNumberOfTasks
 2871              		.thumb
 2872              		.thumb_func
 2874              	uxTaskGetNumberOfTasks:
 2875              	.LFB25:
2349:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 96


2350:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2351:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2352:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 2876              		.loc 1 2352 0
 2877              		.cfi_startproc
 2878              		@ args = 0, pretend = 0, frame = 0
 2879              		@ frame_needed = 1, uses_anonymous_args = 0
 2880              		@ link register save eliminated.
 2881 0000 80B4     		push	{r7}
 2882              	.LCFI101:
 2883              		.cfi_def_cfa_offset 4
 2884              		.cfi_offset 7, -4
 2885 0002 00AF     		add	r7, sp, #0
 2886              	.LCFI102:
 2887              		.cfi_def_cfa_register 7
2353:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* A critical section is not required because the variables are of type
2354:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * BaseType_t. */
2355:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return uxCurrentNumberOfTasks;
 2888              		.loc 1 2355 0
 2889 0004 034B     		ldr	r3, .L186
 2890 0006 1B68     		ldr	r3, [r3]
2356:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 2891              		.loc 1 2356 0
 2892 0008 1846     		mov	r0, r3
 2893 000a BD46     		mov	sp, r7
 2894              	.LCFI103:
 2895              		.cfi_def_cfa_register 13
 2896              		@ sp needed
 2897 000c 5DF8047B 		ldr	r7, [sp], #4
 2898              	.LCFI104:
 2899              		.cfi_restore 7
 2900              		.cfi_def_cfa_offset 0
 2901 0010 7047     		bx	lr
 2902              	.L187:
 2903 0012 00BF     		.align	2
 2904              	.L186:
 2905 0014 00000000 		.word	uxCurrentNumberOfTasks
 2906              		.cfi_endproc
 2907              	.LFE25:
 2909              		.section	.text.pcTaskGetName,"ax",%progbits
 2910              		.align	2
 2911              		.global	pcTaskGetName
 2912              		.thumb
 2913              		.thumb_func
 2915              	pcTaskGetName:
 2916              	.LFB26:
2357:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2358:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2359:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** char * pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed f
2360:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 2917              		.loc 1 2360 0
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 16
 2920              		@ frame_needed = 1, uses_anonymous_args = 0
 2921              		@ link register save eliminated.
 2922 0000 80B4     		push	{r7}
 2923              	.LCFI105:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 97


 2924              		.cfi_def_cfa_offset 4
 2925              		.cfi_offset 7, -4
 2926 0002 85B0     		sub	sp, sp, #20
 2927              	.LCFI106:
 2928              		.cfi_def_cfa_offset 24
 2929 0004 00AF     		add	r7, sp, #0
 2930              	.LCFI107:
 2931              		.cfi_def_cfa_register 7
 2932 0006 7860     		str	r0, [r7, #4]
2361:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TCB_t * pxTCB;
2362:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2363:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* If null is passed in here then the name of the calling task is being
2364:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * queried. */
2365:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     pxTCB = prvGetTCBFromHandle( xTaskToQuery );
 2933              		.loc 1 2365 0
 2934 0008 7B68     		ldr	r3, [r7, #4]
 2935 000a 002B     		cmp	r3, #0
 2936 000c 02D1     		bne	.L189
 2937              		.loc 1 2365 0 is_stmt 0 discriminator 1
 2938 000e 0D4B     		ldr	r3, .L194
 2939 0010 1B68     		ldr	r3, [r3]
 2940 0012 00E0     		b	.L190
 2941              	.L189:
 2942              		.loc 1 2365 0 discriminator 2
 2943 0014 7B68     		ldr	r3, [r7, #4]
 2944              	.L190:
 2945              		.loc 1 2365 0 discriminator 4
 2946 0016 FB60     		str	r3, [r7, #12]
2366:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( pxTCB );
 2947              		.loc 1 2366 0 is_stmt 1 discriminator 4
 2948 0018 FB68     		ldr	r3, [r7, #12]
 2949 001a 002B     		cmp	r3, #0
 2950 001c 09D1     		bne	.L191
 2951              	.LBB170:
 2952              	.LBB171:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2953              		.loc 2 197 0 discriminator 1
 2954              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 2955 001e 4FF05003 			mov r3, #80												
 2956 0022 83F31188 		msr basepri, r3											
 2957 0026 BFF36F8F 		isb														
 2958 002a BFF34F8F 		dsb														
 2959              	
 2960              	@ 0 "" 2
 2961              		.thumb
 2962 002e BB60     		str	r3, [r7, #8]
 2963              	.L192:
 2964              	.LBE171:
 2965              	.LBE170:
 2966              		.loc 1 2366 0 discriminator 1
 2967 0030 FEE7     		b	.L192
 2968              	.L191:
2367:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2969              		.loc 1 2367 0
 2970 0032 FB68     		ldr	r3, [r7, #12]
 2971 0034 3433     		adds	r3, r3, #52
2368:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 98


 2972              		.loc 1 2368 0
 2973 0036 1846     		mov	r0, r3
 2974 0038 1437     		adds	r7, r7, #20
 2975              	.LCFI108:
 2976              		.cfi_def_cfa_offset 4
 2977 003a BD46     		mov	sp, r7
 2978              	.LCFI109:
 2979              		.cfi_def_cfa_register 13
 2980              		@ sp needed
 2981 003c 5DF8047B 		ldr	r7, [sp], #4
 2982              	.LCFI110:
 2983              		.cfi_restore 7
 2984              		.cfi_def_cfa_offset 0
 2985 0040 7047     		bx	lr
 2986              	.L195:
 2987 0042 00BF     		.align	2
 2988              	.L194:
 2989 0044 00000000 		.word	pxCurrentTCB
 2990              		.cfi_endproc
 2991              	.LFE26:
 2993              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 2994              		.align	2
 2995              		.global	uxTaskGetSystemState
 2996              		.thumb
 2997              		.thumb_func
 2999              	uxTaskGetSystemState:
 3000              	.LFB27:
2369:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2370:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2371:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2372:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2373:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
2374:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                      const char pcNameToQuery[] )
2375:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2376:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxNextTCB, * pxFirstTCB, * pxReturn = NULL;
2377:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t x;
2378:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         char cNextChar;
2379:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xBreakLoop;
2380:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2381:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* This function is called with the scheduler suspended. */
2382:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2383:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2384:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2385:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
2386:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2387:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             do
2388:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2389:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
2390:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2391:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Check each character in the name looking for a match or
2392:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * mismatch. */
2393:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xBreakLoop = pdFALSE;
2394:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2395:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2396:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2397:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     cNextChar = pxNextTCB->pcTaskName[ x ];
2398:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 99


2399:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( cNextChar != pcNameToQuery[ x ] )
2400:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2401:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Characters didn't match. */
2402:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xBreakLoop = pdTRUE;
2403:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2404:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else if( cNextChar == ( char ) 0x00 )
2405:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2406:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Both strings terminated, a match must have been
2407:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * found. */
2408:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxReturn = pxNextTCB;
2409:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xBreakLoop = pdTRUE;
2410:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2411:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
2412:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2413:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2414:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2415:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2416:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( xBreakLoop != pdFALSE )
2417:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2418:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         break;
2419:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2420:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2421:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2422:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxReturn != NULL )
2423:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2424:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The handle has been found. */
2425:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
2426:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2427:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
2428:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2429:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
2430:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2431:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2432:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2433:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2434:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return pxReturn;
2435:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2436:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2437:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2438:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2439:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2440:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2441:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2442:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TaskHandle_t xTaskGetHandle( const char * pcNameToQuery ) /*lint !e971 Unqualified char types a
2443:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2444:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxQueue = configMAX_PRIORITIES;
2445:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
2446:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2447:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2448:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2449:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2450:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         vTaskSuspendAll();
2451:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2452:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Search the ready lists. */
2453:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             do
2454:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2455:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 uxQueue--;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 100


2456:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueu
2457:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2458:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxTCB != NULL )
2459:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2460:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Found the handle. */
2461:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
2462:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2463:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as 
2464:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2465:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Search the delayed lists. */
2466:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB == NULL )
2467:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2468:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQ
2469:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2470:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2471:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB == NULL )
2472:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2473:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, p
2474:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2475:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2476:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
2477:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2478:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxTCB == NULL )
2479:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2480:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Search the suspended list. */
2481:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuer
2482:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2483:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2484:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif
2485:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2486:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
2487:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2488:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxTCB == NULL )
2489:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2490:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Search the deleted list. */
2491:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcName
2492:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2493:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2494:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif
2495:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2496:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         ( void ) xTaskResumeAll();
2497:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2498:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return pxTCB;
2499:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2500:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2501:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2502:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2503:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2504:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2505:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2506:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
2507:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       const UBaseType_t uxArraySize,
2508:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       uint32_t * const pulTotalRunTime )
2509:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 3001              		.loc 1 2509 0
 3002              		.cfi_startproc
 3003              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 101


 3004              		@ frame_needed = 1, uses_anonymous_args = 0
 3005 0000 80B5     		push	{r7, lr}
 3006              	.LCFI111:
 3007              		.cfi_def_cfa_offset 8
 3008              		.cfi_offset 7, -8
 3009              		.cfi_offset 14, -4
 3010 0002 86B0     		sub	sp, sp, #24
 3011              	.LCFI112:
 3012              		.cfi_def_cfa_offset 32
 3013 0004 00AF     		add	r7, sp, #0
 3014              	.LCFI113:
 3015              		.cfi_def_cfa_register 7
 3016 0006 F860     		str	r0, [r7, #12]
 3017 0008 B960     		str	r1, [r7, #8]
 3018 000a 7A60     		str	r2, [r7, #4]
2510:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 3019              		.loc 1 2510 0
 3020 000c 0023     		movs	r3, #0
 3021 000e 7B61     		str	r3, [r7, #20]
 3022 0010 0723     		movs	r3, #7
 3023 0012 3B61     		str	r3, [r7, #16]
2511:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2512:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         vTaskSuspendAll();
 3024              		.loc 1 2512 0
 3025 0014 FFF7FEFF 		bl	vTaskSuspendAll
2513:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2514:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Is there a space in the array for each task in the system? */
2515:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( uxArraySize >= uxCurrentNumberOfTasks )
 3026              		.loc 1 2515 0
 3027 0018 3B4B     		ldr	r3, .L201
 3028 001a 1B68     		ldr	r3, [r3]
 3029 001c BA68     		ldr	r2, [r7, #8]
 3030 001e 9A42     		cmp	r2, r3
 3031 0020 6BD3     		bcc	.L197
 3032              	.L198:
2516:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2517:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2518:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * task in the Ready state. */
2519:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 do
2520:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2521:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     uxQueue--;
 3033              		.loc 1 2521 0 discriminator 1
 3034 0022 3B69     		ldr	r3, [r7, #16]
 3035 0024 013B     		subs	r3, r3, #1
 3036 0026 3B61     		str	r3, [r7, #16]
2522:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
 3037              		.loc 1 2522 0 discriminator 1
 3038 0028 7A69     		ldr	r2, [r7, #20]
 3039 002a 1346     		mov	r3, r2
 3040 002c DB00     		lsls	r3, r3, #3
 3041 002e 1344     		add	r3, r3, r2
 3042 0030 9B00     		lsls	r3, r3, #2
 3043 0032 1A46     		mov	r2, r3
 3044 0034 FB68     		ldr	r3, [r7, #12]
 3045 0036 9918     		adds	r1, r3, r2
 3046 0038 3A69     		ldr	r2, [r7, #16]
 3047 003a 1346     		mov	r3, r2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 102


 3048 003c 9B00     		lsls	r3, r3, #2
 3049 003e 1344     		add	r3, r3, r2
 3050 0040 9B00     		lsls	r3, r3, #2
 3051 0042 324A     		ldr	r2, .L201+4
 3052 0044 1344     		add	r3, r3, r2
 3053 0046 0846     		mov	r0, r1
 3054 0048 1946     		mov	r1, r3
 3055 004a 0122     		movs	r2, #1
 3056 004c FFF7FEFF 		bl	prvListTasksWithinSingleList
 3057 0050 0246     		mov	r2, r0
 3058 0052 7B69     		ldr	r3, [r7, #20]
 3059 0054 1344     		add	r3, r3, r2
 3060 0056 7B61     		str	r3, [r7, #20]
2523:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 3061              		.loc 1 2523 0 discriminator 1
 3062 0058 3B69     		ldr	r3, [r7, #16]
 3063 005a 002B     		cmp	r3, #0
 3064 005c E1D1     		bne	.L198
2524:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2525:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2526:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * task in the Blocked state. */
2527:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 3065              		.loc 1 2527 0
 3066 005e 7A69     		ldr	r2, [r7, #20]
 3067 0060 1346     		mov	r3, r2
 3068 0062 DB00     		lsls	r3, r3, #3
 3069 0064 1344     		add	r3, r3, r2
 3070 0066 9B00     		lsls	r3, r3, #2
 3071 0068 1A46     		mov	r2, r3
 3072 006a FB68     		ldr	r3, [r7, #12]
 3073 006c 1A44     		add	r2, r2, r3
 3074 006e 284B     		ldr	r3, .L201+8
 3075 0070 1B68     		ldr	r3, [r3]
 3076 0072 1046     		mov	r0, r2
 3077 0074 1946     		mov	r1, r3
 3078 0076 0222     		movs	r2, #2
 3079 0078 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3080 007c 0246     		mov	r2, r0
 3081 007e 7B69     		ldr	r3, [r7, #20]
 3082 0080 1344     		add	r3, r3, r2
 3083 0082 7B61     		str	r3, [r7, #20]
2528:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 3084              		.loc 1 2528 0
 3085 0084 7A69     		ldr	r2, [r7, #20]
 3086 0086 1346     		mov	r3, r2
 3087 0088 DB00     		lsls	r3, r3, #3
 3088 008a 1344     		add	r3, r3, r2
 3089 008c 9B00     		lsls	r3, r3, #2
 3090 008e 1A46     		mov	r2, r3
 3091 0090 FB68     		ldr	r3, [r7, #12]
 3092 0092 1A44     		add	r2, r2, r3
 3093 0094 1F4B     		ldr	r3, .L201+12
 3094 0096 1B68     		ldr	r3, [r3]
 3095 0098 1046     		mov	r0, r2
 3096 009a 1946     		mov	r1, r3
 3097 009c 0222     		movs	r2, #2
 3098 009e FFF7FEFF 		bl	prvListTasksWithinSingleList
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 103


 3099 00a2 0246     		mov	r2, r0
 3100 00a4 7B69     		ldr	r3, [r7, #20]
 3101 00a6 1344     		add	r3, r3, r2
 3102 00a8 7B61     		str	r3, [r7, #20]
2529:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2530:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #if ( INCLUDE_vTaskDelete == 1 )
2531:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2532:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Fill in an TaskStatus_t structure with information on
2533:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * each task that has been deleted but not yet cleaned up. */
2534:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &
 3103              		.loc 1 2534 0
 3104 00aa 7A69     		ldr	r2, [r7, #20]
 3105 00ac 1346     		mov	r3, r2
 3106 00ae DB00     		lsls	r3, r3, #3
 3107 00b0 1344     		add	r3, r3, r2
 3108 00b2 9B00     		lsls	r3, r3, #2
 3109 00b4 1A46     		mov	r2, r3
 3110 00b6 FB68     		ldr	r3, [r7, #12]
 3111 00b8 1344     		add	r3, r3, r2
 3112 00ba 1846     		mov	r0, r3
 3113 00bc 1649     		ldr	r1, .L201+16
 3114 00be 0422     		movs	r2, #4
 3115 00c0 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3116 00c4 0246     		mov	r2, r0
 3117 00c6 7B69     		ldr	r3, [r7, #20]
 3118 00c8 1344     		add	r3, r3, r2
 3119 00ca 7B61     		str	r3, [r7, #20]
2535:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2536:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif
2537:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2538:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
2539:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2540:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Fill in an TaskStatus_t structure with information on
2541:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * each task in the Suspended state. */
2542:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &
 3120              		.loc 1 2542 0
 3121 00cc 7A69     		ldr	r2, [r7, #20]
 3122 00ce 1346     		mov	r3, r2
 3123 00d0 DB00     		lsls	r3, r3, #3
 3124 00d2 1344     		add	r3, r3, r2
 3125 00d4 9B00     		lsls	r3, r3, #2
 3126 00d6 1A46     		mov	r2, r3
 3127 00d8 FB68     		ldr	r3, [r7, #12]
 3128 00da 1344     		add	r3, r3, r2
 3129 00dc 1846     		mov	r0, r3
 3130 00de 0F49     		ldr	r1, .L201+20
 3131 00e0 0322     		movs	r2, #3
 3132 00e2 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3133 00e6 0246     		mov	r2, r0
 3134 00e8 7B69     		ldr	r3, [r7, #20]
 3135 00ea 1344     		add	r3, r3, r2
 3136 00ec 7B61     		str	r3, [r7, #20]
2543:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2544:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif
2545:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2546:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #if ( configGENERATE_RUN_TIME_STATS == 1 )
2547:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 104


2548:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( pulTotalRunTime != NULL )
2549:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
2550:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2551:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2552:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             #else
2553:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 *pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2554:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             #endif
2555:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
2556:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2557:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #else /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2558:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2559:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( pulTotalRunTime != NULL )
 3137              		.loc 1 2559 0
 3138 00ee 7B68     		ldr	r3, [r7, #4]
 3139 00f0 002B     		cmp	r3, #0
 3140 00f2 02D0     		beq	.L197
2560:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
2561:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             *pulTotalRunTime = 0;
 3141              		.loc 1 2561 0
 3142 00f4 7B68     		ldr	r3, [r7, #4]
 3143 00f6 0022     		movs	r2, #0
 3144 00f8 1A60     		str	r2, [r3]
 3145              	.L197:
2562:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
2563:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2564:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2565:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2566:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
2567:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2568:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2569:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2570:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2571:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         ( void ) xTaskResumeAll();
 3146              		.loc 1 2571 0
 3147 00fa FFF7FEFF 		bl	xTaskResumeAll
2572:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2573:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return uxTask;
 3148              		.loc 1 2573 0
 3149 00fe 7B69     		ldr	r3, [r7, #20]
2574:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 3150              		.loc 1 2574 0
 3151 0100 1846     		mov	r0, r3
 3152 0102 1837     		adds	r7, r7, #24
 3153              	.LCFI114:
 3154              		.cfi_def_cfa_offset 8
 3155 0104 BD46     		mov	sp, r7
 3156              	.LCFI115:
 3157              		.cfi_def_cfa_register 13
 3158              		@ sp needed
 3159 0106 80BD     		pop	{r7, pc}
 3160              	.L202:
 3161              		.align	2
 3162              	.L201:
 3163 0108 00000000 		.word	uxCurrentNumberOfTasks
 3164 010c 00000000 		.word	pxReadyTasksLists
 3165 0110 00000000 		.word	pxDelayedTaskList
 3166 0114 00000000 		.word	pxOverflowDelayedTaskList
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 105


 3167 0118 00000000 		.word	xTasksWaitingTermination
 3168 011c 00000000 		.word	xSuspendedTaskList
 3169              		.cfi_endproc
 3170              	.LFE27:
 3172              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3173              		.align	2
 3174              		.global	xTaskCatchUpTicks
 3175              		.thumb
 3176              		.thumb_func
 3178              	xTaskCatchUpTicks:
 3179              	.LFB28:
2575:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2576:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2577:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2578:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2579:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2580:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2581:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TaskHandle_t xTaskGetIdleTaskHandle( void )
2582:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2583:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2584:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * started, then xIdleTaskHandle will be NULL. */
2585:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( ( xIdleTaskHandle != NULL ) );
2586:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xIdleTaskHandle;
2587:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2588:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2589:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2590:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2591:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2592:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2593:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * This is to ensure vTaskStepTick() is available when user defined low power mode
2594:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2595:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * 1. */
2596:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2597:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2598:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskStepTick( const TickType_t xTicksToJump )
2599:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2600:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Correct the tick count value after a period during which the tick
2601:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * was suppressed.  Note this does *not* call the tick hook function for
2602:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * each stepped tick. */
2603:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2604:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xTickCount += xTicksToJump;
2605:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         traceINCREASE_TICK_COUNT( xTicksToJump );
2606:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2607:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2608:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2609:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2610:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2611:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2612:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 3180              		.loc 1 2612 0
 3181              		.cfi_startproc
 3182              		@ args = 0, pretend = 0, frame = 16
 3183              		@ frame_needed = 1, uses_anonymous_args = 0
 3184 0000 80B5     		push	{r7, lr}
 3185              	.LCFI116:
 3186              		.cfi_def_cfa_offset 8
 3187              		.cfi_offset 7, -8
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 106


 3188              		.cfi_offset 14, -4
 3189 0002 84B0     		sub	sp, sp, #16
 3190              	.LCFI117:
 3191              		.cfi_def_cfa_offset 24
 3192 0004 00AF     		add	r7, sp, #0
 3193              	.LCFI118:
 3194              		.cfi_def_cfa_register 7
 3195 0006 7860     		str	r0, [r7, #4]
2613:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xYieldOccurred;
2614:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2615:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Must not be called with the scheduler suspended as the implementation
2616:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2617:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( uxSchedulerSuspended == 0 );
 3196              		.loc 1 2617 0
 3197 0008 0E4B     		ldr	r3, .L207
 3198 000a 1B68     		ldr	r3, [r3]
 3199 000c 002B     		cmp	r3, #0
 3200 000e 09D0     		beq	.L204
 3201              	.LBB172:
 3202              	.LBB173:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3203              		.loc 2 197 0 discriminator 1
 3204              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3205 0010 4FF05003 			mov r3, #80												
 3206 0014 83F31188 		msr basepri, r3											
 3207 0018 BFF36F8F 		isb														
 3208 001c BFF34F8F 		dsb														
 3209              	
 3210              	@ 0 "" 2
 3211              		.thumb
 3212 0020 BB60     		str	r3, [r7, #8]
 3213              	.L205:
 3214              	.LBE173:
 3215              	.LBE172:
 3216              		.loc 1 2617 0 discriminator 1
 3217 0022 FEE7     		b	.L205
 3218              	.L204:
2618:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2619:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2620:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2621:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vTaskSuspendAll();
 3219              		.loc 1 2621 0
 3220 0024 FFF7FEFF 		bl	vTaskSuspendAll
2622:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     xPendedTicks += xTicksToCatchUp;
 3221              		.loc 1 2622 0
 3222 0028 074B     		ldr	r3, .L207+4
 3223 002a 1A68     		ldr	r2, [r3]
 3224 002c 7B68     		ldr	r3, [r7, #4]
 3225 002e 1344     		add	r3, r3, r2
 3226 0030 054A     		ldr	r2, .L207+4
 3227 0032 1360     		str	r3, [r2]
2623:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     xYieldOccurred = xTaskResumeAll();
 3228              		.loc 1 2623 0
 3229 0034 FFF7FEFF 		bl	xTaskResumeAll
 3230 0038 F860     		str	r0, [r7, #12]
2624:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2625:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return xYieldOccurred;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 107


 3231              		.loc 1 2625 0
 3232 003a FB68     		ldr	r3, [r7, #12]
2626:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 3233              		.loc 1 2626 0
 3234 003c 1846     		mov	r0, r3
 3235 003e 1037     		adds	r7, r7, #16
 3236              	.LCFI119:
 3237              		.cfi_def_cfa_offset 8
 3238 0040 BD46     		mov	sp, r7
 3239              	.LCFI120:
 3240              		.cfi_def_cfa_register 13
 3241              		@ sp needed
 3242 0042 80BD     		pop	{r7, pc}
 3243              	.L208:
 3244              		.align	2
 3245              	.L207:
 3246 0044 00000000 		.word	uxSchedulerSuspended
 3247 0048 00000000 		.word	xPendedTicks
 3248              		.cfi_endproc
 3249              	.LFE28:
 3251              		.section	.text.xTaskIncrementTick,"ax",%progbits
 3252              		.align	2
 3253              		.global	xTaskIncrementTick
 3254              		.thumb
 3255              		.thumb_func
 3257              	xTaskIncrementTick:
 3258              	.LFB29:
2627:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2628:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2629:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2630:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2631:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2632:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2633:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB = xTask;
2634:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn;
2635:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2636:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( pxTCB );
2637:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2638:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         vTaskSuspendAll();
2639:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2640:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* A task can only be prematurely removed from the Blocked state if
2641:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * it is actually in the Blocked state. */
2642:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( eTaskGetState( xTask ) == eBlocked )
2643:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2644:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdPASS;
2645:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2646:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Remove the reference to the task from the blocked list.  An
2647:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * interrupt won't touch the xStateListItem because the
2648:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * scheduler is suspended. */
2649:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2650:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2651:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Is the task waiting on an event also?  If so remove it from
2652:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the event list too.  Interrupts can touch the event list item,
2653:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * even though the scheduler is suspended, so a critical section
2654:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * is used. */
2655:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 taskENTER_CRITICAL();
2656:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 108


2657:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2658:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2659:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2660:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2661:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* This lets the task know it was forcibly removed from the
2662:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * blocked state so it should not re-evaluate its block time and
2663:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * then block again. */
2664:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxTCB->ucDelayAborted = pdTRUE;
2665:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2666:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
2667:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2668:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2669:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2670:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2671:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 taskEXIT_CRITICAL();
2672:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2673:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Place the unblocked task into the appropriate ready list. */
2674:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
2675:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2676:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* A task being unblocked cannot cause an immediate context
2677:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * switch if preemption is turned off. */
2678:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #if ( configUSE_PREEMPTION == 1 )
2679:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2680:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Preemption is on, but a context switch should only be
2681:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          *  performed if the unblocked task has a priority that is
2682:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          *  equal to or higher than the currently executing task. */
2683:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2684:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
2685:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             /* Pend the yield to be performed when the scheduler
2686:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                              * is unsuspended. */
2687:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             xYieldPending = pdTRUE;
2688:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
2689:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         else
2690:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
2691:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
2692:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
2693:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2694:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif /* configUSE_PREEMPTION */
2695:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2696:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
2697:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2698:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdFAIL;
2699:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2700:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2701:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         ( void ) xTaskResumeAll();
2702:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2703:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
2704:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2705:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2706:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2707:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2708:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2709:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2710:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 3259              		.loc 1 2710 0
 3260              		.cfi_startproc
 3261              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 109


 3262              		@ frame_needed = 1, uses_anonymous_args = 0
 3263 0000 80B5     		push	{r7, lr}
 3264              	.LCFI121:
 3265              		.cfi_def_cfa_offset 8
 3266              		.cfi_offset 7, -8
 3267              		.cfi_offset 14, -4
 3268 0002 86B0     		sub	sp, sp, #24
 3269              	.LCFI122:
 3270              		.cfi_def_cfa_offset 32
 3271 0004 00AF     		add	r7, sp, #0
 3272              	.LCFI123:
 3273              		.cfi_def_cfa_register 7
2711:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TCB_t * pxTCB;
2712:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TickType_t xItemValue;
2713:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
 3274              		.loc 1 2713 0
 3275 0006 0023     		movs	r3, #0
 3276 0008 7B61     		str	r3, [r7, #20]
2714:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2715:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Called by the portable layer each time a tick interrupt occurs.
2716:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * Increments the tick then checks to see if the new tick value will cause any
2717:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * tasks to be unblocked. */
2718:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     traceTASK_INCREMENT_TICK( xTickCount );
2719:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2720:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3277              		.loc 1 2720 0
 3278 000a 4F4B     		ldr	r3, .L224
 3279 000c 1B68     		ldr	r3, [r3]
 3280 000e 002B     		cmp	r3, #0
 3281 0010 40F08F80 		bne	.L210
 3282              	.LBB174:
2721:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2722:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this
2723:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * block. */
2724:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 3283              		.loc 1 2724 0
 3284 0014 4D4B     		ldr	r3, .L224+4
 3285 0016 1B68     		ldr	r3, [r3]
 3286 0018 0133     		adds	r3, r3, #1
 3287 001a 3B61     		str	r3, [r7, #16]
2725:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2726:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Increment the RTOS tick, switching the delayed and overflowed
2727:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * delayed lists if it wraps to 0. */
2728:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xTickCount = xConstTickCount;
 3288              		.loc 1 2728 0
 3289 001c 4B4A     		ldr	r2, .L224+4
 3290 001e 3B69     		ldr	r3, [r7, #16]
 3291 0020 1360     		str	r3, [r2]
2729:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2730:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to fa
 3292              		.loc 1 2730 0
 3293 0022 3B69     		ldr	r3, [r7, #16]
 3294 0024 002B     		cmp	r3, #0
 3295 0026 1FD1     		bne	.L211
 3296              	.LBB175:
2731:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2732:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             taskSWITCH_DELAYED_LISTS();
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 110


 3297              		.loc 1 2732 0
 3298 0028 494B     		ldr	r3, .L224+8
 3299 002a 1B68     		ldr	r3, [r3]
 3300 002c 1B68     		ldr	r3, [r3]
 3301 002e 002B     		cmp	r3, #0
 3302 0030 09D0     		beq	.L212
 3303              	.LBB176:
 3304              	.LBB177:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3305              		.loc 2 197 0 discriminator 1
 3306              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3307 0032 4FF05003 			mov r3, #80												
 3308 0036 83F31188 		msr basepri, r3											
 3309 003a BFF36F8F 		isb														
 3310 003e BFF34F8F 		dsb														
 3311              	
 3312              	@ 0 "" 2
 3313              		.thumb
 3314 0042 3B60     		str	r3, [r7]
 3315              	.L213:
 3316              	.LBE177:
 3317              	.LBE176:
 3318              		.loc 1 2732 0 discriminator 1
 3319 0044 FEE7     		b	.L213
 3320              	.L212:
 3321              		.loc 1 2732 0 is_stmt 0 discriminator 2
 3322 0046 424B     		ldr	r3, .L224+8
 3323 0048 1B68     		ldr	r3, [r3]
 3324 004a FB60     		str	r3, [r7, #12]
 3325 004c 414B     		ldr	r3, .L224+12
 3326 004e 1B68     		ldr	r3, [r3]
 3327 0050 3F4A     		ldr	r2, .L224+8
 3328 0052 1360     		str	r3, [r2]
 3329 0054 3F4A     		ldr	r2, .L224+12
 3330 0056 FB68     		ldr	r3, [r7, #12]
 3331 0058 1360     		str	r3, [r2]
 3332 005a 3F4B     		ldr	r3, .L224+16
 3333 005c 1B68     		ldr	r3, [r3]
 3334 005e 0133     		adds	r3, r3, #1
 3335 0060 3D4A     		ldr	r2, .L224+16
 3336 0062 1360     		str	r3, [r2]
 3337 0064 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3338              	.L211:
 3339              	.LBE175:
2733:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2734:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
2735:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2736:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2737:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2738:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2739:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* See if this tick has made a timeout expire.  Tasks are stored in
2740:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the  queue in the order of their wake time - meaning once one task
2741:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * has been found whose block time has not expired there is no need to
2742:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * look any further down the list. */
2743:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xConstTickCount >= xNextTaskUnblockTime )
 3340              		.loc 1 2743 0 is_stmt 1
 3341 0068 3C4B     		ldr	r3, .L224+20
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 111


 3342 006a 1B68     		ldr	r3, [r3]
 3343 006c 3A69     		ldr	r2, [r7, #16]
 3344 006e 9A42     		cmp	r2, r3
 3345 0070 4AD3     		bcc	.L214
 3346              	.L219:
2744:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2745:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             for( ; ; )
2746:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2747:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 3347              		.loc 1 2747 0
 3348 0072 374B     		ldr	r3, .L224+8
 3349 0074 1B68     		ldr	r3, [r3]
 3350 0076 1B68     		ldr	r3, [r3]
 3351 0078 002B     		cmp	r3, #0
 3352 007a 04D1     		bne	.L215
2748:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2749:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The delayed list is empty.  Set xNextTaskUnblockTime
2750:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * to the maximum possible value so it is extremely
2751:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * unlikely that the
2752:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * if( xTickCount >= xNextTaskUnblockTime ) test will pass
2753:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * next time through. */
2754:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts
 3353              		.loc 1 2754 0
 3354 007c 374B     		ldr	r3, .L224+20
 3355 007e 4FF0FF32 		mov	r2, #-1
 3356 0082 1A60     		str	r2, [r3]
2755:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 3357              		.loc 1 2755 0
 3358 0084 40E0     		b	.L214
 3359              	.L215:
2756:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2757:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
2758:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2759:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The delayed list is not empty, get the value of the
2760:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * item at the head of the delayed list.  This is the time
2761:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * at which the task at the head of the delayed list must
2762:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * be removed from the Blocked state. */
2763:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * 
 3360              		.loc 1 2763 0
 3361 0086 324B     		ldr	r3, .L224+8
 3362 0088 1B68     		ldr	r3, [r3]
 3363 008a DB68     		ldr	r3, [r3, #12]
 3364 008c DB68     		ldr	r3, [r3, #12]
 3365 008e BB60     		str	r3, [r7, #8]
2764:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3366              		.loc 1 2764 0
 3367 0090 BB68     		ldr	r3, [r7, #8]
 3368 0092 5B68     		ldr	r3, [r3, #4]
 3369 0094 7B60     		str	r3, [r7, #4]
2765:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2766:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( xConstTickCount < xItemValue )
 3370              		.loc 1 2766 0
 3371 0096 3A69     		ldr	r2, [r7, #16]
 3372 0098 7B68     		ldr	r3, [r7, #4]
 3373 009a 9A42     		cmp	r2, r3
 3374 009c 03D2     		bcs	.L216
2767:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 112


2768:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* It is not time to unblock this item yet, but the
2769:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * item value is the time at which the task at the head
2770:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * of the blocked list must be removed from the Blocked
2771:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * state -  so record the item value in
2772:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * xNextTaskUnblockTime. */
2773:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xNextTaskUnblockTime = xItemValue;
 3375              		.loc 1 2773 0
 3376 009e 2F4A     		ldr	r2, .L224+20
 3377 00a0 7B68     		ldr	r3, [r7, #4]
 3378 00a2 1360     		str	r3, [r2]
2774:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         break; /*lint !e9011 Code structure here is deedmed easier to understand wi
 3379              		.loc 1 2774 0
 3380 00a4 30E0     		b	.L214
 3381              	.L216:
2775:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2776:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
2777:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2778:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2779:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2780:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2781:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* It is time to remove the item from the Blocked state. */
2782:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 3382              		.loc 1 2782 0
 3383 00a6 BB68     		ldr	r3, [r7, #8]
 3384 00a8 0433     		adds	r3, r3, #4
 3385 00aa 1846     		mov	r0, r3
 3386 00ac FFF7FEFF 		bl	uxListRemove
2783:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2784:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Is the task waiting on an event also?  If so remove
2785:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * it from the event list. */
2786:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 3387              		.loc 1 2786 0
 3388 00b0 BB68     		ldr	r3, [r7, #8]
 3389 00b2 9B6A     		ldr	r3, [r3, #40]
 3390 00b4 002B     		cmp	r3, #0
 3391 00b6 04D0     		beq	.L217
2787:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2788:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 3392              		.loc 1 2788 0
 3393 00b8 BB68     		ldr	r3, [r7, #8]
 3394 00ba 1833     		adds	r3, r3, #24
 3395 00bc 1846     		mov	r0, r3
 3396 00be FFF7FEFF 		bl	uxListRemove
 3397              	.L217:
2789:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2790:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
2791:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
2792:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2793:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
2794:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2795:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Place the unblocked task into the appropriate ready
2796:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * list. */
2797:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3398              		.loc 1 2797 0
 3399 00c2 BB68     		ldr	r3, [r7, #8]
 3400 00c4 DB6A     		ldr	r3, [r3, #44]
 3401 00c6 1A46     		mov	r2, r3
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 113


 3402 00c8 0123     		movs	r3, #1
 3403 00ca 03FA02F2 		lsl	r2, r3, r2
 3404 00ce 244B     		ldr	r3, .L224+24
 3405 00d0 1B68     		ldr	r3, [r3]
 3406 00d2 1343     		orrs	r3, r3, r2
 3407 00d4 224A     		ldr	r2, .L224+24
 3408 00d6 1360     		str	r3, [r2]
 3409 00d8 BB68     		ldr	r3, [r7, #8]
 3410 00da DA6A     		ldr	r2, [r3, #44]
 3411 00dc 1346     		mov	r3, r2
 3412 00de 9B00     		lsls	r3, r3, #2
 3413 00e0 1344     		add	r3, r3, r2
 3414 00e2 9B00     		lsls	r3, r3, #2
 3415 00e4 1F4A     		ldr	r2, .L224+28
 3416 00e6 1A44     		add	r2, r2, r3
 3417 00e8 BB68     		ldr	r3, [r7, #8]
 3418 00ea 0433     		adds	r3, r3, #4
 3419 00ec 1046     		mov	r0, r2
 3420 00ee 1946     		mov	r1, r3
 3421 00f0 FFF7FEFF 		bl	vListInsertEnd
2798:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2799:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* A task being unblocked cannot cause an immediate
2800:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * context switch if preemption is turned off. */
2801:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #if ( configUSE_PREEMPTION == 1 )
2802:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
2803:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             /* Preemption is on, but a context switch should
2804:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                              * only be performed if the unblocked task has a
2805:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                              * priority that is equal to or higher than the
2806:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                              * currently executing task. */
2807:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 3422              		.loc 1 2807 0
 3423 00f4 BB68     		ldr	r3, [r7, #8]
 3424 00f6 DA6A     		ldr	r2, [r3, #44]
 3425 00f8 1B4B     		ldr	r3, .L224+32
 3426 00fa 1B68     		ldr	r3, [r3]
 3427 00fc DB6A     		ldr	r3, [r3, #44]
 3428 00fe 9A42     		cmp	r2, r3
 3429 0100 01D3     		bcc	.L218
2808:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
2809:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 xSwitchRequired = pdTRUE;
 3430              		.loc 1 2809 0
 3431 0102 0123     		movs	r3, #1
 3432 0104 7B61     		str	r3, [r7, #20]
 3433              	.L218:
2810:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
2811:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             else
2812:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
2813:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2814:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
2815:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
2816:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     #endif /* configUSE_PREEMPTION */
2817:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2818:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
 3434              		.loc 1 2818 0
 3435 0106 B4E7     		b	.L219
 3436              	.L214:
2819:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 114


2820:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2821:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Tasks of equal priority to the currently running task will share
2822:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * processing time (time slice) if preemption is on, and the application
2823:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * writer has not explicitly turned time slicing off. */
2824:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2825:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2826:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) >
 3437              		.loc 1 2826 0
 3438 0108 174B     		ldr	r3, .L224+32
 3439 010a 1B68     		ldr	r3, [r3]
 3440 010c DA6A     		ldr	r2, [r3, #44]
 3441 010e 1549     		ldr	r1, .L224+28
 3442 0110 1346     		mov	r3, r2
 3443 0112 9B00     		lsls	r3, r3, #2
 3444 0114 1344     		add	r3, r3, r2
 3445 0116 9B00     		lsls	r3, r3, #2
 3446 0118 0B44     		add	r3, r3, r1
 3447 011a 1B68     		ldr	r3, [r3]
 3448 011c 012B     		cmp	r3, #1
 3449 011e 01D9     		bls	.L220
2827:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2828:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xSwitchRequired = pdTRUE;
 3450              		.loc 1 2828 0
 3451 0120 0123     		movs	r3, #1
 3452 0122 7B61     		str	r3, [r7, #20]
 3453              	.L220:
2829:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2830:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
2831:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2832:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2833:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2834:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2835:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2836:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2837:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2838:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2839:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Guard against the tick hook being called when the pended tick
2840:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * count is being unwound (when the scheduler is being unlocked). */
2841:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xPendedTicks == ( TickType_t ) 0 )
2842:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2843:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vApplicationTickHook();
2844:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2845:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
2846:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2847:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2848:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2849:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2850:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_TICK_HOOK */
2851:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2852:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_PREEMPTION == 1 )
2853:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2854:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xYieldPending != pdFALSE )
 3454              		.loc 1 2854 0
 3455 0124 114B     		ldr	r3, .L224+36
 3456 0126 1B68     		ldr	r3, [r3]
 3457 0128 002B     		cmp	r3, #0
 3458 012a 01D0     		beq	.L221
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 115


2855:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2856:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xSwitchRequired = pdTRUE;
 3459              		.loc 1 2856 0
 3460 012c 0123     		movs	r3, #1
 3461 012e 7B61     		str	r3, [r7, #20]
 3462              	.L221:
 3463              	.LBE174:
 3464 0130 04E0     		b	.L222
 3465              	.L210:
2857:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2858:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
2859:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
2860:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2861:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
2862:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2863:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_PREEMPTION */
2864:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2865:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
2866:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2867:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         ++xPendedTicks;
 3466              		.loc 1 2867 0
 3467 0132 0F4B     		ldr	r3, .L224+40
 3468 0134 1B68     		ldr	r3, [r3]
 3469 0136 0133     		adds	r3, r3, #1
 3470 0138 0D4A     		ldr	r2, .L224+40
 3471 013a 1360     		str	r3, [r2]
 3472              	.L222:
2868:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2869:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The tick hook gets called at regular intervals, even if the
2870:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * scheduler is locked. */
2871:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2872:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
2873:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vApplicationTickHook();
2874:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
2875:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
2876:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2877:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2878:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return xSwitchRequired;
 3473              		.loc 1 2878 0
 3474 013c 7B69     		ldr	r3, [r7, #20]
2879:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 3475              		.loc 1 2879 0
 3476 013e 1846     		mov	r0, r3
 3477 0140 1837     		adds	r7, r7, #24
 3478              	.LCFI124:
 3479              		.cfi_def_cfa_offset 8
 3480 0142 BD46     		mov	sp, r7
 3481              	.LCFI125:
 3482              		.cfi_def_cfa_register 13
 3483              		@ sp needed
 3484 0144 80BD     		pop	{r7, pc}
 3485              	.L225:
 3486 0146 00BF     		.align	2
 3487              	.L224:
 3488 0148 00000000 		.word	uxSchedulerSuspended
 3489 014c 00000000 		.word	xTickCount
 3490 0150 00000000 		.word	pxDelayedTaskList
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 116


 3491 0154 00000000 		.word	pxOverflowDelayedTaskList
 3492 0158 00000000 		.word	xNumOfOverflows
 3493 015c 00000000 		.word	xNextTaskUnblockTime
 3494 0160 00000000 		.word	uxTopReadyPriority
 3495 0164 00000000 		.word	pxReadyTasksLists
 3496 0168 00000000 		.word	pxCurrentTCB
 3497 016c 00000000 		.word	xYieldPending
 3498 0170 00000000 		.word	xPendedTicks
 3499              		.cfi_endproc
 3500              	.LFE29:
 3502              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3503              		.align	2
 3504              		.global	vTaskSwitchContext
 3505              		.thumb
 3506              		.thumb_func
 3508              	vTaskSwitchContext:
 3509              	.LFB30:
2880:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2881:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2882:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2883:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2884:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskSetApplicationTaskTag( TaskHandle_t xTask,
2885:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                      TaskHookFunction_t pxHookFunction )
2886:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2887:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * xTCB;
2888:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2889:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If xTask is NULL then it is the task hook of the calling task that is
2890:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * getting set. */
2891:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xTask == NULL )
2892:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2893:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xTCB = ( TCB_t * ) pxCurrentTCB;
2894:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2895:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
2896:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2897:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xTCB = xTask;
2898:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2899:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2900:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2901:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the value can be accessed from an interrupt. */
2902:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
2903:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2904:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xTCB->pxTaskTag = pxHookFunction;
2905:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2906:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
2907:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2908:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2909:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2910:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2911:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2912:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2913:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2914:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2915:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2916:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
2917:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TaskHookFunction_t xReturn;
2918:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2919:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 117


2920:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2921:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2922:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2923:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the value can be accessed from an interrupt. */
2924:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
2925:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2926:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2927:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2928:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
2929:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2930:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
2931:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2932:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2933:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2934:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2935:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2936:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2937:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2938:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2939:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2940:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
2941:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TaskHookFunction_t xReturn;
2942:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
2943:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2944:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2945:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2946:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2947:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2948:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the value can be accessed from an interrupt. */
2949:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2950:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2951:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2952:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2953:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2954:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2955:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
2956:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2957:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2958:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2959:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2960:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2961:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2962:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2963:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask,
2964:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                              void * pvParameter )
2965:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2966:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * xTCB;
2967:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn;
2968:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2969:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If xTask is NULL then we are calling our own task hook. */
2970:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xTask == NULL )
2971:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2972:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xTCB = pxCurrentTCB;
2973:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2974:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
2975:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2976:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xTCB = xTask;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 118


2977:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2978:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2979:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xTCB->pxTaskTag != NULL )
2980:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2981:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = xTCB->pxTaskTag( pvParameter );
2982:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2983:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
2984:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
2985:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = pdFAIL;
2986:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
2987:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2988:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
2989:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
2990:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2991:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2992:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2993:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
2994:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2995:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 3510              		.loc 1 2995 0
 3511              		.cfi_startproc
 3512              		@ args = 0, pretend = 0, frame = 24
 3513              		@ frame_needed = 1, uses_anonymous_args = 0
 3514              		@ link register save eliminated.
 3515 0000 80B4     		push	{r7}
 3516              	.LCFI126:
 3517              		.cfi_def_cfa_offset 4
 3518              		.cfi_offset 7, -4
 3519 0002 87B0     		sub	sp, sp, #28
 3520              	.LCFI127:
 3521              		.cfi_def_cfa_offset 32
 3522 0004 00AF     		add	r7, sp, #0
 3523              	.LCFI128:
 3524              		.cfi_def_cfa_register 7
2996:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3525              		.loc 1 2996 0
 3526 0006 264B     		ldr	r3, .L233
 3527 0008 1B68     		ldr	r3, [r3]
 3528 000a 002B     		cmp	r3, #0
 3529 000c 03D0     		beq	.L227
2997:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
2998:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The scheduler is currently suspended - do not allow a context
2999:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * switch. */
3000:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xYieldPending = pdTRUE;
 3530              		.loc 1 3000 0
 3531 000e 254B     		ldr	r3, .L233+4
 3532 0010 0122     		movs	r2, #1
 3533 0012 1A60     		str	r2, [r3]
 3534 0014 3EE0     		b	.L226
 3535              	.L227:
3001:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3002:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
3003:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3004:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xYieldPending = pdFALSE;
 3536              		.loc 1 3004 0
 3537 0016 234B     		ldr	r3, .L233+4
 3538 0018 0022     		movs	r2, #0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 119


 3539 001a 1A60     		str	r2, [r3]
 3540              	.LBB178:
3005:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         traceTASK_SWITCHED_OUT();
3006:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3007:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3008:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3009:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3010:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3011:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #else
3012:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3013:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif
3014:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3015:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Add the amount of time the task has been running to the
3016:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * accumulated time so far.  The time the task started running was
3017:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * stored in ulTaskSwitchedInTime.  Note that there is no overflow
3018:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * protection here so count values are only valid until the timer
3019:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * overflows.  The guard against negative values is to protect
3020:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * against suspect run time stat counter implementations - which
3021:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * are provided by the application, not the kernel. */
3022:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( ulTotalRunTime > ulTaskSwitchedInTime )
3023:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3024:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3025:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3026:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
3027:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3028:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3029:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3030:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3031:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ulTaskSwitchedInTime = ulTotalRunTime;
3032:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3033:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configGENERATE_RUN_TIME_STATS */
3034:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3035:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Check for stack overflow, if configured. */
3036:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskCHECK_FOR_STACK_OVERFLOW();
3037:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3038:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Before the currently running task is switched out, save its errno. */
3039:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3040:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3041:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3042:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3043:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3044:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3045:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Select a new task to run using either the generic C or port
3046:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * optimised asm code. */
3047:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with
 3541              		.loc 1 3047 0
 3542 001c 224B     		ldr	r3, .L233+8
 3543 001e 1B68     		ldr	r3, [r3]
 3544 0020 FB60     		str	r3, [r7, #12]
 3545              	.LBB179:
 3546              	.LBB180:
 135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3547              		.loc 2 135 0
 3548 0022 FB68     		ldr	r3, [r7, #12]
 3549              	@ 135 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3550 0024 B3FA83F3 		clz r3, r3
 3551              	@ 0 "" 2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 120


 3552              		.thumb
 3553 0028 FB72     		strb	r3, [r7, #11]
 137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3554              		.loc 2 137 0
 3555 002a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3556              	.LBE180:
 3557              	.LBE179:
 3558              		.loc 1 3047 0
 3559 002c C3F11F03 		rsb	r3, r3, #31
 3560 0030 7B61     		str	r3, [r7, #20]
 3561 0032 1E49     		ldr	r1, .L233+12
 3562 0034 7A69     		ldr	r2, [r7, #20]
 3563 0036 1346     		mov	r3, r2
 3564 0038 9B00     		lsls	r3, r3, #2
 3565 003a 1344     		add	r3, r3, r2
 3566 003c 9B00     		lsls	r3, r3, #2
 3567 003e 0B44     		add	r3, r3, r1
 3568 0040 1B68     		ldr	r3, [r3]
 3569 0042 002B     		cmp	r3, #0
 3570 0044 09D1     		bne	.L230
 3571              	.LBB181:
 3572              	.LBB182:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3573              		.loc 2 197 0 discriminator 1
 3574              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3575 0046 4FF05003 			mov r3, #80												
 3576 004a 83F31188 		msr basepri, r3											
 3577 004e BFF36F8F 		isb														
 3578 0052 BFF34F8F 		dsb														
 3579              	
 3580              	@ 0 "" 2
 3581              		.thumb
 3582 0056 7B60     		str	r3, [r7, #4]
 3583              	.L231:
 3584              	.LBE182:
 3585              	.LBE181:
 3586              		.loc 1 3047 0 discriminator 1
 3587 0058 FEE7     		b	.L231
 3588              	.L230:
 3589              	.LBB183:
 3590              		.loc 1 3047 0 is_stmt 0 discriminator 2
 3591 005a 7A69     		ldr	r2, [r7, #20]
 3592 005c 1346     		mov	r3, r2
 3593 005e 9B00     		lsls	r3, r3, #2
 3594 0060 1344     		add	r3, r3, r2
 3595 0062 9B00     		lsls	r3, r3, #2
 3596 0064 114A     		ldr	r2, .L233+12
 3597 0066 1344     		add	r3, r3, r2
 3598 0068 3B61     		str	r3, [r7, #16]
 3599 006a 3B69     		ldr	r3, [r7, #16]
 3600 006c 5B68     		ldr	r3, [r3, #4]
 3601 006e 5A68     		ldr	r2, [r3, #4]
 3602 0070 3B69     		ldr	r3, [r7, #16]
 3603 0072 5A60     		str	r2, [r3, #4]
 3604 0074 3B69     		ldr	r3, [r7, #16]
 3605 0076 5A68     		ldr	r2, [r3, #4]
 3606 0078 3B69     		ldr	r3, [r7, #16]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 121


 3607 007a 0833     		adds	r3, r3, #8
 3608 007c 9A42     		cmp	r2, r3
 3609 007e 04D1     		bne	.L232
 3610              		.loc 1 3047 0 discriminator 3
 3611 0080 3B69     		ldr	r3, [r7, #16]
 3612 0082 5B68     		ldr	r3, [r3, #4]
 3613 0084 5A68     		ldr	r2, [r3, #4]
 3614 0086 3B69     		ldr	r3, [r7, #16]
 3615 0088 5A60     		str	r2, [r3, #4]
 3616              	.L232:
 3617              		.loc 1 3047 0 discriminator 5
 3618 008a 3B69     		ldr	r3, [r7, #16]
 3619 008c 5B68     		ldr	r3, [r3, #4]
 3620 008e DB68     		ldr	r3, [r3, #12]
 3621 0090 074A     		ldr	r2, .L233+16
 3622 0092 1360     		str	r3, [r2]
 3623              	.L226:
 3624              	.LBE183:
 3625              	.LBE178:
3048:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         traceTASK_SWITCHED_IN();
3049:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3050:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* After the new task is switched in, update the global errno. */
3051:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3052:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3053:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3054:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3055:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3056:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3057:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
3058:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3059:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Switch Newlib's _impure_ptr variable to point to the _reent
3060:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * structure specific to this task.
3061:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3062:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * for additional information. */
3063:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 _impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3064:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3065:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
3066:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3067:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 3626              		.loc 1 3067 0 is_stmt 1
 3627 0094 1C37     		adds	r7, r7, #28
 3628              	.LCFI129:
 3629              		.cfi_def_cfa_offset 4
 3630 0096 BD46     		mov	sp, r7
 3631              	.LCFI130:
 3632              		.cfi_def_cfa_register 13
 3633              		@ sp needed
 3634 0098 5DF8047B 		ldr	r7, [sp], #4
 3635              	.LCFI131:
 3636              		.cfi_restore 7
 3637              		.cfi_def_cfa_offset 0
 3638 009c 7047     		bx	lr
 3639              	.L234:
 3640 009e 00BF     		.align	2
 3641              	.L233:
 3642 00a0 00000000 		.word	uxSchedulerSuspended
 3643 00a4 00000000 		.word	xYieldPending
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 122


 3644 00a8 00000000 		.word	uxTopReadyPriority
 3645 00ac 00000000 		.word	pxReadyTasksLists
 3646 00b0 00000000 		.word	pxCurrentTCB
 3647              		.cfi_endproc
 3648              	.LFE30:
 3650              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3651              		.align	2
 3652              		.global	vTaskPlaceOnEventList
 3653              		.thumb
 3654              		.thumb_func
 3656              	vTaskPlaceOnEventList:
 3657              	.LFB31:
3068:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3069:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3070:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList,
3071:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             const TickType_t xTicksToWait )
3072:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 3658              		.loc 1 3072 0
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 16
 3661              		@ frame_needed = 1, uses_anonymous_args = 0
 3662 0000 80B5     		push	{r7, lr}
 3663              	.LCFI132:
 3664              		.cfi_def_cfa_offset 8
 3665              		.cfi_offset 7, -8
 3666              		.cfi_offset 14, -4
 3667 0002 84B0     		sub	sp, sp, #16
 3668              	.LCFI133:
 3669              		.cfi_def_cfa_offset 24
 3670 0004 00AF     		add	r7, sp, #0
 3671              	.LCFI134:
 3672              		.cfi_def_cfa_register 7
 3673 0006 7860     		str	r0, [r7, #4]
 3674 0008 3960     		str	r1, [r7]
3073:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( pxEventList );
 3675              		.loc 1 3073 0
 3676 000a 7B68     		ldr	r3, [r7, #4]
 3677 000c 002B     		cmp	r3, #0
 3678 000e 09D1     		bne	.L236
 3679              	.LBB184:
 3680              	.LBB185:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3681              		.loc 2 197 0 discriminator 1
 3682              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3683 0010 4FF05003 			mov r3, #80												
 3684 0014 83F31188 		msr basepri, r3											
 3685 0018 BFF36F8F 		isb														
 3686 001c BFF34F8F 		dsb														
 3687              	
 3688              	@ 0 "" 2
 3689              		.thumb
 3690 0020 FB60     		str	r3, [r7, #12]
 3691              	.L237:
 3692              	.LBE185:
 3693              	.LBE184:
 3694              		.loc 1 3073 0 discriminator 1
 3695 0022 FEE7     		b	.L237
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 123


 3696              	.L236:
3074:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3075:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3076:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3077:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3078:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Place the event list item of the TCB in the appropriate event list.
3079:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * This is placed in the list in priority order so the highest priority task
3080:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * is the first to be woken by the event.  The queue that contains the event
3081:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * list is locked, preventing simultaneous access from interrupts. */
3082:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3697              		.loc 1 3082 0
 3698 0024 064B     		ldr	r3, .L238
 3699 0026 1B68     		ldr	r3, [r3]
 3700 0028 1833     		adds	r3, r3, #24
 3701 002a 7868     		ldr	r0, [r7, #4]
 3702 002c 1946     		mov	r1, r3
 3703 002e FFF7FEFF 		bl	vListInsert
3083:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3084:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 3704              		.loc 1 3084 0
 3705 0032 3868     		ldr	r0, [r7]
 3706 0034 0121     		movs	r1, #1
 3707 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
3085:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 3708              		.loc 1 3085 0
 3709 003a 1037     		adds	r7, r7, #16
 3710              	.LCFI135:
 3711              		.cfi_def_cfa_offset 8
 3712 003c BD46     		mov	sp, r7
 3713              	.LCFI136:
 3714              		.cfi_def_cfa_register 13
 3715              		@ sp needed
 3716 003e 80BD     		pop	{r7, pc}
 3717              	.L239:
 3718              		.align	2
 3719              	.L238:
 3720 0040 00000000 		.word	pxCurrentTCB
 3721              		.cfi_endproc
 3722              	.LFE31:
 3724              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3725              		.align	2
 3726              		.global	vTaskPlaceOnUnorderedEventList
 3727              		.thumb
 3728              		.thumb_func
 3730              	vTaskPlaceOnUnorderedEventList:
 3731              	.LFB32:
3086:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3087:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3088:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
3089:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                      const TickType_t xItemValue,
3090:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                      const TickType_t xTicksToWait )
3091:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 3732              		.loc 1 3091 0
 3733              		.cfi_startproc
 3734              		@ args = 0, pretend = 0, frame = 24
 3735              		@ frame_needed = 1, uses_anonymous_args = 0
 3736 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 124


 3737              	.LCFI137:
 3738              		.cfi_def_cfa_offset 8
 3739              		.cfi_offset 7, -8
 3740              		.cfi_offset 14, -4
 3741 0002 86B0     		sub	sp, sp, #24
 3742              	.LCFI138:
 3743              		.cfi_def_cfa_offset 32
 3744 0004 00AF     		add	r7, sp, #0
 3745              	.LCFI139:
 3746              		.cfi_def_cfa_register 7
 3747 0006 F860     		str	r0, [r7, #12]
 3748 0008 B960     		str	r1, [r7, #8]
 3749 000a 7A60     		str	r2, [r7, #4]
3092:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( pxEventList );
 3750              		.loc 1 3092 0
 3751 000c FB68     		ldr	r3, [r7, #12]
 3752 000e 002B     		cmp	r3, #0
 3753 0010 09D1     		bne	.L241
 3754              	.LBB186:
 3755              	.LBB187:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3756              		.loc 2 197 0 discriminator 1
 3757              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3758 0012 4FF05003 			mov r3, #80												
 3759 0016 83F31188 		msr basepri, r3											
 3760 001a BFF36F8F 		isb														
 3761 001e BFF34F8F 		dsb														
 3762              	
 3763              	@ 0 "" 2
 3764              		.thumb
 3765 0022 7B61     		str	r3, [r7, #20]
 3766              	.L242:
 3767              	.LBE187:
 3768              	.LBE186:
 3769              		.loc 1 3092 0 discriminator 1
 3770 0024 FEE7     		b	.L242
 3771              	.L241:
3093:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3094:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3095:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * the event groups implementation. */
3096:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( uxSchedulerSuspended != 0 );
 3772              		.loc 1 3096 0
 3773 0026 114B     		ldr	r3, .L245
 3774 0028 1B68     		ldr	r3, [r3]
 3775 002a 002B     		cmp	r3, #0
 3776 002c 09D1     		bne	.L243
 3777              	.LBB188:
 3778              	.LBB189:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3779              		.loc 2 197 0 discriminator 1
 3780              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3781 002e 4FF05003 			mov r3, #80												
 3782 0032 83F31188 		msr basepri, r3											
 3783 0036 BFF36F8F 		isb														
 3784 003a BFF34F8F 		dsb														
 3785              	
 3786              	@ 0 "" 2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 125


 3787              		.thumb
 3788 003e 3B61     		str	r3, [r7, #16]
 3789              	.L244:
 3790              	.LBE189:
 3791              	.LBE188:
 3792              		.loc 1 3096 0 discriminator 2
 3793 0040 FEE7     		b	.L244
 3794              	.L243:
3097:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3098:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Store the item value in the event list item.  It is safe to access the
3099:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * event list item here as interrupts won't access the event list item of a
3100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * task that is not in the Blocked state. */
3101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VA
 3795              		.loc 1 3101 0
 3796 0042 0B4B     		ldr	r3, .L245+4
 3797 0044 1B68     		ldr	r3, [r3]
 3798 0046 BA68     		ldr	r2, [r7, #8]
 3799 0048 42F00042 		orr	r2, r2, #-2147483648
 3800 004c 9A61     		str	r2, [r3, #24]
3102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Place the event list item of the TCB at the end of the appropriate event
3104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * list.  It is safe to access the event list here because it is part of an
3105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * event group implementation - and interrupts don't access event groups
3106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * directly (instead they access them indirectly by pending function calls to
3107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * the task level). */
3108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3801              		.loc 1 3108 0
 3802 004e 084B     		ldr	r3, .L245+4
 3803 0050 1B68     		ldr	r3, [r3]
 3804 0052 1833     		adds	r3, r3, #24
 3805 0054 F868     		ldr	r0, [r7, #12]
 3806 0056 1946     		mov	r1, r3
 3807 0058 FFF7FEFF 		bl	vListInsertEnd
3109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 3808              		.loc 1 3110 0
 3809 005c 7868     		ldr	r0, [r7, #4]
 3810 005e 0121     		movs	r1, #1
 3811 0060 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
3111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 3812              		.loc 1 3111 0
 3813 0064 1837     		adds	r7, r7, #24
 3814              	.LCFI140:
 3815              		.cfi_def_cfa_offset 8
 3816 0066 BD46     		mov	sp, r7
 3817              	.LCFI141:
 3818              		.cfi_def_cfa_register 13
 3819              		@ sp needed
 3820 0068 80BD     		pop	{r7, pc}
 3821              	.L246:
 3822 006a 00BF     		.align	2
 3823              	.L245:
 3824 006c 00000000 		.word	uxSchedulerSuspended
 3825 0070 00000000 		.word	pxCurrentTCB
 3826              		.cfi_endproc
 3827              	.LFE32:
 3829              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 126


 3830              		.align	2
 3831              		.global	vTaskPlaceOnEventListRestricted
 3832              		.thumb
 3833              		.thumb_func
 3835              	vTaskPlaceOnEventListRestricted:
 3836              	.LFB33:
3112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TIMERS == 1 )
3115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskPlaceOnEventListRestricted( List_t * const pxEventList,
3117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                           TickType_t xTicksToWait,
3118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                           const BaseType_t xWaitIndefinitely )
3119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 3837              		.loc 1 3119 0
 3838              		.cfi_startproc
 3839              		@ args = 0, pretend = 0, frame = 24
 3840              		@ frame_needed = 1, uses_anonymous_args = 0
 3841 0000 80B5     		push	{r7, lr}
 3842              	.LCFI142:
 3843              		.cfi_def_cfa_offset 8
 3844              		.cfi_offset 7, -8
 3845              		.cfi_offset 14, -4
 3846 0002 86B0     		sub	sp, sp, #24
 3847              	.LCFI143:
 3848              		.cfi_def_cfa_offset 32
 3849 0004 00AF     		add	r7, sp, #0
 3850              	.LCFI144:
 3851              		.cfi_def_cfa_register 7
 3852 0006 F860     		str	r0, [r7, #12]
 3853 0008 B960     		str	r1, [r7, #8]
 3854 000a 7A60     		str	r2, [r7, #4]
3120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( pxEventList );
 3855              		.loc 1 3120 0
 3856 000c FB68     		ldr	r3, [r7, #12]
 3857 000e 002B     		cmp	r3, #0
 3858 0010 09D1     		bne	.L248
 3859              	.LBB190:
 3860              	.LBB191:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3861              		.loc 2 197 0 discriminator 1
 3862              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3863 0012 4FF05003 			mov r3, #80												
 3864 0016 83F31188 		msr basepri, r3											
 3865 001a BFF36F8F 		isb														
 3866 001e BFF34F8F 		dsb														
 3867              	
 3868              	@ 0 "" 2
 3869              		.thumb
 3870 0022 7B61     		str	r3, [r7, #20]
 3871              	.L249:
 3872              	.LBE191:
 3873              	.LBE190:
 3874              		.loc 1 3120 0 discriminator 1
 3875 0024 FEE7     		b	.L249
 3876              	.L248:
3121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 127


3122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* This function should not be called by application code hence the
3123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
3124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * designed for use by kernel code, and has special calling requirements -
3125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * it should be called with the scheduler suspended. */
3126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Place the event list item of the TCB in the appropriate event list.
3129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * In this case it is assume that this is the only task that is going to
3130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * be waiting on this event list, so the faster vListInsertEnd() function
3131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * can be used in place of vListInsert. */
3132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3877              		.loc 1 3132 0
 3878 0026 0A4B     		ldr	r3, .L251
 3879 0028 1B68     		ldr	r3, [r3]
 3880 002a 1833     		adds	r3, r3, #24
 3881 002c F868     		ldr	r0, [r7, #12]
 3882 002e 1946     		mov	r1, r3
 3883 0030 FFF7FEFF 		bl	vListInsertEnd
3133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If the task should block indefinitely then set the block time to a
3135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * value that will be recognised as an indefinite delay inside the
3136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * prvAddCurrentTaskToDelayedList() function. */
3137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xWaitIndefinitely != pdFALSE )
 3884              		.loc 1 3137 0
 3885 0034 7B68     		ldr	r3, [r7, #4]
 3886 0036 002B     		cmp	r3, #0
 3887 0038 02D0     		beq	.L250
3138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xTicksToWait = portMAX_DELAY;
 3888              		.loc 1 3139 0
 3889 003a 4FF0FF33 		mov	r3, #-1
 3890 003e BB60     		str	r3, [r7, #8]
 3891              	.L250:
3140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 3892              		.loc 1 3143 0
 3893 0040 B868     		ldr	r0, [r7, #8]
 3894 0042 7968     		ldr	r1, [r7, #4]
 3895 0044 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
3144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 3896              		.loc 1 3144 0
 3897 0048 1837     		adds	r7, r7, #24
 3898              	.LCFI145:
 3899              		.cfi_def_cfa_offset 8
 3900 004a BD46     		mov	sp, r7
 3901              	.LCFI146:
 3902              		.cfi_def_cfa_register 13
 3903              		@ sp needed
 3904 004c 80BD     		pop	{r7, pc}
 3905              	.L252:
 3906 004e 00BF     		.align	2
 3907              	.L251:
 3908 0050 00000000 		.word	pxCurrentTCB
 3909              		.cfi_endproc
 3910              	.LFE33:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 128


 3912              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3913              		.align	2
 3914              		.global	xTaskRemoveFromEventList
 3915              		.thumb
 3916              		.thumb_func
 3918              	xTaskRemoveFromEventList:
 3919              	.LFB34:
3145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 3920              		.loc 1 3150 0
 3921              		.cfi_startproc
 3922              		@ args = 0, pretend = 0, frame = 24
 3923              		@ frame_needed = 1, uses_anonymous_args = 0
 3924 0000 80B5     		push	{r7, lr}
 3925              	.LCFI147:
 3926              		.cfi_def_cfa_offset 8
 3927              		.cfi_offset 7, -8
 3928              		.cfi_offset 14, -4
 3929 0002 86B0     		sub	sp, sp, #24
 3930              	.LCFI148:
 3931              		.cfi_def_cfa_offset 32
 3932 0004 00AF     		add	r7, sp, #0
 3933              	.LCFI149:
 3934              		.cfi_def_cfa_register 7
 3935 0006 7860     		str	r0, [r7, #4]
3151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TCB_t * pxUnblockedTCB;
3152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xReturn;
3153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * called from a critical section within an ISR. */
3156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* The event list is sorted in priority order, so the first in the list can
3158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * be removed as it is known to be the highest priority.  Remove the TCB from
3159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * the delayed list, and add it to the ready list.
3160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      *
3161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * If an event is for a queue that is locked then this function will never
3162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * get called - the lock count on the queue will get modified instead.  This
3163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * means exclusive access to the event list is guaranteed here.
3164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      *
3165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * This function assumes that a check has already been made to ensure that
3166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * pxEventList is not empty. */
3167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as th
 3936              		.loc 1 3167 0
 3937 0008 7B68     		ldr	r3, [r7, #4]
 3938 000a DB68     		ldr	r3, [r3, #12]
 3939 000c DB68     		ldr	r3, [r3, #12]
 3940 000e 3B61     		str	r3, [r7, #16]
3168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( pxUnblockedTCB );
 3941              		.loc 1 3168 0
 3942 0010 3B69     		ldr	r3, [r7, #16]
 3943 0012 002B     		cmp	r3, #0
 3944 0014 09D1     		bne	.L254
 3945              	.LBB192:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 129


 3946              	.LBB193:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3947              		.loc 2 197 0 discriminator 1
 3948              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 3949 0016 4FF05003 			mov r3, #80												
 3950 001a 83F31188 		msr basepri, r3											
 3951 001e BFF36F8F 		isb														
 3952 0022 BFF34F8F 		dsb														
 3953              	
 3954              	@ 0 "" 2
 3955              		.thumb
 3956 0026 FB60     		str	r3, [r7, #12]
 3957              	.L255:
 3958              	.LBE193:
 3959              	.LBE192:
 3960              		.loc 1 3168 0 discriminator 1
 3961 0028 FEE7     		b	.L255
 3962              	.L254:
3169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3963              		.loc 1 3169 0
 3964 002a 3B69     		ldr	r3, [r7, #16]
 3965 002c 1833     		adds	r3, r3, #24
 3966 002e 1846     		mov	r0, r3
 3967 0030 FFF7FEFF 		bl	uxListRemove
3170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3968              		.loc 1 3171 0
 3969 0034 1E4B     		ldr	r3, .L261
 3970 0036 1B68     		ldr	r3, [r3]
 3971 0038 002B     		cmp	r3, #0
 3972 003a 1ED1     		bne	.L256
3172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         ( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 3973              		.loc 1 3173 0
 3974 003c 3B69     		ldr	r3, [r7, #16]
 3975 003e 0433     		adds	r3, r3, #4
 3976 0040 1846     		mov	r0, r3
 3977 0042 FFF7FEFF 		bl	uxListRemove
3174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 3978              		.loc 1 3174 0
 3979 0046 3B69     		ldr	r3, [r7, #16]
 3980 0048 DB6A     		ldr	r3, [r3, #44]
 3981 004a 1A46     		mov	r2, r3
 3982 004c 0123     		movs	r3, #1
 3983 004e 03FA02F2 		lsl	r2, r3, r2
 3984 0052 184B     		ldr	r3, .L261+4
 3985 0054 1B68     		ldr	r3, [r3]
 3986 0056 1343     		orrs	r3, r3, r2
 3987 0058 164A     		ldr	r2, .L261+4
 3988 005a 1360     		str	r3, [r2]
 3989 005c 3B69     		ldr	r3, [r7, #16]
 3990 005e DA6A     		ldr	r2, [r3, #44]
 3991 0060 1346     		mov	r3, r2
 3992 0062 9B00     		lsls	r3, r3, #2
 3993 0064 1344     		add	r3, r3, r2
 3994 0066 9B00     		lsls	r3, r3, #2
 3995 0068 134A     		ldr	r2, .L261+8
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 130


 3996 006a 1A44     		add	r2, r2, r3
 3997 006c 3B69     		ldr	r3, [r7, #16]
 3998 006e 0433     		adds	r3, r3, #4
 3999 0070 1046     		mov	r0, r2
 4000 0072 1946     		mov	r1, r3
 4001 0074 FFF7FEFF 		bl	vListInsertEnd
 4002 0078 05E0     		b	.L257
 4003              	.L256:
3175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * might be set to the blocked task's time out time.  If the task is
3180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * normally left unchanged, because it is automatically reset to a new
3182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * value when the tick count equals xNextTaskUnblockTime.  However if
3183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * tickless idling is used it might be more important to enter sleep mode
3184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * at the earliest possible time - so reset xNextTaskUnblockTime here to
3185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * ensure it is updated at the earliest possible time. */
3186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvResetNextTaskUnblockTime();
3187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
3191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The delayed and ready lists cannot be accessed, so hold this task
3193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * pending until the scheduler is resumed. */
3194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 4004              		.loc 1 3194 0
 4005 007a 3B69     		ldr	r3, [r7, #16]
 4006 007c 1833     		adds	r3, r3, #24
 4007 007e 0F48     		ldr	r0, .L261+12
 4008 0080 1946     		mov	r1, r3
 4009 0082 FFF7FEFF 		bl	vListInsertEnd
 4010              	.L257:
3195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 4011              		.loc 1 3197 0
 4012 0086 3B69     		ldr	r3, [r7, #16]
 4013 0088 DA6A     		ldr	r2, [r3, #44]
 4014 008a 0D4B     		ldr	r3, .L261+16
 4015 008c 1B68     		ldr	r3, [r3]
 4016 008e DB6A     		ldr	r3, [r3, #44]
 4017 0090 9A42     		cmp	r2, r3
 4018 0092 05D9     		bls	.L258
3198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Return true if the task removed from the event list has a higher
3200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * priority than the calling task.  This allows the calling task to know if
3201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * it should force a context switch now. */
3202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xReturn = pdTRUE;
 4019              		.loc 1 3202 0
 4020 0094 0123     		movs	r3, #1
 4021 0096 7B61     		str	r3, [r7, #20]
3203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Mark that a yield is pending in case the user is not using the
3205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 131


3206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xYieldPending = pdTRUE;
 4022              		.loc 1 3206 0
 4023 0098 0A4B     		ldr	r3, .L261+20
 4024 009a 0122     		movs	r2, #1
 4025 009c 1A60     		str	r2, [r3]
 4026 009e 01E0     		b	.L259
 4027              	.L258:
3207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
3209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xReturn = pdFALSE;
 4028              		.loc 1 3210 0
 4029 00a0 0023     		movs	r3, #0
 4030 00a2 7B61     		str	r3, [r7, #20]
 4031              	.L259:
3211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return xReturn;
 4032              		.loc 1 3213 0
 4033 00a4 7B69     		ldr	r3, [r7, #20]
3214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 4034              		.loc 1 3214 0
 4035 00a6 1846     		mov	r0, r3
 4036 00a8 1837     		adds	r7, r7, #24
 4037              	.LCFI150:
 4038              		.cfi_def_cfa_offset 8
 4039 00aa BD46     		mov	sp, r7
 4040              	.LCFI151:
 4041              		.cfi_def_cfa_register 13
 4042              		@ sp needed
 4043 00ac 80BD     		pop	{r7, pc}
 4044              	.L262:
 4045 00ae 00BF     		.align	2
 4046              	.L261:
 4047 00b0 00000000 		.word	uxSchedulerSuspended
 4048 00b4 00000000 		.word	uxTopReadyPriority
 4049 00b8 00000000 		.word	pxReadyTasksLists
 4050 00bc 00000000 		.word	xPendingReadyList
 4051 00c0 00000000 		.word	pxCurrentTCB
 4052 00c4 00000000 		.word	xYieldPending
 4053              		.cfi_endproc
 4054              	.LFE34:
 4056              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4057              		.align	2
 4058              		.global	vTaskRemoveFromUnorderedEventList
 4059              		.thumb
 4060              		.thumb_func
 4062              	vTaskRemoveFromUnorderedEventList:
 4063              	.LFB35:
3215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
3218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                         const TickType_t xItemValue )
3219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 4064              		.loc 1 3219 0
 4065              		.cfi_startproc
 4066              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 132


 4067              		@ frame_needed = 1, uses_anonymous_args = 0
 4068 0000 80B5     		push	{r7, lr}
 4069              	.LCFI152:
 4070              		.cfi_def_cfa_offset 8
 4071              		.cfi_offset 7, -8
 4072              		.cfi_offset 14, -4
 4073 0002 86B0     		sub	sp, sp, #24
 4074              	.LCFI153:
 4075              		.cfi_def_cfa_offset 32
 4076 0004 00AF     		add	r7, sp, #0
 4077              	.LCFI154:
 4078              		.cfi_def_cfa_register 7
 4079 0006 7860     		str	r0, [r7, #4]
 4080 0008 3960     		str	r1, [r7]
3220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TCB_t * pxUnblockedTCB;
3221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * the event flags implementation. */
3224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( uxSchedulerSuspended != pdFALSE );
 4081              		.loc 1 3224 0
 4082 000a 284B     		ldr	r3, .L269
 4083 000c 1B68     		ldr	r3, [r3]
 4084 000e 002B     		cmp	r3, #0
 4085 0010 09D1     		bne	.L264
 4086              	.LBB194:
 4087              	.LBB195:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4088              		.loc 2 197 0 discriminator 1
 4089              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 4090 0012 4FF05003 			mov r3, #80												
 4091 0016 83F31188 		msr basepri, r3											
 4092 001a BFF36F8F 		isb														
 4093 001e BFF34F8F 		dsb														
 4094              	
 4095              	@ 0 "" 2
 4096              		.thumb
 4097 0022 3B61     		str	r3, [r7, #16]
 4098              	.L265:
 4099              	.LBE195:
 4100              	.LBE194:
 4101              		.loc 1 3224 0 discriminator 1
 4102 0024 FEE7     		b	.L265
 4103              	.L264:
3225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Store the new item value in the event list. */
3227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
 4104              		.loc 1 3227 0
 4105 0026 3B68     		ldr	r3, [r7]
 4106 0028 43F00042 		orr	r2, r3, #-2147483648
 4107 002c 7B68     		ldr	r3, [r7, #4]
 4108 002e 1A60     		str	r2, [r3]
3228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Remove the event list form the event flag.  Interrupts do not access
3230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * event flags. */
3231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as th
 4109              		.loc 1 3231 0
 4110 0030 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 133


 4111 0032 DB68     		ldr	r3, [r3, #12]
 4112 0034 7B61     		str	r3, [r7, #20]
3232:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( pxUnblockedTCB );
 4113              		.loc 1 3232 0
 4114 0036 7B69     		ldr	r3, [r7, #20]
 4115 0038 002B     		cmp	r3, #0
 4116 003a 09D1     		bne	.L266
 4117              	.LBB196:
 4118              	.LBB197:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4119              		.loc 2 197 0 discriminator 1
 4120              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 4121 003c 4FF05003 			mov r3, #80												
 4122 0040 83F31188 		msr basepri, r3											
 4123 0044 BFF36F8F 		isb														
 4124 0048 BFF34F8F 		dsb														
 4125              	
 4126              	@ 0 "" 2
 4127              		.thumb
 4128 004c FB60     		str	r3, [r7, #12]
 4129              	.L267:
 4130              	.LBE197:
 4131              	.LBE196:
 4132              		.loc 1 3232 0 discriminator 2
 4133 004e FEE7     		b	.L267
 4134              	.L266:
3233:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     ( void ) uxListRemove( pxEventListItem );
 4135              		.loc 1 3233 0
 4136 0050 7868     		ldr	r0, [r7, #4]
 4137 0052 FFF7FEFF 		bl	uxListRemove
3234:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3235:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( configUSE_TICKLESS_IDLE != 0 )
3236:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3237:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3238:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * might be set to the blocked task's time out time.  If the task is
3239:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3240:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * normally left unchanged, because it is automatically reset to a new
3241:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * value when the tick count equals xNextTaskUnblockTime.  However if
3242:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * tickless idling is used it might be more important to enter sleep mode
3243:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * at the earliest possible time - so reset xNextTaskUnblockTime here to
3244:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * ensure it is updated at the earliest possible time. */
3245:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             prvResetNextTaskUnblockTime();
3246:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3247:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
3248:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3249:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Remove the task from the delayed list and add it to the ready list.  The
3250:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * scheduler is suspended so interrupts will not be accessing the ready
3251:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * lists. */
3252:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 4138              		.loc 1 3252 0
 4139 0056 7B69     		ldr	r3, [r7, #20]
 4140 0058 0433     		adds	r3, r3, #4
 4141 005a 1846     		mov	r0, r3
 4142 005c FFF7FEFF 		bl	uxListRemove
3253:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4143              		.loc 1 3253 0
 4144 0060 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 134


 4145 0062 DB6A     		ldr	r3, [r3, #44]
 4146 0064 1A46     		mov	r2, r3
 4147 0066 0123     		movs	r3, #1
 4148 0068 03FA02F2 		lsl	r2, r3, r2
 4149 006c 104B     		ldr	r3, .L269+4
 4150 006e 1B68     		ldr	r3, [r3]
 4151 0070 1343     		orrs	r3, r3, r2
 4152 0072 0F4A     		ldr	r2, .L269+4
 4153 0074 1360     		str	r3, [r2]
 4154 0076 7B69     		ldr	r3, [r7, #20]
 4155 0078 DA6A     		ldr	r2, [r3, #44]
 4156 007a 1346     		mov	r3, r2
 4157 007c 9B00     		lsls	r3, r3, #2
 4158 007e 1344     		add	r3, r3, r2
 4159 0080 9B00     		lsls	r3, r3, #2
 4160 0082 0C4A     		ldr	r2, .L269+8
 4161 0084 1A44     		add	r2, r2, r3
 4162 0086 7B69     		ldr	r3, [r7, #20]
 4163 0088 0433     		adds	r3, r3, #4
 4164 008a 1046     		mov	r0, r2
 4165 008c 1946     		mov	r1, r3
 4166 008e FFF7FEFF 		bl	vListInsertEnd
3254:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3255:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 4167              		.loc 1 3255 0
 4168 0092 7B69     		ldr	r3, [r7, #20]
 4169 0094 DA6A     		ldr	r2, [r3, #44]
 4170 0096 084B     		ldr	r3, .L269+12
 4171 0098 1B68     		ldr	r3, [r3]
 4172 009a DB6A     		ldr	r3, [r3, #44]
 4173 009c 9A42     		cmp	r2, r3
 4174 009e 02D9     		bls	.L263
3256:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3257:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The unblocked task has a priority above that of the calling task, so
3258:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * a context switch is required.  This function is called with the
3259:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * scheduler suspended so xYieldPending is set so the context switch
3260:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * occurs immediately that the scheduler is resumed (unsuspended). */
3261:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xYieldPending = pdTRUE;
 4175              		.loc 1 3261 0
 4176 00a0 064B     		ldr	r3, .L269+16
 4177 00a2 0122     		movs	r2, #1
 4178 00a4 1A60     		str	r2, [r3]
 4179              	.L263:
3262:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3263:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 4180              		.loc 1 3263 0
 4181 00a6 1837     		adds	r7, r7, #24
 4182              	.LCFI155:
 4183              		.cfi_def_cfa_offset 8
 4184 00a8 BD46     		mov	sp, r7
 4185              	.LCFI156:
 4186              		.cfi_def_cfa_register 13
 4187              		@ sp needed
 4188 00aa 80BD     		pop	{r7, pc}
 4189              	.L270:
 4190              		.align	2
 4191              	.L269:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 135


 4192 00ac 00000000 		.word	uxSchedulerSuspended
 4193 00b0 00000000 		.word	uxTopReadyPriority
 4194 00b4 00000000 		.word	pxReadyTasksLists
 4195 00b8 00000000 		.word	pxCurrentTCB
 4196 00bc 00000000 		.word	xYieldPending
 4197              		.cfi_endproc
 4198              	.LFE35:
 4200              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4201              		.align	2
 4202              		.global	vTaskSetTimeOutState
 4203              		.thumb
 4204              		.thumb_func
 4206              	vTaskSetTimeOutState:
 4207              	.LFB36:
3264:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3266:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 4208              		.loc 1 3267 0
 4209              		.cfi_startproc
 4210              		@ args = 0, pretend = 0, frame = 16
 4211              		@ frame_needed = 1, uses_anonymous_args = 0
 4212 0000 80B5     		push	{r7, lr}
 4213              	.LCFI157:
 4214              		.cfi_def_cfa_offset 8
 4215              		.cfi_offset 7, -8
 4216              		.cfi_offset 14, -4
 4217 0002 84B0     		sub	sp, sp, #16
 4218              	.LCFI158:
 4219              		.cfi_def_cfa_offset 24
 4220 0004 00AF     		add	r7, sp, #0
 4221              	.LCFI159:
 4222              		.cfi_def_cfa_register 7
 4223 0006 7860     		str	r0, [r7, #4]
3268:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( pxTimeOut );
 4224              		.loc 1 3268 0
 4225 0008 7B68     		ldr	r3, [r7, #4]
 4226 000a 002B     		cmp	r3, #0
 4227 000c 09D1     		bne	.L272
 4228              	.LBB198:
 4229              	.LBB199:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4230              		.loc 2 197 0 discriminator 1
 4231              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 4232 000e 4FF05003 			mov r3, #80												
 4233 0012 83F31188 		msr basepri, r3											
 4234 0016 BFF36F8F 		isb														
 4235 001a BFF34F8F 		dsb														
 4236              	
 4237              	@ 0 "" 2
 4238              		.thumb
 4239 001e FB60     		str	r3, [r7, #12]
 4240              	.L273:
 4241              	.LBE199:
 4242              	.LBE198:
 4243              		.loc 1 3268 0 discriminator 1
 4244 0020 FEE7     		b	.L273
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 136


 4245              	.L272:
3269:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskENTER_CRITICAL();
 4246              		.loc 1 3269 0
 4247 0022 FFF7FEFF 		bl	vPortEnterCritical
3270:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3271:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTimeOut->xOverflowCount = xNumOfOverflows;
 4248              		.loc 1 3271 0
 4249 0026 064B     		ldr	r3, .L274
 4250 0028 1A68     		ldr	r2, [r3]
 4251 002a 7B68     		ldr	r3, [r7, #4]
 4252 002c 1A60     		str	r2, [r3]
3272:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 4253              		.loc 1 3272 0
 4254 002e 054B     		ldr	r3, .L274+4
 4255 0030 1A68     		ldr	r2, [r3]
 4256 0032 7B68     		ldr	r3, [r7, #4]
 4257 0034 5A60     		str	r2, [r3, #4]
3273:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3274:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskEXIT_CRITICAL();
 4258              		.loc 1 3274 0
 4259 0036 FFF7FEFF 		bl	vPortExitCritical
3275:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 4260              		.loc 1 3275 0
 4261 003a 1037     		adds	r7, r7, #16
 4262              	.LCFI160:
 4263              		.cfi_def_cfa_offset 8
 4264 003c BD46     		mov	sp, r7
 4265              	.LCFI161:
 4266              		.cfi_def_cfa_register 13
 4267              		@ sp needed
 4268 003e 80BD     		pop	{r7, pc}
 4269              	.L275:
 4270              		.align	2
 4271              	.L274:
 4272 0040 00000000 		.word	xNumOfOverflows
 4273 0044 00000000 		.word	xTickCount
 4274              		.cfi_endproc
 4275              	.LFE36:
 4277              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4278              		.align	2
 4279              		.global	vTaskInternalSetTimeOutState
 4280              		.thumb
 4281              		.thumb_func
 4283              	vTaskInternalSetTimeOutState:
 4284              	.LFB37:
3276:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3277:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3278:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3279:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 4285              		.loc 1 3279 0
 4286              		.cfi_startproc
 4287              		@ args = 0, pretend = 0, frame = 8
 4288              		@ frame_needed = 1, uses_anonymous_args = 0
 4289              		@ link register save eliminated.
 4290 0000 80B4     		push	{r7}
 4291              	.LCFI162:
 4292              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 137


 4293              		.cfi_offset 7, -4
 4294 0002 83B0     		sub	sp, sp, #12
 4295              	.LCFI163:
 4296              		.cfi_def_cfa_offset 16
 4297 0004 00AF     		add	r7, sp, #0
 4298              	.LCFI164:
 4299              		.cfi_def_cfa_register 7
 4300 0006 7860     		str	r0, [r7, #4]
3280:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* For internal use only as it does not use a critical section. */
3281:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     pxTimeOut->xOverflowCount = xNumOfOverflows;
 4301              		.loc 1 3281 0
 4302 0008 064B     		ldr	r3, .L277
 4303 000a 1A68     		ldr	r2, [r3]
 4304 000c 7B68     		ldr	r3, [r7, #4]
 4305 000e 1A60     		str	r2, [r3]
3282:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 4306              		.loc 1 3282 0
 4307 0010 054B     		ldr	r3, .L277+4
 4308 0012 1A68     		ldr	r2, [r3]
 4309 0014 7B68     		ldr	r3, [r7, #4]
 4310 0016 5A60     		str	r2, [r3, #4]
3283:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 4311              		.loc 1 3283 0
 4312 0018 0C37     		adds	r7, r7, #12
 4313              	.LCFI165:
 4314              		.cfi_def_cfa_offset 4
 4315 001a BD46     		mov	sp, r7
 4316              	.LCFI166:
 4317              		.cfi_def_cfa_register 13
 4318              		@ sp needed
 4319 001c 5DF8047B 		ldr	r7, [sp], #4
 4320              	.LCFI167:
 4321              		.cfi_restore 7
 4322              		.cfi_def_cfa_offset 0
 4323 0020 7047     		bx	lr
 4324              	.L278:
 4325 0022 00BF     		.align	2
 4326              	.L277:
 4327 0024 00000000 		.word	xNumOfOverflows
 4328 0028 00000000 		.word	xTickCount
 4329              		.cfi_endproc
 4330              	.LFE37:
 4332              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4333              		.align	2
 4334              		.global	xTaskCheckForTimeOut
 4335              		.thumb
 4336              		.thumb_func
 4338              	xTaskCheckForTimeOut:
 4339              	.LFB38:
3284:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3285:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3286:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
3287:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                  TickType_t * const pxTicksToWait )
3288:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 4340              		.loc 1 3288 0
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 138


 4343              		@ frame_needed = 1, uses_anonymous_args = 0
 4344 0000 80B5     		push	{r7, lr}
 4345              	.LCFI168:
 4346              		.cfi_def_cfa_offset 8
 4347              		.cfi_offset 7, -8
 4348              		.cfi_offset 14, -4
 4349 0002 88B0     		sub	sp, sp, #32
 4350              	.LCFI169:
 4351              		.cfi_def_cfa_offset 40
 4352 0004 00AF     		add	r7, sp, #0
 4353              	.LCFI170:
 4354              		.cfi_def_cfa_register 7
 4355 0006 7860     		str	r0, [r7, #4]
 4356 0008 3960     		str	r1, [r7]
3289:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xReturn;
3290:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3291:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( pxTimeOut );
 4357              		.loc 1 3291 0
 4358 000a 7B68     		ldr	r3, [r7, #4]
 4359 000c 002B     		cmp	r3, #0
 4360 000e 09D1     		bne	.L280
 4361              	.LBB200:
 4362              	.LBB201:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4363              		.loc 2 197 0 discriminator 1
 4364              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 4365 0010 4FF05003 			mov r3, #80												
 4366 0014 83F31188 		msr basepri, r3											
 4367 0018 BFF36F8F 		isb														
 4368 001c BFF34F8F 		dsb														
 4369              	
 4370              	@ 0 "" 2
 4371              		.thumb
 4372 0020 3B61     		str	r3, [r7, #16]
 4373              	.L281:
 4374              	.LBE201:
 4375              	.LBE200:
 4376              		.loc 1 3291 0 discriminator 1
 4377 0022 FEE7     		b	.L281
 4378              	.L280:
3292:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configASSERT( pxTicksToWait );
 4379              		.loc 1 3292 0
 4380 0024 3B68     		ldr	r3, [r7]
 4381 0026 002B     		cmp	r3, #0
 4382 0028 09D1     		bne	.L282
 4383              	.LBB202:
 4384              	.LBB203:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4385              		.loc 2 197 0 discriminator 1
 4386              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 4387 002a 4FF05003 			mov r3, #80												
 4388 002e 83F31188 		msr basepri, r3											
 4389 0032 BFF36F8F 		isb														
 4390 0036 BFF34F8F 		dsb														
 4391              	
 4392              	@ 0 "" 2
 4393              		.thumb
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 139


 4394 003a FB60     		str	r3, [r7, #12]
 4395              	.L283:
 4396              	.LBE203:
 4397              	.LBE202:
 4398              		.loc 1 3292 0 discriminator 2
 4399 003c FEE7     		b	.L283
 4400              	.L282:
3293:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3294:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskENTER_CRITICAL();
 4401              		.loc 1 3294 0
 4402 003e FFF7FEFF 		bl	vPortEnterCritical
 4403              	.LBB204:
3295:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3296:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this block. */
3297:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         const TickType_t xConstTickCount = xTickCount;
 4404              		.loc 1 3297 0
 4405 0042 1F4B     		ldr	r3, .L289
 4406 0044 1B68     		ldr	r3, [r3]
 4407 0046 BB61     		str	r3, [r7, #24]
3298:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4408              		.loc 1 3298 0
 4409 0048 7B68     		ldr	r3, [r7, #4]
 4410 004a 5B68     		ldr	r3, [r3, #4]
 4411 004c BA69     		ldr	r2, [r7, #24]
 4412 004e D31A     		subs	r3, r2, r3
 4413 0050 7B61     		str	r3, [r7, #20]
3299:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3300:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( INCLUDE_xTaskAbortDelay == 1 )
3301:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3302:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3303:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The delay was aborted, which is not the same as a time out,
3304:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * but has the same result. */
3305:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxCurrentTCB->ucDelayAborted = pdFALSE;
3306:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdTRUE;
3307:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3308:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
3309:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3310:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3311:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3312:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( *pxTicksToWait == portMAX_DELAY )
 4414              		.loc 1 3312 0
 4415 0052 3B68     		ldr	r3, [r7]
 4416 0054 1B68     		ldr	r3, [r3]
 4417 0056 B3F1FF3F 		cmp	r3, #-1
 4418 005a 02D1     		bne	.L284
3313:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3314:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* If INCLUDE_vTaskSuspend is set to 1 and the block time
3315:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * specified is the maximum block time then the task should block
3316:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * indefinitely, and therefore never time out. */
3317:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdFALSE;
 4419              		.loc 1 3317 0
 4420 005c 0023     		movs	r3, #0
 4421 005e FB61     		str	r3, [r7, #28]
 4422 0060 26E0     		b	.L285
 4423              	.L284:
3318:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3319:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 140


3320:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3321:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3322:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTi
 4424              		.loc 1 3322 0
 4425 0062 7B68     		ldr	r3, [r7, #4]
 4426 0064 1A68     		ldr	r2, [r3]
 4427 0066 174B     		ldr	r3, .L289+4
 4428 0068 1B68     		ldr	r3, [r3]
 4429 006a 9A42     		cmp	r2, r3
 4430 006c 0AD0     		beq	.L286
 4431              		.loc 1 3322 0 is_stmt 0 discriminator 1
 4432 006e 7B68     		ldr	r3, [r7, #4]
 4433 0070 5A68     		ldr	r2, [r3, #4]
 4434 0072 BB69     		ldr	r3, [r7, #24]
 4435 0074 9A42     		cmp	r2, r3
 4436 0076 05D8     		bhi	.L286
3323:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3324:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* The tick count is greater than the time at which
3325:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * vTaskSetTimeout() was called, but has also overflowed since
3326:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * vTaskSetTimeOut() was called.  It must have wrapped all the way
3327:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * around and gone past again. This passed since vTaskSetTimeout()
3328:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * was called. */
3329:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = pdTRUE;
 4437              		.loc 1 3329 0 is_stmt 1
 4438 0078 0123     		movs	r3, #1
 4439 007a FB61     		str	r3, [r7, #28]
3330:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 4440              		.loc 1 3330 0
 4441 007c 3B68     		ldr	r3, [r7]
 4442 007e 0022     		movs	r2, #0
 4443 0080 1A60     		str	r2, [r3]
 4444 0082 15E0     		b	.L285
 4445              	.L286:
3331:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3332:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant wi
 4446              		.loc 1 3332 0
 4447 0084 3B68     		ldr	r3, [r7]
 4448 0086 1A68     		ldr	r2, [r3]
 4449 0088 7B69     		ldr	r3, [r7, #20]
 4450 008a 9A42     		cmp	r2, r3
 4451 008c 0BD9     		bls	.L287
3333:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3334:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Not a genuine timeout. Adjust parameters for time remaining. */
3335:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             *pxTicksToWait -= xElapsedTime;
 4452              		.loc 1 3335 0
 4453 008e 3B68     		ldr	r3, [r7]
 4454 0090 1A68     		ldr	r2, [r3]
 4455 0092 7B69     		ldr	r3, [r7, #20]
 4456 0094 D21A     		subs	r2, r2, r3
 4457 0096 3B68     		ldr	r3, [r7]
 4458 0098 1A60     		str	r2, [r3]
3336:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 4459              		.loc 1 3336 0
 4460 009a 7868     		ldr	r0, [r7, #4]
 4461 009c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
3337:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = pdFALSE;
 4462              		.loc 1 3337 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 141


 4463 00a0 0023     		movs	r3, #0
 4464 00a2 FB61     		str	r3, [r7, #28]
 4465 00a4 04E0     		b	.L285
 4466              	.L287:
3338:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3339:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
3340:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3341:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 4467              		.loc 1 3341 0
 4468 00a6 3B68     		ldr	r3, [r7]
 4469 00a8 0022     		movs	r2, #0
 4470 00aa 1A60     		str	r2, [r3]
3342:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = pdTRUE;
 4471              		.loc 1 3342 0
 4472 00ac 0123     		movs	r3, #1
 4473 00ae FB61     		str	r3, [r7, #28]
 4474              	.L285:
 4475              	.LBE204:
3343:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3344:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3345:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     taskEXIT_CRITICAL();
 4476              		.loc 1 3345 0
 4477 00b0 FFF7FEFF 		bl	vPortExitCritical
3346:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3347:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return xReturn;
 4478              		.loc 1 3347 0
 4479 00b4 FB69     		ldr	r3, [r7, #28]
3348:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 4480              		.loc 1 3348 0
 4481 00b6 1846     		mov	r0, r3
 4482 00b8 2037     		adds	r7, r7, #32
 4483              	.LCFI171:
 4484              		.cfi_def_cfa_offset 8
 4485 00ba BD46     		mov	sp, r7
 4486              	.LCFI172:
 4487              		.cfi_def_cfa_register 13
 4488              		@ sp needed
 4489 00bc 80BD     		pop	{r7, pc}
 4490              	.L290:
 4491 00be 00BF     		.align	2
 4492              	.L289:
 4493 00c0 00000000 		.word	xTickCount
 4494 00c4 00000000 		.word	xNumOfOverflows
 4495              		.cfi_endproc
 4496              	.LFE38:
 4498              		.section	.text.vTaskMissedYield,"ax",%progbits
 4499              		.align	2
 4500              		.global	vTaskMissedYield
 4501              		.thumb
 4502              		.thumb_func
 4504              	vTaskMissedYield:
 4505              	.LFB39:
3349:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3350:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3351:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3352:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 4506              		.loc 1 3352 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 142


 4507              		.cfi_startproc
 4508              		@ args = 0, pretend = 0, frame = 0
 4509              		@ frame_needed = 1, uses_anonymous_args = 0
 4510              		@ link register save eliminated.
 4511 0000 80B4     		push	{r7}
 4512              	.LCFI173:
 4513              		.cfi_def_cfa_offset 4
 4514              		.cfi_offset 7, -4
 4515 0002 00AF     		add	r7, sp, #0
 4516              	.LCFI174:
 4517              		.cfi_def_cfa_register 7
3353:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     xYieldPending = pdTRUE;
 4518              		.loc 1 3353 0
 4519 0004 034B     		ldr	r3, .L292
 4520 0006 0122     		movs	r2, #1
 4521 0008 1A60     		str	r2, [r3]
3354:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 4522              		.loc 1 3354 0
 4523 000a BD46     		mov	sp, r7
 4524              	.LCFI175:
 4525              		.cfi_def_cfa_register 13
 4526              		@ sp needed
 4527 000c 5DF8047B 		ldr	r7, [sp], #4
 4528              	.LCFI176:
 4529              		.cfi_restore 7
 4530              		.cfi_def_cfa_offset 0
 4531 0010 7047     		bx	lr
 4532              	.L293:
 4533 0012 00BF     		.align	2
 4534              	.L292:
 4535 0014 00000000 		.word	xYieldPending
 4536              		.cfi_endproc
 4537              	.LFE39:
 4539              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 4540              		.align	2
 4541              		.global	uxTaskGetTaskNumber
 4542              		.thumb
 4543              		.thumb_func
 4545              	uxTaskGetTaskNumber:
 4546              	.LFB40:
3355:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3356:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3357:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3358:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3359:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3360:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 4547              		.loc 1 3360 0
 4548              		.cfi_startproc
 4549              		@ args = 0, pretend = 0, frame = 16
 4550              		@ frame_needed = 1, uses_anonymous_args = 0
 4551              		@ link register save eliminated.
 4552 0000 80B4     		push	{r7}
 4553              	.LCFI177:
 4554              		.cfi_def_cfa_offset 4
 4555              		.cfi_offset 7, -4
 4556 0002 85B0     		sub	sp, sp, #20
 4557              	.LCFI178:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 143


 4558              		.cfi_def_cfa_offset 24
 4559 0004 00AF     		add	r7, sp, #0
 4560              	.LCFI179:
 4561              		.cfi_def_cfa_register 7
 4562 0006 7860     		str	r0, [r7, #4]
3361:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxReturn;
3362:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t const * pxTCB;
3363:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3364:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xTask != NULL )
 4563              		.loc 1 3364 0
 4564 0008 7B68     		ldr	r3, [r7, #4]
 4565 000a 002B     		cmp	r3, #0
 4566 000c 05D0     		beq	.L295
3365:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3366:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = xTask;
 4567              		.loc 1 3366 0
 4568 000e 7B68     		ldr	r3, [r7, #4]
 4569 0010 BB60     		str	r3, [r7, #8]
3367:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
 4570              		.loc 1 3367 0
 4571 0012 BB68     		ldr	r3, [r7, #8]
 4572 0014 9B6C     		ldr	r3, [r3, #72]
 4573 0016 FB60     		str	r3, [r7, #12]
 4574 0018 01E0     		b	.L296
 4575              	.L295:
3368:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3369:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
3370:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3371:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxReturn = 0U;
 4576              		.loc 1 3371 0
 4577 001a 0023     		movs	r3, #0
 4578 001c FB60     		str	r3, [r7, #12]
 4579              	.L296:
3372:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3373:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3374:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return uxReturn;
 4580              		.loc 1 3374 0
 4581 001e FB68     		ldr	r3, [r7, #12]
3375:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 4582              		.loc 1 3375 0
 4583 0020 1846     		mov	r0, r3
 4584 0022 1437     		adds	r7, r7, #20
 4585              	.LCFI180:
 4586              		.cfi_def_cfa_offset 4
 4587 0024 BD46     		mov	sp, r7
 4588              	.LCFI181:
 4589              		.cfi_def_cfa_register 13
 4590              		@ sp needed
 4591 0026 5DF8047B 		ldr	r7, [sp], #4
 4592              	.LCFI182:
 4593              		.cfi_restore 7
 4594              		.cfi_def_cfa_offset 0
 4595 002a 7047     		bx	lr
 4596              		.cfi_endproc
 4597              	.LFE40:
 4599              		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 4600              		.align	2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 144


 4601              		.global	vTaskSetTaskNumber
 4602              		.thumb
 4603              		.thumb_func
 4605              	vTaskSetTaskNumber:
 4606              	.LFB41:
3376:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3377:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3378:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3379:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3380:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3381:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3382:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskSetTaskNumber( TaskHandle_t xTask,
3383:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                              const UBaseType_t uxHandle )
3384:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 4607              		.loc 1 3384 0
 4608              		.cfi_startproc
 4609              		@ args = 0, pretend = 0, frame = 16
 4610              		@ frame_needed = 1, uses_anonymous_args = 0
 4611              		@ link register save eliminated.
 4612 0000 80B4     		push	{r7}
 4613              	.LCFI183:
 4614              		.cfi_def_cfa_offset 4
 4615              		.cfi_offset 7, -4
 4616 0002 85B0     		sub	sp, sp, #20
 4617              	.LCFI184:
 4618              		.cfi_def_cfa_offset 24
 4619 0004 00AF     		add	r7, sp, #0
 4620              	.LCFI185:
 4621              		.cfi_def_cfa_register 7
 4622 0006 7860     		str	r0, [r7, #4]
 4623 0008 3960     		str	r1, [r7]
3385:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
3386:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3387:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xTask != NULL )
 4624              		.loc 1 3387 0
 4625 000a 7B68     		ldr	r3, [r7, #4]
 4626 000c 002B     		cmp	r3, #0
 4627 000e 04D0     		beq	.L298
3388:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3389:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = xTask;
 4628              		.loc 1 3389 0
 4629 0010 7B68     		ldr	r3, [r7, #4]
 4630 0012 FB60     		str	r3, [r7, #12]
3390:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
 4631              		.loc 1 3390 0
 4632 0014 FB68     		ldr	r3, [r7, #12]
 4633 0016 3A68     		ldr	r2, [r7]
 4634 0018 9A64     		str	r2, [r3, #72]
 4635              	.L298:
3391:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3392:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 4636              		.loc 1 3392 0
 4637 001a 1437     		adds	r7, r7, #20
 4638              	.LCFI186:
 4639              		.cfi_def_cfa_offset 4
 4640 001c BD46     		mov	sp, r7
 4641              	.LCFI187:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 145


 4642              		.cfi_def_cfa_register 13
 4643              		@ sp needed
 4644 001e 5DF8047B 		ldr	r7, [sp], #4
 4645              	.LCFI188:
 4646              		.cfi_restore 7
 4647              		.cfi_def_cfa_offset 0
 4648 0022 7047     		bx	lr
 4649              		.cfi_endproc
 4650              	.LFE41:
 4652              		.section	.text.prvIdleTask,"ax",%progbits
 4653              		.align	2
 4654              		.thumb
 4655              		.thumb_func
 4657              	prvIdleTask:
 4658              	.LFB42:
3393:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3394:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3395:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3396:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*
3397:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3398:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * The Idle task.
3399:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3400:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
3401:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3402:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3403:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
3404:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3405:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  *
3406:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  */
3407:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3408:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 4659              		.loc 1 3408 0
 4660              		.cfi_startproc
 4661              		@ args = 0, pretend = 0, frame = 8
 4662              		@ frame_needed = 1, uses_anonymous_args = 0
 4663 0000 80B5     		push	{r7, lr}
 4664              	.LCFI189:
 4665              		.cfi_def_cfa_offset 8
 4666              		.cfi_offset 7, -8
 4667              		.cfi_offset 14, -4
 4668 0002 82B0     		sub	sp, sp, #8
 4669              	.LCFI190:
 4670              		.cfi_def_cfa_offset 16
 4671 0004 00AF     		add	r7, sp, #0
 4672              	.LCFI191:
 4673              		.cfi_def_cfa_register 7
 4674 0006 7860     		str	r0, [r7, #4]
 4675              	.L302:
3409:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Stop warnings. */
3410:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     ( void ) pvParameters;
3411:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3412:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3413:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * SCHEDULER IS STARTED. **/
3414:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3415:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* In case a task that has a secure context deletes itself, in which case
3416:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * the idle task is responsible for deleting the task's secure context, if
3417:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * any. */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 146


3418:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3419:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3420:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     for( ; ; )
3421:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3422:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* See if any tasks have deleted themselves - if so then the idle task
3423:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * is responsible for freeing the deleted task's TCB and stack. */
3424:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         prvCheckTasksWaitingTermination();
 4676              		.loc 1 3424 0
 4677 0008 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
3425:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3426:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_PREEMPTION == 0 )
3427:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3428:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* If we are not using preemption we keep forcing a task switch to
3429:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * see if any other task has become available.  If we are using
3430:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * preemption we don't need to do this as any task becoming available
3431:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * will automatically get the processor anyway. */
3432:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 taskYIELD();
3433:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3434:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_PREEMPTION */
3435:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3436:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3437:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3438:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* When using preemption tasks of equal priority will be
3439:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * timesliced.  If a task that is sharing the idle priority is ready
3440:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * to run then the idle task should yield before the end of the
3441:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * timeslice.
3442:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  *
3443:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * A critical region is not required here as we are just reading from
3444:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the list, and an occasional incorrect value will not matter.  If
3445:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the ready list at the idle priority contains more than one task
3446:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * then a task other than the idle task is ready to execute. */
3447:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBase
 4678              		.loc 1 3447 0
 4679 000c 064B     		ldr	r3, .L303
 4680 000e 1B68     		ldr	r3, [r3]
 4681 0010 012B     		cmp	r3, #1
 4682 0012 07D9     		bls	.L301
3448:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3449:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     taskYIELD();
 4683              		.loc 1 3449 0
 4684 0014 054B     		ldr	r3, .L303+4
 4685 0016 4FF08052 		mov	r2, #268435456
 4686 001a 1A60     		str	r2, [r3]
 4687              	@ 3449 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 4688 001c BFF34F8F 		dsb
 4689              	@ 0 "" 2
 4690              	@ 3449 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 4691 0020 BFF36F8F 		isb
 4692              	@ 0 "" 2
 4693              		.thumb
 4694              	.L301:
3450:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3451:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
3452:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3453:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3454:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3455:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 147


3456:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3457:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3458:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_IDLE_HOOK == 1 )
3459:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3460:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 extern void vApplicationIdleHook( void );
3461:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3462:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Call the user defined function from within the idle task.  This
3463:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * allows the application designer to add background functionality
3464:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * without the overhead of a separate task.
3465:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3466:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * CALL A FUNCTION THAT MIGHT BLOCK. */
3467:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vApplicationIdleHook();
3468:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3469:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_IDLE_HOOK */
3470:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3471:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* This conditional compilation should use inequality to 0, not equality
3472:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3473:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * user defined low power mode  implementations require
3474:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3475:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3476:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3477:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 TickType_t xExpectedIdleTime;
3478:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3479:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* It is not desirable to suspend then resume the scheduler on
3480:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * each iteration of the idle task.  Therefore, a preliminary
3481:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * test of the expected idle time is performed without the
3482:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * scheduler suspended.  The result here is not necessarily
3483:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * valid. */
3484:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xExpectedIdleTime = prvGetExpectedIdleTime();
3485:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3486:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3488:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vTaskSuspendAll();
3489:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
3490:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Now the scheduler is suspended, the expected idle
3491:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * time can be sampled again, and this time its value can
3492:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * be used. */
3493:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         configASSERT( xNextTaskUnblockTime >= xTickCount );
3494:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xExpectedIdleTime = prvGetExpectedIdleTime();
3495:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3496:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* Define the following macro to set xExpectedIdleTime to 0
3497:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * if the application does not want
3498:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3499:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3500:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3501:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3502:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
3503:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             traceLOW_POWER_IDLE_BEGIN();
3504:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3505:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             traceLOW_POWER_IDLE_END();
3506:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
3507:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         else
3508:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
3509:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
3510:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
3511:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
3512:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) xTaskResumeAll();
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 148


3513:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3514:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
3515:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3516:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3517:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3518:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3519:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_TICKLESS_IDLE */
3520:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 4695              		.loc 1 3520 0
 4696 0024 F0E7     		b	.L302
 4697              	.L304:
 4698 0026 00BF     		.align	2
 4699              	.L303:
 4700 0028 00000000 		.word	pxReadyTasksLists
 4701 002c 04ED00E0 		.word	-536810236
 4702              		.cfi_endproc
 4703              	.LFE42:
 4705              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 4706              		.align	2
 4707              		.thumb
 4708              		.thumb_func
 4710              	prvInitialiseTaskLists:
 4711              	.LFB43:
3521:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
3522:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3523:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3524:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
3525:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3526:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3527:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3528:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The idle task exists in addition to the application tasks. */
3529:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         const UBaseType_t uxNonApplicationTasks = 1;
3530:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         eSleepModeStatus eReturn = eStandardSleep;
3531:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3532:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* This function must be called from a critical section. */
3533:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3534:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3535:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3536:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* A task was made ready while the scheduler was suspended. */
3537:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             eReturn = eAbortSleep;
3538:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3539:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else if( xYieldPending != pdFALSE )
3540:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3541:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* A yield was pended while the scheduler was suspended. */
3542:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             eReturn = eAbortSleep;
3543:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3544:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else if( xPendedTicks != 0 )
3545:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3546:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* A tick interrupt has already occurred but was held pending
3547:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * because the scheduler is suspended. */
3548:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             eReturn = eAbortSleep;
3549:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3550:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
3551:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3552:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If all the tasks are in the suspended list (which might mean they
3553:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * have an infinite block time rather than actually being suspended)
3554:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * then it is safe to turn all clocks off and just wait for external
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 149


3555:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * interrupts. */
3556:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonA
3557:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3558:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 eReturn = eNoTasksWaitingTimeout;
3559:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3560:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
3561:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3562:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3563:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3564:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3565:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3566:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return eReturn;
3567:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3568:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3569:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3570:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3571:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3572:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3573:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3574:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,
3575:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                             BaseType_t xIndex,
3576:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                             void * pvValue )
3577:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3578:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
3579:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3580:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3581:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3582:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSet );
3583:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             configASSERT( pxTCB != NULL );
3584:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3585:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3586:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3587:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3588:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3591:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3592:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3593:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void * pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,
3594:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                BaseType_t xIndex )
3595:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3596:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         void * pvReturn = NULL;
3597:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
3598:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3599:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3600:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3601:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3602:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3603:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3604:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
3605:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3606:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pvReturn = NULL;
3607:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3608:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3609:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return pvReturn;
3610:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3611:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 150


3612:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3613:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3614:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3615:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3616:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3617:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify,
3618:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                   const MemoryRegion_t * const xRegions )
3619:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3620:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
3621:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3622:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If null is passed in here then we are modifying the MPU settings of
3623:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the calling task. */
3624:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTaskToModify );
3625:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3626:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3627:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3628:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3629:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3630:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3631:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3632:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3633:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 4712              		.loc 1 3633 0
 4713              		.cfi_startproc
 4714              		@ args = 0, pretend = 0, frame = 8
 4715              		@ frame_needed = 1, uses_anonymous_args = 0
 4716 0000 80B5     		push	{r7, lr}
 4717              	.LCFI192:
 4718              		.cfi_def_cfa_offset 8
 4719              		.cfi_offset 7, -8
 4720              		.cfi_offset 14, -4
 4721 0002 82B0     		sub	sp, sp, #8
 4722              	.LCFI193:
 4723              		.cfi_def_cfa_offset 16
 4724 0004 00AF     		add	r7, sp, #0
 4725              	.LCFI194:
 4726              		.cfi_def_cfa_register 7
3634:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t uxPriority;
3635:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3636:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPrio
 4727              		.loc 1 3636 0
 4728 0006 0023     		movs	r3, #0
 4729 0008 7B60     		str	r3, [r7, #4]
 4730 000a 0CE0     		b	.L306
 4731              	.L307:
3637:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3638:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 4732              		.loc 1 3638 0 discriminator 3
 4733 000c 7A68     		ldr	r2, [r7, #4]
 4734 000e 1346     		mov	r3, r2
 4735 0010 9B00     		lsls	r3, r3, #2
 4736 0012 1344     		add	r3, r3, r2
 4737 0014 9B00     		lsls	r3, r3, #2
 4738 0016 114A     		ldr	r2, .L308
 4739 0018 1344     		add	r3, r3, r2
 4740 001a 1846     		mov	r0, r3
 4741 001c FFF7FEFF 		bl	vListInitialise
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 151


3636:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 4742              		.loc 1 3636 0 discriminator 3
 4743 0020 7B68     		ldr	r3, [r7, #4]
 4744 0022 0133     		adds	r3, r3, #1
 4745 0024 7B60     		str	r3, [r7, #4]
 4746              	.L306:
3636:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 4747              		.loc 1 3636 0 is_stmt 0 discriminator 1
 4748 0026 7B68     		ldr	r3, [r7, #4]
 4749 0028 062B     		cmp	r3, #6
 4750 002a EFD9     		bls	.L307
3639:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3640:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3641:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vListInitialise( &xDelayedTaskList1 );
 4751              		.loc 1 3641 0 is_stmt 1
 4752 002c 0C48     		ldr	r0, .L308+4
 4753 002e FFF7FEFF 		bl	vListInitialise
3642:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
 4754              		.loc 1 3642 0
 4755 0032 0C48     		ldr	r0, .L308+8
 4756 0034 FFF7FEFF 		bl	vListInitialise
3643:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     vListInitialise( &xPendingReadyList );
 4757              		.loc 1 3643 0
 4758 0038 0B48     		ldr	r0, .L308+12
 4759 003a FFF7FEFF 		bl	vListInitialise
3644:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3645:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3646:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3647:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vListInitialise( &xTasksWaitingTermination );
 4760              		.loc 1 3647 0
 4761 003e 0B48     		ldr	r0, .L308+16
 4762 0040 FFF7FEFF 		bl	vListInitialise
3648:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3649:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3650:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3651:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
3652:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3653:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vListInitialise( &xSuspendedTaskList );
 4763              		.loc 1 3653 0
 4764 0044 0A48     		ldr	r0, .L308+20
 4765 0046 FFF7FEFF 		bl	vListInitialise
3654:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3655:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
3656:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3657:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3658:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * using list2. */
3659:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     pxDelayedTaskList = &xDelayedTaskList1;
 4766              		.loc 1 3659 0
 4767 004a 0A4B     		ldr	r3, .L308+24
 4768 004c 044A     		ldr	r2, .L308+4
 4769 004e 1A60     		str	r2, [r3]
3660:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 4770              		.loc 1 3660 0
 4771 0050 094B     		ldr	r3, .L308+28
 4772 0052 044A     		ldr	r2, .L308+8
 4773 0054 1A60     		str	r2, [r3]
3661:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 152


 4774              		.loc 1 3661 0
 4775 0056 0837     		adds	r7, r7, #8
 4776              	.LCFI195:
 4777              		.cfi_def_cfa_offset 8
 4778 0058 BD46     		mov	sp, r7
 4779              	.LCFI196:
 4780              		.cfi_def_cfa_register 13
 4781              		@ sp needed
 4782 005a 80BD     		pop	{r7, pc}
 4783              	.L309:
 4784              		.align	2
 4785              	.L308:
 4786 005c 00000000 		.word	pxReadyTasksLists
 4787 0060 00000000 		.word	xDelayedTaskList1
 4788 0064 00000000 		.word	xDelayedTaskList2
 4789 0068 00000000 		.word	xPendingReadyList
 4790 006c 00000000 		.word	xTasksWaitingTermination
 4791 0070 00000000 		.word	xSuspendedTaskList
 4792 0074 00000000 		.word	pxDelayedTaskList
 4793 0078 00000000 		.word	pxOverflowDelayedTaskList
 4794              		.cfi_endproc
 4795              	.LFE43:
 4797              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 4798              		.align	2
 4799              		.thumb
 4800              		.thumb_func
 4802              	prvCheckTasksWaitingTermination:
 4803              	.LFB44:
3662:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3663:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3664:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3665:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 4804              		.loc 1 3665 0
 4805              		.cfi_startproc
 4806              		@ args = 0, pretend = 0, frame = 8
 4807              		@ frame_needed = 1, uses_anonymous_args = 0
 4808 0000 80B5     		push	{r7, lr}
 4809              	.LCFI197:
 4810              		.cfi_def_cfa_offset 8
 4811              		.cfi_offset 7, -8
 4812              		.cfi_offset 14, -4
 4813 0002 82B0     		sub	sp, sp, #8
 4814              	.LCFI198:
 4815              		.cfi_def_cfa_offset 16
 4816 0004 00AF     		add	r7, sp, #0
 4817              	.LCFI199:
 4818              		.cfi_def_cfa_register 7
 4819              	.LBB205:
3666:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3667:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3668:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3669:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3670:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             TCB_t * pxTCB;
3671:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3672:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3673:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * being called too often in the idle task. */
3674:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 153


 4820              		.loc 1 3674 0
 4821 0006 19E0     		b	.L311
 4822              	.L312:
3675:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3676:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 taskENTER_CRITICAL();
 4823              		.loc 1 3676 0
 4824 0008 FFF7FEFF 		bl	vPortEnterCritical
3677:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3678:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e
 4825              		.loc 1 3678 0
 4826 000c 0F4B     		ldr	r3, .L313
 4827 000e DB68     		ldr	r3, [r3, #12]
 4828 0010 DB68     		ldr	r3, [r3, #12]
 4829 0012 7B60     		str	r3, [r7, #4]
3679:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 4830              		.loc 1 3679 0
 4831 0014 7B68     		ldr	r3, [r7, #4]
 4832 0016 0433     		adds	r3, r3, #4
 4833 0018 1846     		mov	r0, r3
 4834 001a FFF7FEFF 		bl	uxListRemove
3680:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     --uxCurrentNumberOfTasks;
 4835              		.loc 1 3680 0
 4836 001e 0C4B     		ldr	r3, .L313+4
 4837 0020 1B68     		ldr	r3, [r3]
 4838 0022 013B     		subs	r3, r3, #1
 4839 0024 0A4A     		ldr	r2, .L313+4
 4840 0026 1360     		str	r3, [r2]
3681:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     --uxDeletedTasksWaitingCleanUp;
 4841              		.loc 1 3681 0
 4842 0028 0A4B     		ldr	r3, .L313+8
 4843 002a 1B68     		ldr	r3, [r3]
 4844 002c 013B     		subs	r3, r3, #1
 4845 002e 094A     		ldr	r2, .L313+8
 4846 0030 1360     		str	r3, [r2]
3682:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3683:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 taskEXIT_CRITICAL();
 4847              		.loc 1 3683 0
 4848 0032 FFF7FEFF 		bl	vPortExitCritical
3684:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3685:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvDeleteTCB( pxTCB );
 4849              		.loc 1 3685 0
 4850 0036 7868     		ldr	r0, [r7, #4]
 4851 0038 FFF7FEFF 		bl	prvDeleteTCB
 4852              	.L311:
3674:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
 4853              		.loc 1 3674 0
 4854 003c 054B     		ldr	r3, .L313+8
 4855 003e 1B68     		ldr	r3, [r3]
 4856 0040 002B     		cmp	r3, #0
 4857 0042 E1D1     		bne	.L312
 4858              	.LBE205:
3686:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3687:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3688:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3689:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 4859              		.loc 1 3689 0
 4860 0044 0837     		adds	r7, r7, #8
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 154


 4861              	.LCFI200:
 4862              		.cfi_def_cfa_offset 8
 4863 0046 BD46     		mov	sp, r7
 4864              	.LCFI201:
 4865              		.cfi_def_cfa_register 13
 4866              		@ sp needed
 4867 0048 80BD     		pop	{r7, pc}
 4868              	.L314:
 4869 004a 00BF     		.align	2
 4870              	.L313:
 4871 004c 00000000 		.word	xTasksWaitingTermination
 4872 0050 00000000 		.word	uxCurrentNumberOfTasks
 4873 0054 00000000 		.word	uxDeletedTasksWaitingCleanUp
 4874              		.cfi_endproc
 4875              	.LFE44:
 4877              		.section	.text.vTaskGetInfo,"ax",%progbits
 4878              		.align	2
 4879              		.global	vTaskGetInfo
 4880              		.thumb
 4881              		.thumb_func
 4883              	vTaskGetInfo:
 4884              	.LFB45:
3690:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3691:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3692:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3693:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3694:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskGetInfo( TaskHandle_t xTask,
3695:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                        TaskStatus_t * pxTaskStatus,
3696:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                        BaseType_t xGetFreeStackSpace,
3697:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                        eTaskState eState )
3698:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 4885              		.loc 1 3698 0
 4886              		.cfi_startproc
 4887              		@ args = 0, pretend = 0, frame = 24
 4888              		@ frame_needed = 1, uses_anonymous_args = 0
 4889 0000 80B5     		push	{r7, lr}
 4890              	.LCFI202:
 4891              		.cfi_def_cfa_offset 8
 4892              		.cfi_offset 7, -8
 4893              		.cfi_offset 14, -4
 4894 0002 86B0     		sub	sp, sp, #24
 4895              	.LCFI203:
 4896              		.cfi_def_cfa_offset 32
 4897 0004 00AF     		add	r7, sp, #0
 4898              	.LCFI204:
 4899              		.cfi_def_cfa_register 7
 4900 0006 F860     		str	r0, [r7, #12]
 4901 0008 B960     		str	r1, [r7, #8]
 4902 000a 7A60     		str	r2, [r7, #4]
 4903 000c FB70     		strb	r3, [r7, #3]
3699:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
3700:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3701:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* xTask is NULL then get the state of the calling task. */
3702:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
 4904              		.loc 1 3702 0
 4905 000e FB68     		ldr	r3, [r7, #12]
 4906 0010 002B     		cmp	r3, #0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 155


 4907 0012 02D1     		bne	.L316
 4908              		.loc 1 3702 0 is_stmt 0 discriminator 1
 4909 0014 2B4B     		ldr	r3, .L325
 4910 0016 1B68     		ldr	r3, [r3]
 4911 0018 00E0     		b	.L317
 4912              	.L316:
 4913              		.loc 1 3702 0 discriminator 2
 4914 001a FB68     		ldr	r3, [r7, #12]
 4915              	.L317:
 4916              		.loc 1 3702 0 discriminator 4
 4917 001c 7B61     		str	r3, [r7, #20]
3703:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3704:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
 4918              		.loc 1 3704 0 is_stmt 1 discriminator 4
 4919 001e BB68     		ldr	r3, [r7, #8]
 4920 0020 7A69     		ldr	r2, [r7, #20]
 4921 0022 1A60     		str	r2, [r3]
3705:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
 4922              		.loc 1 3705 0 discriminator 4
 4923 0024 7B69     		ldr	r3, [r7, #20]
 4924 0026 03F13402 		add	r2, r3, #52
 4925 002a BB68     		ldr	r3, [r7, #8]
 4926 002c 5A60     		str	r2, [r3, #4]
3706:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 4927              		.loc 1 3706 0 discriminator 4
 4928 002e 7B69     		ldr	r3, [r7, #20]
 4929 0030 DA6A     		ldr	r2, [r3, #44]
 4930 0032 BB68     		ldr	r3, [r7, #8]
 4931 0034 1A61     		str	r2, [r3, #16]
3707:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 4932              		.loc 1 3707 0 discriminator 4
 4933 0036 7B69     		ldr	r3, [r7, #20]
 4934 0038 1A6B     		ldr	r2, [r3, #48]
 4935 003a BB68     		ldr	r3, [r7, #8]
 4936 003c DA61     		str	r2, [r3, #28]
3708:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 4937              		.loc 1 3708 0 discriminator 4
 4938 003e 7B69     		ldr	r3, [r7, #20]
 4939 0040 5A6C     		ldr	r2, [r3, #68]
 4940 0042 BB68     		ldr	r3, [r7, #8]
 4941 0044 9A60     		str	r2, [r3, #8]
3709:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3710:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_MUTEXES == 1 )
3711:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3712:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
 4942              		.loc 1 3712 0 discriminator 4
 4943 0046 7B69     		ldr	r3, [r7, #20]
 4944 0048 DA6C     		ldr	r2, [r3, #76]
 4945 004a BB68     		ldr	r3, [r7, #8]
 4946 004c 5A61     		str	r2, [r3, #20]
3713:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3714:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #else
3715:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3716:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTaskStatus->uxBasePriority = 0;
3717:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3718:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3719:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 156


3720:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3721:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3722:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3723:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3724:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #else
3725:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3726:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTaskStatus->ulRunTimeCounter = 0;
 4947              		.loc 1 3726 0 discriminator 4
 4948 004e BB68     		ldr	r3, [r7, #8]
 4949 0050 0022     		movs	r2, #0
 4950 0052 9A61     		str	r2, [r3, #24]
3727:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3728:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3729:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3730:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Obtaining the task state is a little fiddly, so is only done if the
3731:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * value of eState passed into this function is eInvalid - otherwise the
3732:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * state is just set to whatever is passed in. */
3733:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( eState != eInvalid )
 4951              		.loc 1 3733 0 discriminator 4
 4952 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4953 0056 052B     		cmp	r3, #5
 4954 0058 1AD0     		beq	.L318
3734:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3735:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB == pxCurrentTCB )
 4955              		.loc 1 3735 0
 4956 005a 1A4B     		ldr	r3, .L325
 4957 005c 1B68     		ldr	r3, [r3]
 4958 005e 7A69     		ldr	r2, [r7, #20]
 4959 0060 9A42     		cmp	r2, r3
 4960 0062 03D1     		bne	.L319
3736:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3737:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTaskStatus->eCurrentState = eRunning;
 4961              		.loc 1 3737 0
 4962 0064 BB68     		ldr	r3, [r7, #8]
 4963 0066 0022     		movs	r2, #0
 4964 0068 1A73     		strb	r2, [r3, #12]
 4965 006a 18E0     		b	.L322
 4966              	.L319:
3738:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3739:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
3740:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3741:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTaskStatus->eCurrentState = eState;
 4967              		.loc 1 3741 0
 4968 006c BB68     		ldr	r3, [r7, #8]
 4969 006e FA78     		ldrb	r2, [r7, #3]
 4970 0070 1A73     		strb	r2, [r3, #12]
3742:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3743:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
3744:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
3745:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* If the task is in the suspended list then there is a
3746:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          *  chance it is actually just blocked indefinitely - so really
3747:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          *  it should be reported as being in the Blocked state. */
3748:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( eState == eSuspended )
 4971              		.loc 1 3748 0
 4972 0072 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4973 0074 032B     		cmp	r3, #3
 4974 0076 12D1     		bne	.L322
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 157


3749:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
3750:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             vTaskSuspendAll();
 4975              		.loc 1 3750 0
 4976 0078 FFF7FEFF 		bl	vTaskSuspendAll
3751:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
3752:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 4977              		.loc 1 3752 0
 4978 007c 7B69     		ldr	r3, [r7, #20]
 4979 007e 9B6A     		ldr	r3, [r3, #40]
 4980 0080 002B     		cmp	r3, #0
 4981 0082 02D0     		beq	.L321
3753:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 {
3754:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     pxTaskStatus->eCurrentState = eBlocked;
 4982              		.loc 1 3754 0
 4983 0084 BB68     		ldr	r3, [r7, #8]
 4984 0086 0222     		movs	r2, #2
 4985 0088 1A73     		strb	r2, [r3, #12]
 4986              	.L321:
3755:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 }
3756:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
3757:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             ( void ) xTaskResumeAll();
 4987              		.loc 1 3757 0
 4988 008a FFF7FEFF 		bl	xTaskResumeAll
 4989 008e 06E0     		b	.L322
 4990              	.L318:
3758:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
3759:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
3760:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif /* INCLUDE_vTaskSuspend */
3761:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3762:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3763:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
3764:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3765:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
 4991              		.loc 1 3765 0
 4992 0090 7869     		ldr	r0, [r7, #20]
 4993 0092 FFF7FEFF 		bl	eTaskGetState
 4994 0096 0346     		mov	r3, r0
 4995 0098 1A46     		mov	r2, r3
 4996 009a BB68     		ldr	r3, [r7, #8]
 4997 009c 1A73     		strb	r2, [r3, #12]
 4998              	.L322:
3766:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3767:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3768:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3769:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * parameter is provided to allow it to be skipped. */
3770:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xGetFreeStackSpace != pdFALSE )
 4999              		.loc 1 3770 0
 5000 009e 7B68     		ldr	r3, [r7, #4]
 5001 00a0 002B     		cmp	r3, #0
 5002 00a2 09D0     		beq	.L323
3771:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3772:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #if ( portSTACK_GROWTH > 0 )
3773:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3774:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) 
3775:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3776:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #else
3777:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 158


3778:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) 
 5003              		.loc 1 3778 0
 5004 00a4 7B69     		ldr	r3, [r7, #20]
 5005 00a6 1B6B     		ldr	r3, [r3, #48]
 5006 00a8 1846     		mov	r0, r3
 5007 00aa FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 5008 00ae 0346     		mov	r3, r0
 5009 00b0 1A46     		mov	r2, r3
 5010 00b2 BB68     		ldr	r3, [r7, #8]
 5011 00b4 1A84     		strh	r2, [r3, #32]	@ movhi
 5012 00b6 02E0     		b	.L315
 5013              	.L323:
3779:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3780:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             #endif
3781:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3782:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
3783:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3784:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTaskStatus->usStackHighWaterMark = 0;
 5014              		.loc 1 3784 0
 5015 00b8 BB68     		ldr	r3, [r7, #8]
 5016 00ba 0022     		movs	r2, #0
 5017 00bc 1A84     		strh	r2, [r3, #32]	@ movhi
 5018              	.L315:
3785:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3786:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5019              		.loc 1 3786 0
 5020 00be 1837     		adds	r7, r7, #24
 5021              	.LCFI205:
 5022              		.cfi_def_cfa_offset 8
 5023 00c0 BD46     		mov	sp, r7
 5024              	.LCFI206:
 5025              		.cfi_def_cfa_register 13
 5026              		@ sp needed
 5027 00c2 80BD     		pop	{r7, pc}
 5028              	.L326:
 5029              		.align	2
 5030              	.L325:
 5031 00c4 00000000 		.word	pxCurrentTCB
 5032              		.cfi_endproc
 5033              	.LFE45:
 5035              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 5036              		.align	2
 5037              		.thumb
 5038              		.thumb_func
 5040              	prvListTasksWithinSingleList:
 5041              	.LFB46:
3787:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3788:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3789:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3790:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3791:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3792:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3793:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
3794:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                      List_t * pxList,
3795:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                                      eTaskState eState )
3796:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 5042              		.loc 1 3796 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 159


 5043              		.cfi_startproc
 5044              		@ args = 0, pretend = 0, frame = 40
 5045              		@ frame_needed = 1, uses_anonymous_args = 0
 5046 0000 80B5     		push	{r7, lr}
 5047              	.LCFI207:
 5048              		.cfi_def_cfa_offset 8
 5049              		.cfi_offset 7, -8
 5050              		.cfi_offset 14, -4
 5051 0002 8AB0     		sub	sp, sp, #40
 5052              	.LCFI208:
 5053              		.cfi_def_cfa_offset 48
 5054 0004 00AF     		add	r7, sp, #0
 5055              	.LCFI209:
 5056              		.cfi_def_cfa_register 7
 5057 0006 F860     		str	r0, [r7, #12]
 5058 0008 B960     		str	r1, [r7, #8]
 5059 000a 1346     		mov	r3, r2
 5060 000c FB71     		strb	r3, [r7, #7]
3797:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB, * pxFirstTCB;
3798:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxTask = 0;
 5061              		.loc 1 3798 0
 5062 000e 0023     		movs	r3, #0
 5063 0010 7B62     		str	r3, [r7, #36]
3799:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3800:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
 5064              		.loc 1 3800 0
 5065 0012 BB68     		ldr	r3, [r7, #8]
 5066 0014 1B68     		ldr	r3, [r3]
 5067 0016 002B     		cmp	r3, #0
 5068 0018 40D0     		beq	.L328
 5069              	.LBB206:
3801:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3802:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
 5070              		.loc 1 3802 0
 5071 001a BB68     		ldr	r3, [r7, #8]
 5072 001c 3B62     		str	r3, [r7, #32]
 5073 001e 3B6A     		ldr	r3, [r7, #32]
 5074 0020 5B68     		ldr	r3, [r3, #4]
 5075 0022 5A68     		ldr	r2, [r3, #4]
 5076 0024 3B6A     		ldr	r3, [r7, #32]
 5077 0026 5A60     		str	r2, [r3, #4]
 5078 0028 3B6A     		ldr	r3, [r7, #32]
 5079 002a 5A68     		ldr	r2, [r3, #4]
 5080 002c 3B6A     		ldr	r3, [r7, #32]
 5081 002e 0833     		adds	r3, r3, #8
 5082 0030 9A42     		cmp	r2, r3
 5083 0032 04D1     		bne	.L329
 5084              		.loc 1 3802 0 is_stmt 0 discriminator 1
 5085 0034 3B6A     		ldr	r3, [r7, #32]
 5086 0036 5B68     		ldr	r3, [r3, #4]
 5087 0038 5A68     		ldr	r2, [r3, #4]
 5088 003a 3B6A     		ldr	r3, [r7, #32]
 5089 003c 5A60     		str	r2, [r3, #4]
 5090              	.L329:
 5091              		.loc 1 3802 0 discriminator 3
 5092 003e 3B6A     		ldr	r3, [r7, #32]
 5093 0040 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 160


 5094 0042 DB68     		ldr	r3, [r3, #12]
 5095 0044 FB61     		str	r3, [r7, #28]
 5096              	.L331:
 5097              	.LBE206:
 5098              	.LBB207:
3803:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3804:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Populate an TaskStatus_t structure within the
3805:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * pxTaskStatusArray array for each task that is referenced from
3806:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * pxList.  See the definition of TaskStatus_t in task.h for the
3807:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * meaning of each TaskStatus_t structure member. */
3808:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             do
3809:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3810:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
 5099              		.loc 1 3810 0 is_stmt 1
 5100 0046 BB68     		ldr	r3, [r7, #8]
 5101 0048 BB61     		str	r3, [r7, #24]
 5102 004a BB69     		ldr	r3, [r7, #24]
 5103 004c 5B68     		ldr	r3, [r3, #4]
 5104 004e 5A68     		ldr	r2, [r3, #4]
 5105 0050 BB69     		ldr	r3, [r7, #24]
 5106 0052 5A60     		str	r2, [r3, #4]
 5107 0054 BB69     		ldr	r3, [r7, #24]
 5108 0056 5A68     		ldr	r2, [r3, #4]
 5109 0058 BB69     		ldr	r3, [r7, #24]
 5110 005a 0833     		adds	r3, r3, #8
 5111 005c 9A42     		cmp	r2, r3
 5112 005e 04D1     		bne	.L330
 5113              		.loc 1 3810 0 is_stmt 0 discriminator 1
 5114 0060 BB69     		ldr	r3, [r7, #24]
 5115 0062 5B68     		ldr	r3, [r3, #4]
 5116 0064 5A68     		ldr	r2, [r3, #4]
 5117 0066 BB69     		ldr	r3, [r7, #24]
 5118 0068 5A60     		str	r2, [r3, #4]
 5119              	.L330:
 5120              		.loc 1 3810 0 discriminator 3
 5121 006a BB69     		ldr	r3, [r7, #24]
 5122 006c 5B68     		ldr	r3, [r3, #4]
 5123 006e DB68     		ldr	r3, [r3, #12]
 5124 0070 7B61     		str	r3, [r7, #20]
 5125              	.LBE207:
3811:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5126              		.loc 1 3811 0 is_stmt 1 discriminator 3
 5127 0072 7A6A     		ldr	r2, [r7, #36]
 5128 0074 1346     		mov	r3, r2
 5129 0076 DB00     		lsls	r3, r3, #3
 5130 0078 1344     		add	r3, r3, r2
 5131 007a 9B00     		lsls	r3, r3, #2
 5132 007c 1A46     		mov	r2, r3
 5133 007e FB68     		ldr	r3, [r7, #12]
 5134 0080 1A44     		add	r2, r2, r3
 5135 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5136 0084 7869     		ldr	r0, [r7, #20]
 5137 0086 1146     		mov	r1, r2
 5138 0088 0122     		movs	r2, #1
 5139 008a FFF7FEFF 		bl	vTaskGetInfo
3812:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 uxTask++;
 5140              		.loc 1 3812 0 discriminator 3
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 161


 5141 008e 7B6A     		ldr	r3, [r7, #36]
 5142 0090 0133     		adds	r3, r3, #1
 5143 0092 7B62     		str	r3, [r7, #36]
3813:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
 5144              		.loc 1 3813 0 discriminator 3
 5145 0094 7A69     		ldr	r2, [r7, #20]
 5146 0096 FB69     		ldr	r3, [r7, #28]
 5147 0098 9A42     		cmp	r2, r3
 5148 009a D4D1     		bne	.L331
 5149              	.L328:
3814:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3815:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
3816:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3817:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3818:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3819:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3820:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return uxTask;
 5150              		.loc 1 3820 0
 5151 009c 7B6A     		ldr	r3, [r7, #36]
3821:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5152              		.loc 1 3821 0
 5153 009e 1846     		mov	r0, r3
 5154 00a0 2837     		adds	r7, r7, #40
 5155              	.LCFI210:
 5156              		.cfi_def_cfa_offset 8
 5157 00a2 BD46     		mov	sp, r7
 5158              	.LCFI211:
 5159              		.cfi_def_cfa_register 13
 5160              		@ sp needed
 5161 00a4 80BD     		pop	{r7, pc}
 5162              		.cfi_endproc
 5163              	.LFE46:
 5165 00a6 00BF     		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
 5166              		.align	2
 5167              		.thumb
 5168              		.thumb_func
 5170              	prvTaskCheckFreeStackSpace:
 5171              	.LFB47:
3822:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3823:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3824:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3825:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3826:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3827:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3828:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3829:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 5172              		.loc 1 3829 0
 5173              		.cfi_startproc
 5174              		@ args = 0, pretend = 0, frame = 16
 5175              		@ frame_needed = 1, uses_anonymous_args = 0
 5176              		@ link register save eliminated.
 5177 0000 80B4     		push	{r7}
 5178              	.LCFI212:
 5179              		.cfi_def_cfa_offset 4
 5180              		.cfi_offset 7, -4
 5181 0002 85B0     		sub	sp, sp, #20
 5182              	.LCFI213:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 162


 5183              		.cfi_def_cfa_offset 24
 5184 0004 00AF     		add	r7, sp, #0
 5185              	.LCFI214:
 5186              		.cfi_def_cfa_register 7
 5187 0006 7860     		str	r0, [r7, #4]
3830:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint32_t ulCount = 0U;
 5188              		.loc 1 3830 0
 5189 0008 0023     		movs	r3, #0
 5190 000a FB60     		str	r3, [r7, #12]
3831:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3832:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 5191              		.loc 1 3832 0
 5192 000c 05E0     		b	.L334
 5193              	.L335:
3833:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
3834:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pucStackByte -= portSTACK_GROWTH;
 5194              		.loc 1 3834 0
 5195 000e 7B68     		ldr	r3, [r7, #4]
 5196 0010 0133     		adds	r3, r3, #1
 5197 0012 7B60     		str	r3, [r7, #4]
3835:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ulCount++;
 5198              		.loc 1 3835 0
 5199 0014 FB68     		ldr	r3, [r7, #12]
 5200 0016 0133     		adds	r3, r3, #1
 5201 0018 FB60     		str	r3, [r7, #12]
 5202              	.L334:
3832:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
 5203              		.loc 1 3832 0
 5204 001a 7B68     		ldr	r3, [r7, #4]
 5205 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5206 001e A52B     		cmp	r3, #165
 5207 0020 F5D0     		beq	.L335
3836:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
3837:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3838:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on sma
 5208              		.loc 1 3838 0
 5209 0022 FB68     		ldr	r3, [r7, #12]
 5210 0024 9B08     		lsrs	r3, r3, #2
 5211 0026 FB60     		str	r3, [r7, #12]
3839:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3840:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return ( configSTACK_DEPTH_TYPE ) ulCount;
 5212              		.loc 1 3840 0
 5213 0028 FB68     		ldr	r3, [r7, #12]
 5214 002a 9BB2     		uxth	r3, r3
3841:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5215              		.loc 1 3841 0
 5216 002c 1846     		mov	r0, r3
 5217 002e 1437     		adds	r7, r7, #20
 5218              	.LCFI215:
 5219              		.cfi_def_cfa_offset 4
 5220 0030 BD46     		mov	sp, r7
 5221              	.LCFI216:
 5222              		.cfi_def_cfa_register 13
 5223              		@ sp needed
 5224 0032 5DF8047B 		ldr	r7, [sp], #4
 5225              	.LCFI217:
 5226              		.cfi_restore 7
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 163


 5227              		.cfi_def_cfa_offset 0
 5228 0036 7047     		bx	lr
 5229              		.cfi_endproc
 5230              	.LFE47:
 5232              		.section	.text.prvDeleteTCB,"ax",%progbits
 5233              		.align	2
 5234              		.thumb
 5235              		.thumb_func
 5237              	prvDeleteTCB:
 5238              	.LFB48:
3842:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3843:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3844:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3845:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3846:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3847:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3848:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3849:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3850:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * user to determine the return type.  It gets around the problem of the value
3851:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * overflowing on 8-bit types without breaking backward compatibility for
3852:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****  * applications that expect an 8-bit return type. */
3853:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3854:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3855:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
3856:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint8_t * pucEndOfStack;
3857:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configSTACK_DEPTH_TYPE uxReturn;
3858:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3859:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3860:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the same except for their return type.  Using configSTACK_DEPTH_TYPE
3861:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * allows the user to determine the return type.  It gets around the
3862:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * problem of the value overflowing on 8-bit types without breaking
3863:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * backward compatibility for applications that expect an 8-bit return
3864:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * type. */
3865:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3866:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3867:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3868:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if portSTACK_GROWTH < 0
3869:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3870:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3871:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3872:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #else
3873:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3874:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3875:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3876:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3877:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3878:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3879:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3880:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return uxReturn;
3881:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3882:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3883:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3884:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3885:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3886:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3887:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3888:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 164


3889:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3890:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
3891:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint8_t * pucEndOfStack;
3892:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxReturn;
3893:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3894:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3895:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3896:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if portSTACK_GROWTH < 0
3897:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3898:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3899:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3900:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #else
3901:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3902:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3903:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3904:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
3905:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3906:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3907:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3908:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return uxReturn;
3909:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3910:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3911:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3912:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3913:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3914:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3915:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3916:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB )
3917:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 5239              		.loc 1 3917 0
 5240              		.cfi_startproc
 5241              		@ args = 0, pretend = 0, frame = 8
 5242              		@ frame_needed = 1, uses_anonymous_args = 0
 5243 0000 80B5     		push	{r7, lr}
 5244              	.LCFI218:
 5245              		.cfi_def_cfa_offset 8
 5246              		.cfi_offset 7, -8
 5247              		.cfi_offset 14, -4
 5248 0002 82B0     		sub	sp, sp, #8
 5249              	.LCFI219:
 5250              		.cfi_def_cfa_offset 16
 5251 0004 00AF     		add	r7, sp, #0
 5252              	.LCFI220:
 5253              		.cfi_def_cfa_register 7
 5254 0006 7860     		str	r0, [r7, #4]
3918:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
3919:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * above the vPortFree() calls.  The call is also used by ports/demos that
3920:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * want to allocate and clean RAM statically. */
3921:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portCLEAN_UP_TCB( pxTCB );
3922:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3923:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Free up the memory allocated by the scheduler for the task.  It is up
3924:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * to the task to free any memory allocated at the application level.
3925:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3926:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * for additional information. */
3927:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
3928:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3929:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 _reclaim_reent( &( pxTCB->xNewLib_reent ) );
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 165


3930:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3931:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
3932:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3933:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 )
3934:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3935:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The task can only have been allocated dynamically - free both
3936:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the stack and TCB. */
3937:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vPortFree( pxTCB->pxStack );
 5255              		.loc 1 3937 0
 5256 0008 7B68     		ldr	r3, [r7, #4]
 5257 000a 1B6B     		ldr	r3, [r3, #48]
 5258 000c 1846     		mov	r0, r3
 5259 000e FFF7FEFF 		bl	vPortFree
3938:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vPortFree( pxTCB );
 5260              		.loc 1 3938 0
 5261 0012 7868     		ldr	r0, [r7, #4]
 5262 0014 FFF7FEFF 		bl	vPortFree
3939:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3940:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #elif ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been
3941:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
3942:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The task could have been allocated statically or dynamically, so
3943:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * check what was statically allocated before trying to free the
3944:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * memory. */
3945:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3946:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3947:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Both the stack and TCB were allocated dynamically, so both
3948:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * must be freed. */
3949:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vPortFree( pxTCB->pxStack );
3950:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vPortFree( pxTCB );
3951:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3952:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3953:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3954:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Only the stack was statically allocated, so the TCB is the
3955:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * only memory that must be freed. */
3956:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vPortFree( pxTCB );
3957:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3958:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
3959:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
3960:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Neither the stack nor the TCB were allocated dynamically, so
3961:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * nothing needs to be freed. */
3962:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND
3963:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3964:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
3965:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
3966:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3967:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5263              		.loc 1 3967 0
 5264 0018 0837     		adds	r7, r7, #8
 5265              	.LCFI221:
 5266              		.cfi_def_cfa_offset 8
 5267 001a BD46     		mov	sp, r7
 5268              	.LCFI222:
 5269              		.cfi_def_cfa_register 13
 5270              		@ sp needed
 5271 001c 80BD     		pop	{r7, pc}
 5272              		.cfi_endproc
 5273              	.LFE48:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 166


 5275 001e 00BF     		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 5276              		.align	2
 5277              		.thumb
 5278              		.thumb_func
 5280              	prvResetNextTaskUnblockTime:
 5281              	.LFB49:
3968:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3969:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3970:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3971:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3972:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3973:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 5282              		.loc 1 3973 0
 5283              		.cfi_startproc
 5284              		@ args = 0, pretend = 0, frame = 0
 5285              		@ frame_needed = 1, uses_anonymous_args = 0
 5286              		@ link register save eliminated.
 5287 0000 80B4     		push	{r7}
 5288              	.LCFI223:
 5289              		.cfi_def_cfa_offset 4
 5290              		.cfi_offset 7, -4
 5291 0002 00AF     		add	r7, sp, #0
 5292              	.LCFI224:
 5293              		.cfi_def_cfa_register 7
3974:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 5294              		.loc 1 3974 0
 5295 0004 094B     		ldr	r3, .L341
 5296 0006 1B68     		ldr	r3, [r3]
 5297 0008 1B68     		ldr	r3, [r3]
 5298 000a 002B     		cmp	r3, #0
 5299 000c 04D1     		bne	.L339
3975:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3976:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3977:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the maximum possible value so it is  extremely unlikely that the
3978:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3979:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * there is an item in the delayed list. */
3980:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
 5300              		.loc 1 3980 0
 5301 000e 084B     		ldr	r3, .L341+4
 5302 0010 4FF0FF32 		mov	r2, #-1
 5303 0014 1A60     		str	r2, [r3]
 5304 0016 05E0     		b	.L338
 5305              	.L339:
3981:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3982:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
3983:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
3984:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The new current delayed list is not empty, get the value of
3985:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * the item at the head of the delayed list.  This is the time at
3986:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * which the task at the head of the delayed list should be removed
3987:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * from the Blocked state. */
3988:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 5306              		.loc 1 3988 0
 5307 0018 044B     		ldr	r3, .L341
 5308 001a 1B68     		ldr	r3, [r3]
 5309 001c DB68     		ldr	r3, [r3, #12]
 5310 001e 1B68     		ldr	r3, [r3]
 5311 0020 034A     		ldr	r2, .L341+4
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 167


 5312 0022 1360     		str	r3, [r2]
 5313              	.L338:
3989:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
3990:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 5314              		.loc 1 3990 0
 5315 0024 BD46     		mov	sp, r7
 5316              	.LCFI225:
 5317              		.cfi_def_cfa_register 13
 5318              		@ sp needed
 5319 0026 5DF8047B 		ldr	r7, [sp], #4
 5320              	.LCFI226:
 5321              		.cfi_restore 7
 5322              		.cfi_def_cfa_offset 0
 5323 002a 7047     		bx	lr
 5324              	.L342:
 5325              		.align	2
 5326              	.L341:
 5327 002c 00000000 		.word	pxDelayedTaskList
 5328 0030 00000000 		.word	xNextTaskUnblockTime
 5329              		.cfi_endproc
 5330              	.LFE49:
 5332              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 5333              		.align	2
 5334              		.global	xTaskGetCurrentTaskHandle
 5335              		.thumb
 5336              		.thumb_func
 5338              	xTaskGetCurrentTaskHandle:
 5339              	.LFB50:
3991:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3992:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3993:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3994:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3995:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TaskHandle_t xTaskGetCurrentTaskHandle( void )
3996:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 5340              		.loc 1 3996 0
 5341              		.cfi_startproc
 5342              		@ args = 0, pretend = 0, frame = 8
 5343              		@ frame_needed = 1, uses_anonymous_args = 0
 5344              		@ link register save eliminated.
 5345 0000 80B4     		push	{r7}
 5346              	.LCFI227:
 5347              		.cfi_def_cfa_offset 4
 5348              		.cfi_offset 7, -4
 5349 0002 83B0     		sub	sp, sp, #12
 5350              	.LCFI228:
 5351              		.cfi_def_cfa_offset 16
 5352 0004 00AF     		add	r7, sp, #0
 5353              	.LCFI229:
 5354              		.cfi_def_cfa_register 7
3997:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TaskHandle_t xReturn;
3998:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
3999:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* A critical section is not required as this is not called from
4000:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * an interrupt and the current TCB will always be the same for any
4001:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * individual execution thread. */
4002:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         xReturn = pxCurrentTCB;
 5355              		.loc 1 4002 0
 5356 0006 054B     		ldr	r3, .L345
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 168


 5357 0008 1B68     		ldr	r3, [r3]
 5358 000a 7B60     		str	r3, [r7, #4]
4003:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4004:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 5359              		.loc 1 4004 0
 5360 000c 7B68     		ldr	r3, [r7, #4]
4005:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5361              		.loc 1 4005 0
 5362 000e 1846     		mov	r0, r3
 5363 0010 0C37     		adds	r7, r7, #12
 5364              	.LCFI230:
 5365              		.cfi_def_cfa_offset 4
 5366 0012 BD46     		mov	sp, r7
 5367              	.LCFI231:
 5368              		.cfi_def_cfa_register 13
 5369              		@ sp needed
 5370 0014 5DF8047B 		ldr	r7, [sp], #4
 5371              	.LCFI232:
 5372              		.cfi_restore 7
 5373              		.cfi_def_cfa_offset 0
 5374 0018 7047     		bx	lr
 5375              	.L346:
 5376 001a 00BF     		.align	2
 5377              	.L345:
 5378 001c 00000000 		.word	pxCurrentTCB
 5379              		.cfi_endproc
 5380              	.LFE50:
 5382              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 5383              		.align	2
 5384              		.global	xTaskGetSchedulerState
 5385              		.thumb
 5386              		.thumb_func
 5388              	xTaskGetSchedulerState:
 5389              	.LFB51:
4006:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4007:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
4008:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4009:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4010:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
4011:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4012:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskGetSchedulerState( void )
4013:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 5390              		.loc 1 4013 0
 5391              		.cfi_startproc
 5392              		@ args = 0, pretend = 0, frame = 8
 5393              		@ frame_needed = 1, uses_anonymous_args = 0
 5394              		@ link register save eliminated.
 5395 0000 80B4     		push	{r7}
 5396              	.LCFI233:
 5397              		.cfi_def_cfa_offset 4
 5398              		.cfi_offset 7, -4
 5399 0002 83B0     		sub	sp, sp, #12
 5400              	.LCFI234:
 5401              		.cfi_def_cfa_offset 16
 5402 0004 00AF     		add	r7, sp, #0
 5403              	.LCFI235:
 5404              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 169


4014:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn;
4015:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4016:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xSchedulerRunning == pdFALSE )
 5405              		.loc 1 4016 0
 5406 0006 0B4B     		ldr	r3, .L352
 5407 0008 1B68     		ldr	r3, [r3]
 5408 000a 002B     		cmp	r3, #0
 5409 000c 02D1     		bne	.L348
4017:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4018:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xReturn = taskSCHEDULER_NOT_STARTED;
 5410              		.loc 1 4018 0
 5411 000e 0123     		movs	r3, #1
 5412 0010 7B60     		str	r3, [r7, #4]
 5413 0012 08E0     		b	.L349
 5414              	.L348:
4019:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4020:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
4021:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4022:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 5415              		.loc 1 4022 0
 5416 0014 084B     		ldr	r3, .L352+4
 5417 0016 1B68     		ldr	r3, [r3]
 5418 0018 002B     		cmp	r3, #0
 5419 001a 02D1     		bne	.L350
4023:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4024:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = taskSCHEDULER_RUNNING;
 5420              		.loc 1 4024 0
 5421 001c 0223     		movs	r3, #2
 5422 001e 7B60     		str	r3, [r7, #4]
 5423 0020 01E0     		b	.L349
 5424              	.L350:
4025:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4026:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4027:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4028:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = taskSCHEDULER_SUSPENDED;
 5425              		.loc 1 4028 0
 5426 0022 0023     		movs	r3, #0
 5427 0024 7B60     		str	r3, [r7, #4]
 5428              	.L349:
4029:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4030:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4031:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4032:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 5429              		.loc 1 4032 0
 5430 0026 7B68     		ldr	r3, [r7, #4]
4033:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5431              		.loc 1 4033 0
 5432 0028 1846     		mov	r0, r3
 5433 002a 0C37     		adds	r7, r7, #12
 5434              	.LCFI236:
 5435              		.cfi_def_cfa_offset 4
 5436 002c BD46     		mov	sp, r7
 5437              	.LCFI237:
 5438              		.cfi_def_cfa_register 13
 5439              		@ sp needed
 5440 002e 5DF8047B 		ldr	r7, [sp], #4
 5441              	.LCFI238:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 170


 5442              		.cfi_restore 7
 5443              		.cfi_def_cfa_offset 0
 5444 0032 7047     		bx	lr
 5445              	.L353:
 5446              		.align	2
 5447              	.L352:
 5448 0034 00000000 		.word	xSchedulerRunning
 5449 0038 00000000 		.word	uxSchedulerSuspended
 5450              		.cfi_endproc
 5451              	.LFE51:
 5453              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 5454              		.align	2
 5455              		.global	xTaskPriorityInherit
 5456              		.thumb
 5457              		.thumb_func
 5459              	xTaskPriorityInherit:
 5460              	.LFB52:
4034:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4035:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4036:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4037:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4038:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4039:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4040:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4041:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 5461              		.loc 1 4041 0
 5462              		.cfi_startproc
 5463              		@ args = 0, pretend = 0, frame = 16
 5464              		@ frame_needed = 1, uses_anonymous_args = 0
 5465 0000 80B5     		push	{r7, lr}
 5466              	.LCFI239:
 5467              		.cfi_def_cfa_offset 8
 5468              		.cfi_offset 7, -8
 5469              		.cfi_offset 14, -4
 5470 0002 84B0     		sub	sp, sp, #16
 5471              	.LCFI240:
 5472              		.cfi_def_cfa_offset 24
 5473 0004 00AF     		add	r7, sp, #0
 5474              	.LCFI241:
 5475              		.cfi_def_cfa_register 7
 5476 0006 7860     		str	r0, [r7, #4]
4042:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 5477              		.loc 1 4042 0
 5478 0008 7B68     		ldr	r3, [r7, #4]
 5479 000a BB60     		str	r3, [r7, #8]
4043:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn = pdFALSE;
 5480              		.loc 1 4043 0
 5481 000c 0023     		movs	r3, #0
 5482 000e FB60     		str	r3, [r7, #12]
4044:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4045:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If the mutex was given back by an interrupt while the queue was
4046:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * locked then the mutex holder might now be NULL.  _RB_ Is this still
4047:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * needed as interrupts can no longer use mutexes? */
4048:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxMutexHolder != NULL )
 5483              		.loc 1 4048 0
 5484 0010 7B68     		ldr	r3, [r7, #4]
 5485 0012 002B     		cmp	r3, #0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 171


 5486 0014 60D0     		beq	.L355
4049:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4050:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If the holder of the mutex has a priority below the priority of
4051:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * the task attempting to obtain the mutex then it will temporarily
4052:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * inherit the priority of the task attempting to obtain the mutex. */
4053:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 5487              		.loc 1 4053 0
 5488 0016 BB68     		ldr	r3, [r7, #8]
 5489 0018 DA6A     		ldr	r2, [r3, #44]
 5490 001a 324B     		ldr	r3, .L362
 5491 001c 1B68     		ldr	r3, [r3]
 5492 001e DB6A     		ldr	r3, [r3, #44]
 5493 0020 9A42     		cmp	r2, r3
 5494 0022 50D2     		bcs	.L356
4054:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4055:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Adjust the mutex holder state to account for its new
4056:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * priority.  Only reset the event list item value if the value is
4057:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * not being used for anything else. */
4058:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_
 5495              		.loc 1 4058 0
 5496 0024 BB68     		ldr	r3, [r7, #8]
 5497 0026 9B69     		ldr	r3, [r3, #24]
 5498 0028 002B     		cmp	r3, #0
 5499 002a 06DB     		blt	.L357
4059:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4060:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) 
 5500              		.loc 1 4060 0
 5501 002c 2D4B     		ldr	r3, .L362
 5502 002e 1B68     		ldr	r3, [r3]
 5503 0030 DB6A     		ldr	r3, [r3, #44]
 5504 0032 C3F10702 		rsb	r2, r3, #7
 5505 0036 BB68     		ldr	r3, [r7, #8]
 5506 0038 9A61     		str	r2, [r3, #24]
 5507              	.L357:
4061:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4062:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4063:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4064:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4065:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4066:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4067:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* If the task being modified is in the ready state it will need
4068:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * to be moved into a new list. */
4069:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] )
 5508              		.loc 1 4069 0
 5509 003a BB68     		ldr	r3, [r7, #8]
 5510 003c 5969     		ldr	r1, [r3, #20]
 5511 003e BB68     		ldr	r3, [r7, #8]
 5512 0040 DA6A     		ldr	r2, [r3, #44]
 5513 0042 1346     		mov	r3, r2
 5514 0044 9B00     		lsls	r3, r3, #2
 5515 0046 1344     		add	r3, r3, r2
 5516 0048 9B00     		lsls	r3, r3, #2
 5517 004a 274A     		ldr	r2, .L362+4
 5518 004c 1344     		add	r3, r3, r2
 5519 004e 9942     		cmp	r1, r3
 5520 0050 31D1     		bne	.L358
4070:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 172


4071:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 
 5521              		.loc 1 4071 0
 5522 0052 BB68     		ldr	r3, [r7, #8]
 5523 0054 0433     		adds	r3, r3, #4
 5524 0056 1846     		mov	r0, r3
 5525 0058 FFF7FEFF 		bl	uxListRemove
 5526 005c 0346     		mov	r3, r0
 5527 005e 002B     		cmp	r3, #0
 5528 0060 0AD1     		bne	.L359
4072:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4073:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* It is known that the task is in its ready list so
4074:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * there is no need to check again and the port level
4075:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * reset macro can be called directly. */
4076:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority 
 5529              		.loc 1 4076 0
 5530 0062 BB68     		ldr	r3, [r7, #8]
 5531 0064 DB6A     		ldr	r3, [r3, #44]
 5532 0066 1A46     		mov	r2, r3
 5533 0068 0123     		movs	r3, #1
 5534 006a 9340     		lsls	r3, r3, r2
 5535 006c DA43     		mvns	r2, r3
 5536 006e 1F4B     		ldr	r3, .L362+8
 5537 0070 1B68     		ldr	r3, [r3]
 5538 0072 1340     		ands	r3, r3, r2
 5539 0074 1D4A     		ldr	r2, .L362+8
 5540 0076 1360     		str	r3, [r2]
 5541              	.L359:
4077:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4078:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
4079:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4080:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4081:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4082:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4083:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Inherit the priority before being moved into the new list. */
4084:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 5542              		.loc 1 4084 0
 5543 0078 1A4B     		ldr	r3, .L362
 5544 007a 1B68     		ldr	r3, [r3]
 5545 007c DA6A     		ldr	r2, [r3, #44]
 5546 007e BB68     		ldr	r3, [r7, #8]
 5547 0080 DA62     		str	r2, [r3, #44]
4085:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 5548              		.loc 1 4085 0
 5549 0082 BB68     		ldr	r3, [r7, #8]
 5550 0084 DB6A     		ldr	r3, [r3, #44]
 5551 0086 1A46     		mov	r2, r3
 5552 0088 0123     		movs	r3, #1
 5553 008a 03FA02F2 		lsl	r2, r3, r2
 5554 008e 174B     		ldr	r3, .L362+8
 5555 0090 1B68     		ldr	r3, [r3]
 5556 0092 1343     		orrs	r3, r3, r2
 5557 0094 154A     		ldr	r2, .L362+8
 5558 0096 1360     		str	r3, [r2]
 5559 0098 BB68     		ldr	r3, [r7, #8]
 5560 009a DA6A     		ldr	r2, [r3, #44]
 5561 009c 1346     		mov	r3, r2
 5562 009e 9B00     		lsls	r3, r3, #2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 173


 5563 00a0 1344     		add	r3, r3, r2
 5564 00a2 9B00     		lsls	r3, r3, #2
 5565 00a4 104A     		ldr	r2, .L362+4
 5566 00a6 1A44     		add	r2, r2, r3
 5567 00a8 BB68     		ldr	r3, [r7, #8]
 5568 00aa 0433     		adds	r3, r3, #4
 5569 00ac 1046     		mov	r0, r2
 5570 00ae 1946     		mov	r1, r3
 5571 00b0 FFF7FEFF 		bl	vListInsertEnd
 5572 00b4 04E0     		b	.L360
 5573              	.L358:
4086:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4087:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4088:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4089:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Just inherit the priority. */
4090:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 5574              		.loc 1 4090 0
 5575 00b6 0B4B     		ldr	r3, .L362
 5576 00b8 1B68     		ldr	r3, [r3]
 5577 00ba DA6A     		ldr	r2, [r3, #44]
 5578 00bc BB68     		ldr	r3, [r7, #8]
 5579 00be DA62     		str	r2, [r3, #44]
 5580              	.L360:
4091:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4092:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4093:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4094:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4095:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Inheritance occurred. */
4096:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdTRUE;
 5581              		.loc 1 4096 0
 5582 00c0 0123     		movs	r3, #1
 5583 00c2 FB60     		str	r3, [r7, #12]
 5584 00c4 08E0     		b	.L355
 5585              	.L356:
4097:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4098:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4099:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 5586              		.loc 1 4100 0
 5587 00c6 BB68     		ldr	r3, [r7, #8]
 5588 00c8 DA6C     		ldr	r2, [r3, #76]
 5589 00ca 064B     		ldr	r3, .L362
 5590 00cc 1B68     		ldr	r3, [r3]
 5591 00ce DB6A     		ldr	r3, [r3, #44]
 5592 00d0 9A42     		cmp	r2, r3
 5593 00d2 01D2     		bcs	.L355
4101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The base priority of the mutex holder is lower than the
4103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * priority of the task attempting to take the mutex, but the
4104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * current priority of the mutex holder is not lower than the
4105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * priority of the task attempting to take the mutex.
4106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * Therefore the mutex holder must have already inherited a
4107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * priority, but inheritance would have occurred if that had
4108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * not been the case. */
4109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xReturn = pdTRUE;
 5594              		.loc 1 4109 0
 5595 00d4 0123     		movs	r3, #1
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 174


 5596 00d6 FB60     		str	r3, [r7, #12]
 5597              	.L355:
4110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
4118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 5598              		.loc 1 4122 0
 5599 00d8 FB68     		ldr	r3, [r7, #12]
4123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5600              		.loc 1 4123 0
 5601 00da 1846     		mov	r0, r3
 5602 00dc 1037     		adds	r7, r7, #16
 5603              	.LCFI242:
 5604              		.cfi_def_cfa_offset 8
 5605 00de BD46     		mov	sp, r7
 5606              	.LCFI243:
 5607              		.cfi_def_cfa_register 13
 5608              		@ sp needed
 5609 00e0 80BD     		pop	{r7, pc}
 5610              	.L363:
 5611 00e2 00BF     		.align	2
 5612              	.L362:
 5613 00e4 00000000 		.word	pxCurrentTCB
 5614 00e8 00000000 		.word	pxReadyTasksLists
 5615 00ec 00000000 		.word	uxTopReadyPriority
 5616              		.cfi_endproc
 5617              	.LFE52:
 5619              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 5620              		.align	2
 5621              		.global	xTaskPriorityDisinherit
 5622              		.thumb
 5623              		.thumb_func
 5625              	xTaskPriorityDisinherit:
 5626              	.LFB53:
4124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 5627              		.loc 1 4131 0
 5628              		.cfi_startproc
 5629              		@ args = 0, pretend = 0, frame = 24
 5630              		@ frame_needed = 1, uses_anonymous_args = 0
 5631 0000 80B5     		push	{r7, lr}
 5632              	.LCFI244:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 175


 5633              		.cfi_def_cfa_offset 8
 5634              		.cfi_offset 7, -8
 5635              		.cfi_offset 14, -4
 5636 0002 86B0     		sub	sp, sp, #24
 5637              	.LCFI245:
 5638              		.cfi_def_cfa_offset 32
 5639 0004 00AF     		add	r7, sp, #0
 5640              	.LCFI246:
 5641              		.cfi_def_cfa_register 7
 5642 0006 7860     		str	r0, [r7, #4]
4132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 5643              		.loc 1 4132 0
 5644 0008 7B68     		ldr	r3, [r7, #4]
 5645 000a 3B61     		str	r3, [r7, #16]
4133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn = pdFALSE;
 5646              		.loc 1 4133 0
 5647 000c 0023     		movs	r3, #0
 5648 000e 7B61     		str	r3, [r7, #20]
4134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxMutexHolder != NULL )
 5649              		.loc 1 4135 0
 5650 0010 7B68     		ldr	r3, [r7, #4]
 5651 0012 002B     		cmp	r3, #0
 5652 0014 63D0     		beq	.L365
4136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* A task can only have an inherited priority if it holds the mutex.
4138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * If the mutex is held by a task then it cannot be given from an
4139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * interrupt, and if a mutex is given by the holding task then it must
4140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * be the running state task. */
4141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             configASSERT( pxTCB == pxCurrentTCB );
 5653              		.loc 1 4141 0
 5654 0016 344B     		ldr	r3, .L372
 5655 0018 1B68     		ldr	r3, [r3]
 5656 001a 3A69     		ldr	r2, [r7, #16]
 5657 001c 9A42     		cmp	r2, r3
 5658 001e 09D0     		beq	.L366
 5659              	.LBB208:
 5660              	.LBB209:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5661              		.loc 2 197 0 discriminator 1
 5662              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 5663 0020 4FF05003 			mov r3, #80												
 5664 0024 83F31188 		msr basepri, r3											
 5665 0028 BFF36F8F 		isb														
 5666 002c BFF34F8F 		dsb														
 5667              	
 5668              	@ 0 "" 2
 5669              		.thumb
 5670 0030 FB60     		str	r3, [r7, #12]
 5671              	.L367:
 5672              	.LBE209:
 5673              	.LBE208:
 5674              		.loc 1 4141 0 discriminator 1
 5675 0032 FEE7     		b	.L367
 5676              	.L366:
4142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 5677              		.loc 1 4142 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 176


 5678 0034 3B69     		ldr	r3, [r7, #16]
 5679 0036 1B6D     		ldr	r3, [r3, #80]
 5680 0038 002B     		cmp	r3, #0
 5681 003a 09D1     		bne	.L368
 5682              	.LBB210:
 5683              	.LBB211:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5684              		.loc 2 197 0 discriminator 1
 5685              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 5686 003c 4FF05003 			mov r3, #80												
 5687 0040 83F31188 		msr basepri, r3											
 5688 0044 BFF36F8F 		isb														
 5689 0048 BFF34F8F 		dsb														
 5690              	
 5691              	@ 0 "" 2
 5692              		.thumb
 5693 004c BB60     		str	r3, [r7, #8]
 5694              	.L369:
 5695              	.LBE211:
 5696              	.LBE210:
 5697              		.loc 1 4142 0 discriminator 2
 5698 004e FEE7     		b	.L369
 5699              	.L368:
4143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 5700              		.loc 1 4143 0
 5701 0050 3B69     		ldr	r3, [r7, #16]
 5702 0052 1B6D     		ldr	r3, [r3, #80]
 5703 0054 5A1E     		subs	r2, r3, #1
 5704 0056 3B69     		ldr	r3, [r7, #16]
 5705 0058 1A65     		str	r2, [r3, #80]
4144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Has the holder of the mutex inherited the priority of another
4146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * task? */
4147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 5706              		.loc 1 4147 0
 5707 005a 3B69     		ldr	r3, [r7, #16]
 5708 005c DA6A     		ldr	r2, [r3, #44]
 5709 005e 3B69     		ldr	r3, [r7, #16]
 5710 0060 DB6C     		ldr	r3, [r3, #76]
 5711 0062 9A42     		cmp	r2, r3
 5712 0064 3BD0     		beq	.L365
4148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Only disinherit if no other mutexes are held. */
4150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 5713              		.loc 1 4150 0
 5714 0066 3B69     		ldr	r3, [r7, #16]
 5715 0068 1B6D     		ldr	r3, [r3, #80]
 5716 006a 002B     		cmp	r3, #0
 5717 006c 37D1     		bne	.L365
4151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* A task can only have an inherited priority if it holds
4153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * the mutex.  If the mutex is held by a task then it cannot be
4154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * given from an interrupt, and if a mutex is given by the
4155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * holding task then it must be the running state task.  Remove
4156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * the holding task from the ready list. */
4157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 5718              		.loc 1 4157 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 177


 5719 006e 3B69     		ldr	r3, [r7, #16]
 5720 0070 0433     		adds	r3, r3, #4
 5721 0072 1846     		mov	r0, r3
 5722 0074 FFF7FEFF 		bl	uxListRemove
 5723 0078 0346     		mov	r3, r0
 5724 007a 002B     		cmp	r3, #0
 5725 007c 0AD1     		bne	.L370
4158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
 5726              		.loc 1 4159 0
 5727 007e 3B69     		ldr	r3, [r7, #16]
 5728 0080 DB6A     		ldr	r3, [r3, #44]
 5729 0082 1A46     		mov	r2, r3
 5730 0084 0123     		movs	r3, #1
 5731 0086 9340     		lsls	r3, r3, r2
 5732 0088 DA43     		mvns	r2, r3
 5733 008a 184B     		ldr	r3, .L372+4
 5734 008c 1B68     		ldr	r3, [r3]
 5735 008e 1340     		ands	r3, r3, r2
 5736 0090 164A     		ldr	r2, .L372+4
 5737 0092 1360     		str	r3, [r2]
 5738              	.L370:
4160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
4162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Disinherit the priority before adding the task into the
4167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * new  ready list. */
4168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
 5739              		.loc 1 4169 0
 5740 0094 3B69     		ldr	r3, [r7, #16]
 5741 0096 DA6C     		ldr	r2, [r3, #76]
 5742 0098 3B69     		ldr	r3, [r7, #16]
 5743 009a DA62     		str	r2, [r3, #44]
4170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Reset the event list item value.  It cannot be in use for
4172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * any other purpose if this task is running, and it must be
4173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * running to give back the mutex. */
4174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_P
 5744              		.loc 1 4174 0
 5745 009c 3B69     		ldr	r3, [r7, #16]
 5746 009e DB6A     		ldr	r3, [r3, #44]
 5747 00a0 C3F10702 		rsb	r2, r3, #7
 5748 00a4 3B69     		ldr	r3, [r7, #16]
 5749 00a6 9A61     		str	r2, [r3, #24]
4175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5750              		.loc 1 4175 0
 5751 00a8 3B69     		ldr	r3, [r7, #16]
 5752 00aa DB6A     		ldr	r3, [r3, #44]
 5753 00ac 1A46     		mov	r2, r3
 5754 00ae 0123     		movs	r3, #1
 5755 00b0 03FA02F2 		lsl	r2, r3, r2
 5756 00b4 0D4B     		ldr	r3, .L372+4
 5757 00b6 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 178


 5758 00b8 1343     		orrs	r3, r3, r2
 5759 00ba 0C4A     		ldr	r2, .L372+4
 5760 00bc 1360     		str	r3, [r2]
 5761 00be 3B69     		ldr	r3, [r7, #16]
 5762 00c0 DA6A     		ldr	r2, [r3, #44]
 5763 00c2 1346     		mov	r3, r2
 5764 00c4 9B00     		lsls	r3, r3, #2
 5765 00c6 1344     		add	r3, r3, r2
 5766 00c8 9B00     		lsls	r3, r3, #2
 5767 00ca 094A     		ldr	r2, .L372+8
 5768 00cc 1A44     		add	r2, r2, r3
 5769 00ce 3B69     		ldr	r3, [r7, #16]
 5770 00d0 0433     		adds	r3, r3, #4
 5771 00d2 1046     		mov	r0, r2
 5772 00d4 1946     		mov	r1, r3
 5773 00d6 FFF7FEFF 		bl	vListInsertEnd
4176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Return true to indicate that a context switch is required.
4178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * This is only actually required in the corner case whereby
4179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * multiple mutexes were held and the mutexes were given back
4180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * in an order different to that in which they were taken.
4181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * If a context switch did not occur when the first mutex was
4182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * returned, even if a task was waiting on it, then a context
4183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * switch should occur when the last mutex is returned whether
4184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * a task is waiting on it or not. */
4185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xReturn = pdTRUE;
 5774              		.loc 1 4185 0
 5775 00da 0123     		movs	r3, #1
 5776 00dc 7B61     		str	r3, [r7, #20]
 5777              	.L365:
4186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
4198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 5778              		.loc 1 4202 0
 5779 00de 7B69     		ldr	r3, [r7, #20]
4203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5780              		.loc 1 4203 0
 5781 00e0 1846     		mov	r0, r3
 5782 00e2 1837     		adds	r7, r7, #24
 5783              	.LCFI247:
 5784              		.cfi_def_cfa_offset 8
 5785 00e4 BD46     		mov	sp, r7
 5786              	.LCFI248:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 179


 5787              		.cfi_def_cfa_register 13
 5788              		@ sp needed
 5789 00e6 80BD     		pop	{r7, pc}
 5790              	.L373:
 5791              		.align	2
 5792              	.L372:
 5793 00e8 00000000 		.word	pxCurrentTCB
 5794 00ec 00000000 		.word	uxTopReadyPriority
 5795 00f0 00000000 		.word	pxReadyTasksLists
 5796              		.cfi_endproc
 5797              	.LFE53:
 5799              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 5800              		.align	2
 5801              		.global	vTaskPriorityDisinheritAfterTimeout
 5802              		.thumb
 5803              		.thumb_func
 5805              	vTaskPriorityDisinheritAfterTimeout:
 5806              	.LFB54:
4204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
4211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                               UBaseType_t uxHighestPriorityWaitingTask )
4212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 5807              		.loc 1 4212 0
 5808              		.cfi_startproc
 5809              		@ args = 0, pretend = 0, frame = 32
 5810              		@ frame_needed = 1, uses_anonymous_args = 0
 5811 0000 80B5     		push	{r7, lr}
 5812              	.LCFI249:
 5813              		.cfi_def_cfa_offset 8
 5814              		.cfi_offset 7, -8
 5815              		.cfi_offset 14, -4
 5816 0002 88B0     		sub	sp, sp, #32
 5817              	.LCFI250:
 5818              		.cfi_def_cfa_offset 40
 5819 0004 00AF     		add	r7, sp, #0
 5820              	.LCFI251:
 5821              		.cfi_def_cfa_register 7
 5822 0006 7860     		str	r0, [r7, #4]
 5823 0008 3960     		str	r1, [r7]
4213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 5824              		.loc 1 4213 0
 5825 000a 7B68     		ldr	r3, [r7, #4]
 5826 000c BB61     		str	r3, [r7, #24]
4214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 5827              		.loc 1 4215 0
 5828 000e 0123     		movs	r3, #1
 5829 0010 7B61     		str	r3, [r7, #20]
4216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxMutexHolder != NULL )
 5830              		.loc 1 4217 0
 5831 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 180


 5832 0014 002B     		cmp	r3, #0
 5833 0016 77D0     		beq	.L374
4218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If pxMutexHolder is not NULL then the holder must hold at least
4220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * one mutex. */
4221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 5834              		.loc 1 4221 0
 5835 0018 BB69     		ldr	r3, [r7, #24]
 5836 001a 1B6D     		ldr	r3, [r3, #80]
 5837 001c 002B     		cmp	r3, #0
 5838 001e 09D1     		bne	.L376
 5839              	.LBB212:
 5840              	.LBB213:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5841              		.loc 2 197 0 discriminator 1
 5842              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 5843 0020 4FF05003 			mov r3, #80												
 5844 0024 83F31188 		msr basepri, r3											
 5845 0028 BFF36F8F 		isb														
 5846 002c BFF34F8F 		dsb														
 5847              	
 5848              	@ 0 "" 2
 5849              		.thumb
 5850 0030 FB60     		str	r3, [r7, #12]
 5851              	.L377:
 5852              	.LBE213:
 5853              	.LBE212:
 5854              		.loc 1 4221 0 discriminator 1
 5855 0032 FEE7     		b	.L377
 5856              	.L376:
4222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Determine the priority to which the priority of the task that
4224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * holds the mutex should be set.  This will be the greater of the
4225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * holding task's base priority and the priority of the highest
4226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * priority task that is waiting to obtain the mutex. */
4227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 5857              		.loc 1 4227 0
 5858 0034 BB69     		ldr	r3, [r7, #24]
 5859 0036 DA6C     		ldr	r2, [r3, #76]
 5860 0038 3B68     		ldr	r3, [r7]
 5861 003a 9A42     		cmp	r2, r3
 5862 003c 02D2     		bcs	.L378
4228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 uxPriorityToUse = uxHighestPriorityWaitingTask;
 5863              		.loc 1 4229 0
 5864 003e 3B68     		ldr	r3, [r7]
 5865 0040 FB61     		str	r3, [r7, #28]
 5866 0042 02E0     		b	.L379
 5867              	.L378:
4230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4232:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4233:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 uxPriorityToUse = pxTCB->uxBasePriority;
 5868              		.loc 1 4233 0
 5869 0044 BB69     		ldr	r3, [r7, #24]
 5870 0046 DB6C     		ldr	r3, [r3, #76]
 5871 0048 FB61     		str	r3, [r7, #28]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 181


 5872              	.L379:
4234:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4235:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4236:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Does the priority need to change? */
4237:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB->uxPriority != uxPriorityToUse )
 5873              		.loc 1 4237 0
 5874 004a BB69     		ldr	r3, [r7, #24]
 5875 004c DA6A     		ldr	r2, [r3, #44]
 5876 004e FB69     		ldr	r3, [r7, #28]
 5877 0050 9A42     		cmp	r2, r3
 5878 0052 59D0     		beq	.L374
4238:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4239:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Only disinherit if no other mutexes are held.  This is a
4240:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * simplification in the priority inheritance implementation.  If
4241:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the task that holds the mutex is also holding other mutexes then
4242:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * the other mutexes may have caused the priority inheritance. */
4243:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 5879              		.loc 1 4243 0
 5880 0054 BB69     		ldr	r3, [r7, #24]
 5881 0056 1A6D     		ldr	r2, [r3, #80]
 5882 0058 7B69     		ldr	r3, [r7, #20]
 5883 005a 9A42     		cmp	r2, r3
 5884 005c 54D1     		bne	.L374
4244:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4245:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* If a task has timed out because it already holds the
4246:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * mutex it was trying to obtain then it cannot of inherited
4247:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * its own priority. */
4248:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     configASSERT( pxTCB != pxCurrentTCB );
 5885              		.loc 1 4248 0
 5886 005e 2C4B     		ldr	r3, .L384
 5887 0060 1B68     		ldr	r3, [r3]
 5888 0062 BA69     		ldr	r2, [r7, #24]
 5889 0064 9A42     		cmp	r2, r3
 5890 0066 09D1     		bne	.L380
 5891              	.LBB214:
 5892              	.LBB215:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5893              		.loc 2 197 0 discriminator 1
 5894              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 5895 0068 4FF05003 			mov r3, #80												
 5896 006c 83F31188 		msr basepri, r3											
 5897 0070 BFF36F8F 		isb														
 5898 0074 BFF34F8F 		dsb														
 5899              	
 5900              	@ 0 "" 2
 5901              		.thumb
 5902 0078 BB60     		str	r3, [r7, #8]
 5903              	.L381:
 5904              	.LBE215:
 5905              	.LBE214:
 5906              		.loc 1 4248 0 discriminator 2
 5907 007a FEE7     		b	.L381
 5908              	.L380:
4249:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4250:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Disinherit the priority, remembering the previous
4251:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * priority to facilitate determining the subject task's
4252:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * state. */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 182


4253:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, uxPriorityToUse );
4254:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
 5909              		.loc 1 4254 0
 5910 007c BB69     		ldr	r3, [r7, #24]
 5911 007e DB6A     		ldr	r3, [r3, #44]
 5912 0080 3B61     		str	r3, [r7, #16]
4255:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
 5913              		.loc 1 4255 0
 5914 0082 BB69     		ldr	r3, [r7, #24]
 5915 0084 FA69     		ldr	r2, [r7, #28]
 5916 0086 DA62     		str	r2, [r3, #44]
4256:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4257:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Only reset the event list item value if the value is not
4258:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * being used for anything else. */
4259:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_IT
 5917              		.loc 1 4259 0
 5918 0088 BB69     		ldr	r3, [r7, #24]
 5919 008a 9B69     		ldr	r3, [r3, #24]
 5920 008c 002B     		cmp	r3, #0
 5921 008e 04DB     		blt	.L382
4260:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4261:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configM
 5922              		.loc 1 4261 0
 5923 0090 FB69     		ldr	r3, [r7, #28]
 5924 0092 C3F10702 		rsb	r2, r3, #7
 5925 0096 BB69     		ldr	r3, [r7, #24]
 5926 0098 9A61     		str	r2, [r3, #24]
 5927              	.L382:
4262:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4263:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
4264:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4265:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4266:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4267:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4268:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* If the running task is not the task that holds the mutex
4269:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * then the task that holds the mutex could be in either the
4270:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * Ready, Blocked or Suspended states.  Only remove the task
4271:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * from its current state list if it is in the Ready state as
4272:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * the task's priority is going to change and there is one
4273:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * Ready list per priority. */
4274:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &
 5928              		.loc 1 4274 0
 5929 009a BB69     		ldr	r3, [r7, #24]
 5930 009c 5969     		ldr	r1, [r3, #20]
 5931 009e 3A69     		ldr	r2, [r7, #16]
 5932 00a0 1346     		mov	r3, r2
 5933 00a2 9B00     		lsls	r3, r3, #2
 5934 00a4 1344     		add	r3, r3, r2
 5935 00a6 9B00     		lsls	r3, r3, #2
 5936 00a8 1A4A     		ldr	r2, .L384+4
 5937 00aa 1344     		add	r3, r3, r2
 5938 00ac 9942     		cmp	r1, r3
 5939 00ae 2BD1     		bne	.L374
4275:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4276:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 5940              		.loc 1 4276 0
 5941 00b0 BB69     		ldr	r3, [r7, #24]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 183


 5942 00b2 0433     		adds	r3, r3, #4
 5943 00b4 1846     		mov	r0, r3
 5944 00b6 FFF7FEFF 		bl	uxListRemove
 5945 00ba 0346     		mov	r3, r0
 5946 00bc 002B     		cmp	r3, #0
 5947 00be 0AD1     		bne	.L383
4277:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
4278:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             /* It is known that the task is in its ready list so
4279:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                              * there is no need to check again and the port level
4280:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                              * reset macro can be called directly. */
4281:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
 5948              		.loc 1 4281 0
 5949 00c0 BB69     		ldr	r3, [r7, #24]
 5950 00c2 DB6A     		ldr	r3, [r3, #44]
 5951 00c4 1A46     		mov	r2, r3
 5952 00c6 0123     		movs	r3, #1
 5953 00c8 9340     		lsls	r3, r3, r2
 5954 00ca DA43     		mvns	r2, r3
 5955 00cc 124B     		ldr	r3, .L384+8
 5956 00ce 1B68     		ldr	r3, [r3]
 5957 00d0 1340     		ands	r3, r3, r2
 5958 00d2 114A     		ldr	r2, .L384+8
 5959 00d4 1360     		str	r3, [r2]
 5960              	.L383:
4282:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
4283:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         else
4284:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         {
4285:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
4286:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         }
4287:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4288:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         prvAddTaskToReadyList( pxTCB );
 5961              		.loc 1 4288 0
 5962 00d6 BB69     		ldr	r3, [r7, #24]
 5963 00d8 DB6A     		ldr	r3, [r3, #44]
 5964 00da 1A46     		mov	r2, r3
 5965 00dc 0123     		movs	r3, #1
 5966 00de 03FA02F2 		lsl	r2, r3, r2
 5967 00e2 0D4B     		ldr	r3, .L384+8
 5968 00e4 1B68     		ldr	r3, [r3]
 5969 00e6 1343     		orrs	r3, r3, r2
 5970 00e8 0B4A     		ldr	r2, .L384+8
 5971 00ea 1360     		str	r3, [r2]
 5972 00ec BB69     		ldr	r3, [r7, #24]
 5973 00ee DA6A     		ldr	r2, [r3, #44]
 5974 00f0 1346     		mov	r3, r2
 5975 00f2 9B00     		lsls	r3, r3, #2
 5976 00f4 1344     		add	r3, r3, r2
 5977 00f6 9B00     		lsls	r3, r3, #2
 5978 00f8 064A     		ldr	r2, .L384+4
 5979 00fa 1A44     		add	r2, r2, r3
 5980 00fc BB69     		ldr	r3, [r7, #24]
 5981 00fe 0433     		adds	r3, r3, #4
 5982 0100 1046     		mov	r0, r2
 5983 0102 1946     		mov	r1, r3
 5984 0104 FFF7FEFF 		bl	vListInsertEnd
 5985              	.L374:
4289:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 184


4290:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
4291:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4292:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4293:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4294:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4295:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4296:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4297:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4298:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4299:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4300:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4301:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4302:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4303:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4304:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4305:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
4306:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4307:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4308:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4309:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 5986              		.loc 1 4309 0
 5987 0108 2037     		adds	r7, r7, #32
 5988              	.LCFI252:
 5989              		.cfi_def_cfa_offset 8
 5990 010a BD46     		mov	sp, r7
 5991              	.LCFI253:
 5992              		.cfi_def_cfa_register 13
 5993              		@ sp needed
 5994 010c 80BD     		pop	{r7, pc}
 5995              	.L385:
 5996 010e 00BF     		.align	2
 5997              	.L384:
 5998 0110 00000000 		.word	pxCurrentTCB
 5999 0114 00000000 		.word	pxReadyTasksLists
 6000 0118 00000000 		.word	uxTopReadyPriority
 6001              		.cfi_endproc
 6002              	.LFE54:
 6004              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 6005              		.align	2
 6006              		.global	uxTaskResetEventItemValue
 6007              		.thumb
 6008              		.thumb_func
 6010              	uxTaskResetEventItemValue:
 6011              	.LFB55:
4310:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4311:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4312:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4313:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4314:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4315:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4316:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskEnterCritical( void )
4317:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
4318:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portDISABLE_INTERRUPTS();
4319:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4320:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4321:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4322:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ( pxCurrentTCB->uxCriticalNesting )++;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 185


4323:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4324:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* This is not the interrupt safe version of the enter critical
4325:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * function so  assert() if it is being called from an interrupt
4326:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * context.  Only API functions that end in "FromISR" can be used in an
4327:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * interrupt.  Only assert if the critical nesting count is 1 to
4328:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * protect against recursive calls if the assert function also uses a
4329:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * critical section. */
4330:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting == 1 )
4331:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4332:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 portASSERT_IF_IN_ISR();
4333:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4334:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4335:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
4336:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4337:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4338:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4339:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
4340:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4341:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4342:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4343:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4344:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4345:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4346:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskExitCritical( void )
4347:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
4348:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4349:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4350:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting > 0U )
4351:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4352:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ( pxCurrentTCB->uxCriticalNesting )--;
4353:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4354:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxCurrentTCB->uxCriticalNesting == 0U )
4355:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4356:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     portENABLE_INTERRUPTS();
4357:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4358:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4359:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4360:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4361:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4362:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4363:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4364:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4365:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4366:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4367:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4368:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
4369:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4370:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4371:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4372:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
4373:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4374:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4375:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4376:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4377:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4378:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4379:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 186


4380:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                         const char * pcTaskName )
4381:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
4382:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         size_t x;
4383:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4384:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Start by copying the entire string. */
4385:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         strcpy( pcBuffer, pcTaskName );
4386:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4387:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Pad the end of the string with spaces to ensure columns line up when
4388:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * printed out. */
4389:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4390:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4391:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pcBuffer[ x ] = ' ';
4392:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4393:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4394:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Terminate. */
4395:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pcBuffer[ x ] = ( char ) 0x00;
4396:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4397:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Return the new end of string. */
4398:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return &( pcBuffer[ x ] );
4399:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
4400:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4401:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4402:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4403:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4404:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4405:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4406:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskList( char * pcWriteBuffer )
4407:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
4408:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4409:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxArraySize, x;
4410:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         char cStatus;
4411:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4412:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /*
4413:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * PLEASE NOTE:
4414:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
4415:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * This function is provided for convenience only, and is used by many
4416:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4417:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * scheduler.
4418:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
4419:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4420:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * uxTaskGetSystemState() output into a human readable table that
4421:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * displays task names, states and stack usage.
4422:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
4423:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * vTaskList() has a dependency on the sprintf() C library function that
4424:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * might bloat the code size, use a lot of stack, and provide different
4425:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * results on different platforms.  An alternative, tiny, third party,
4426:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * and limited functionality implementation of sprintf() is provided in
4427:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * many of the FreeRTOS/Demo sub-directories in a file called
4428:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * printf-stdarg.c (note printf-stdarg.c does not provide a full
4429:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * snprintf() implementation!).
4430:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
4431:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4432:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4433:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * through a call to vTaskList().
4434:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          */
4435:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4436:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 187


4437:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4438:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4439:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4440:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4441:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * function is executing. */
4442:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4443:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4444:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Allocate an array index for each task.  NOTE!  if
4445:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4446:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * equate to NULL. */
4447:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4448:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4449:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxTaskStatusArray != NULL )
4450:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4451:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Generate the (binary) data. */
4452:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4453:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4454:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Create a human readable table from the binary data. */
4455:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             for( x = 0; x < uxArraySize; x++ )
4456:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4457:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 switch( pxTaskStatusArray[ x ].eCurrentState )
4458:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4459:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     case eRunning:
4460:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         cStatus = tskRUNNING_CHAR;
4461:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         break;
4462:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4463:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     case eReady:
4464:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         cStatus = tskREADY_CHAR;
4465:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         break;
4466:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4467:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     case eBlocked:
4468:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         cStatus = tskBLOCKED_CHAR;
4469:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         break;
4470:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4471:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     case eSuspended:
4472:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         cStatus = tskSUSPENDED_CHAR;
4473:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         break;
4474:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4475:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     case eDeleted:
4476:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         cStatus = tskDELETED_CHAR;
4477:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         break;
4478:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4479:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     case eInvalid: /* Fall through. */
4480:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     default:       /* Should not get here, but it is included
4481:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                     * to prevent static checking errors. */
4482:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         cStatus = ( char ) 0x00;
4483:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         break;
4484:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4485:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4486:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Write the task name to the string, padding with spaces so it
4487:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * can be printed in tabular form more easily. */
4488:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskN
4489:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4490:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Write the rest of the string. */
4491:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskSta
4492:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pcWriteBuffer += strlen( pcWriteBuffer );                                          
4493:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 188


4494:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4495:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4496:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4497:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vPortFree( pxTaskStatusArray );
4498:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4499:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
4500:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4501:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4502:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4503:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
4504:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4505:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4506:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4507:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4508:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4509:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4510:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskGetRunTimeStats( char * pcWriteBuffer )
4511:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
4512:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4513:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxArraySize, x;
4514:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint32_t ulTotalTime, ulStatsAsPercentage;
4515:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4516:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #if ( configUSE_TRACE_FACILITY != 1 )
4517:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4518:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vT
4519:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4520:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         #endif
4521:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4522:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /*
4523:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * PLEASE NOTE:
4524:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
4525:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * This function is provided for convenience only, and is used by many
4526:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4527:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * scheduler.
4528:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
4529:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4530:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * of the uxTaskGetSystemState() output into a human readable table that
4531:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * displays the amount of time each task has spent in the Running state
4532:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * in both absolute and percentage terms.
4533:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
4534:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4535:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * function that might bloat the code size, use a lot of stack, and
4536:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * provide different results on different platforms.  An alternative,
4537:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * tiny, third party, and limited functionality implementation of
4538:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4539:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4540:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * a full snprintf() implementation!).
4541:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          *
4542:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4543:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4544:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * through a call to vTaskGetRunTimeStats().
4545:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          */
4546:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4547:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4548:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4549:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4550:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 189


4551:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * function is executing. */
4552:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4553:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4554:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* Allocate an array index for each task.  NOTE!  If
4555:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4556:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * equate to NULL. */
4557:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4558:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4559:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxTaskStatusArray != NULL )
4560:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4561:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Generate the (binary) data. */
4562:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4563:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4564:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* For percentage calculations. */
4565:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ulTotalTime /= 100UL;
4566:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4567:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Avoid divide by zero errors. */
4568:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( ulTotalTime > 0UL )
4569:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4570:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Create a human readable table from the binary data. */
4571:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 for( x = 0; x < uxArraySize; x++ )
4572:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4573:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* What percentage of the total run time has the task used?
4574:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * This will always be rounded down to the nearest integer.
4575:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * ulTotalRunTimeDiv100 has already been divided by 100. */
4576:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4577:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4578:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Write the task name to the string, padding with
4579:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * spaces so it can be printed in tabular form more
4580:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * easily. */
4581:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcT
4582:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4583:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( ulStatsAsPercentage > 0UL )
4584:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4585:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4586:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
4587:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x 
4588:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
4589:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #else
4590:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
4591:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 /* sizeof( int ) == sizeof( long ) so a smaller
4592:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                  * printf() library can be used. */
4593:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTask
4594:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
4595:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #endif
4596:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4597:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
4598:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4599:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* If the percentage is zero here then the task has
4600:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * consumed less than 1% of the total run time. */
4601:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4602:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
4603:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ]
4604:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
4605:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #else
4606:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             {
4607:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 /* sizeof( int ) == sizeof( long ) so a smaller
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 190


4608:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                  * printf() library can be used. */
4609:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                 sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTask
4610:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                             }
4611:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         #endif
4612:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4613:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4614:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok o
4615:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4616:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4617:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4618:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4619:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4620:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4621:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4622:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4623:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4624:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             vPortFree( pxTaskStatusArray );
4625:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4626:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         else
4627:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4628:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4629:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4630:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
4631:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4632:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4633:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4634:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4635:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4636:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 6012              		.loc 1 4636 0
 6013              		.cfi_startproc
 6014              		@ args = 0, pretend = 0, frame = 8
 6015              		@ frame_needed = 1, uses_anonymous_args = 0
 6016              		@ link register save eliminated.
 6017 0000 80B4     		push	{r7}
 6018              	.LCFI254:
 6019              		.cfi_def_cfa_offset 4
 6020              		.cfi_offset 7, -4
 6021 0002 83B0     		sub	sp, sp, #12
 6022              	.LCFI255:
 6023              		.cfi_def_cfa_offset 16
 6024 0004 00AF     		add	r7, sp, #0
 6025              	.LCFI256:
 6026              		.cfi_def_cfa_register 7
4637:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TickType_t uxReturn;
4638:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4639:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
 6027              		.loc 1 4639 0
 6028 0006 094B     		ldr	r3, .L388
 6029 0008 1B68     		ldr	r3, [r3]
 6030 000a 9B69     		ldr	r3, [r3, #24]
 6031 000c 7B60     		str	r3, [r7, #4]
4640:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4641:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Reset the event list item to its normal value - so it can be used with
4642:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * queues and semaphores. */
4643:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITI
 6032              		.loc 1 4643 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 191


 6033 000e 074B     		ldr	r3, .L388
 6034 0010 1B68     		ldr	r3, [r3]
 6035 0012 064A     		ldr	r2, .L388
 6036 0014 1268     		ldr	r2, [r2]
 6037 0016 D26A     		ldr	r2, [r2, #44]
 6038 0018 C2F10702 		rsb	r2, r2, #7
 6039 001c 9A61     		str	r2, [r3, #24]
4644:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4645:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     return uxReturn;
 6040              		.loc 1 4645 0
 6041 001e 7B68     		ldr	r3, [r7, #4]
4646:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 6042              		.loc 1 4646 0
 6043 0020 1846     		mov	r0, r3
 6044 0022 0C37     		adds	r7, r7, #12
 6045              	.LCFI257:
 6046              		.cfi_def_cfa_offset 4
 6047 0024 BD46     		mov	sp, r7
 6048              	.LCFI258:
 6049              		.cfi_def_cfa_register 13
 6050              		@ sp needed
 6051 0026 5DF8047B 		ldr	r7, [sp], #4
 6052              	.LCFI259:
 6053              		.cfi_restore 7
 6054              		.cfi_def_cfa_offset 0
 6055 002a 7047     		bx	lr
 6056              	.L389:
 6057              		.align	2
 6058              	.L388:
 6059 002c 00000000 		.word	pxCurrentTCB
 6060              		.cfi_endproc
 6061              	.LFE55:
 6063              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 6064              		.align	2
 6065              		.global	pvTaskIncrementMutexHeldCount
 6066              		.thumb
 6067              		.thumb_func
 6069              	pvTaskIncrementMutexHeldCount:
 6070              	.LFB56:
4647:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4648:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4649:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4650:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4651:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4652:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 6071              		.loc 1 4652 0
 6072              		.cfi_startproc
 6073              		@ args = 0, pretend = 0, frame = 0
 6074              		@ frame_needed = 1, uses_anonymous_args = 0
 6075              		@ link register save eliminated.
 6076 0000 80B4     		push	{r7}
 6077              	.LCFI260:
 6078              		.cfi_def_cfa_offset 4
 6079              		.cfi_offset 7, -4
 6080 0002 00AF     		add	r7, sp, #0
 6081              	.LCFI261:
 6082              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 192


4653:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
4654:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * then pxCurrentTCB will be NULL. */
4655:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         if( pxCurrentTCB != NULL )
 6083              		.loc 1 4655 0
 6084 0004 074B     		ldr	r3, .L393
 6085 0006 1B68     		ldr	r3, [r3]
 6086 0008 002B     		cmp	r3, #0
 6087 000a 04D0     		beq	.L391
4656:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4657:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ( pxCurrentTCB->uxMutexesHeld )++;
 6088              		.loc 1 4657 0
 6089 000c 054B     		ldr	r3, .L393
 6090 000e 1B68     		ldr	r3, [r3]
 6091 0010 1A6D     		ldr	r2, [r3, #80]
 6092 0012 0132     		adds	r2, r2, #1
 6093 0014 1A65     		str	r2, [r3, #80]
 6094              	.L391:
4658:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4659:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4660:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return pxCurrentTCB;
 6095              		.loc 1 4660 0
 6096 0016 034B     		ldr	r3, .L393
 6097 0018 1B68     		ldr	r3, [r3]
4661:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 6098              		.loc 1 4661 0
 6099 001a 1846     		mov	r0, r3
 6100 001c BD46     		mov	sp, r7
 6101              	.LCFI262:
 6102              		.cfi_def_cfa_register 13
 6103              		@ sp needed
 6104 001e 5DF8047B 		ldr	r7, [sp], #4
 6105              	.LCFI263:
 6106              		.cfi_restore 7
 6107              		.cfi_def_cfa_offset 0
 6108 0022 7047     		bx	lr
 6109              	.L394:
 6110              		.align	2
 6111              	.L393:
 6112 0024 00000000 		.word	pxCurrentTCB
 6113              		.cfi_endproc
 6114              	.LFE56:
 6116              		.section	.text.ulTaskGenericNotifyTake,"ax",%progbits
 6117              		.align	2
 6118              		.global	ulTaskGenericNotifyTake
 6119              		.thumb
 6120              		.thumb_func
 6122              	ulTaskGenericNotifyTake:
 6123              	.LFB57:
4662:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4663:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4664:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4665:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4666:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4667:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4668:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
4669:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       BaseType_t xClearCountOnExit,
4670:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                       TickType_t xTicksToWait )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 193


4671:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 6124              		.loc 1 4671 0
 6125              		.cfi_startproc
 6126              		@ args = 0, pretend = 0, frame = 24
 6127              		@ frame_needed = 1, uses_anonymous_args = 0
 6128 0000 80B5     		push	{r7, lr}
 6129              	.LCFI264:
 6130              		.cfi_def_cfa_offset 8
 6131              		.cfi_offset 7, -8
 6132              		.cfi_offset 14, -4
 6133 0002 86B0     		sub	sp, sp, #24
 6134              	.LCFI265:
 6135              		.cfi_def_cfa_offset 32
 6136 0004 00AF     		add	r7, sp, #0
 6137              	.LCFI266:
 6138              		.cfi_def_cfa_register 7
 6139 0006 F860     		str	r0, [r7, #12]
 6140 0008 B960     		str	r1, [r7, #8]
 6141 000a 7A60     		str	r2, [r7, #4]
4672:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint32_t ulReturn;
4673:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4674:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6142              		.loc 1 4674 0
 6143 000c FB68     		ldr	r3, [r7, #12]
 6144 000e 002B     		cmp	r3, #0
 6145 0010 09D0     		beq	.L396
 6146              	.LBB216:
 6147              	.LBB217:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6148              		.loc 2 197 0 discriminator 1
 6149              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6150 0012 4FF05003 			mov r3, #80												
 6151 0016 83F31188 		msr basepri, r3											
 6152 001a BFF36F8F 		isb														
 6153 001e BFF34F8F 		dsb														
 6154              	
 6155              	@ 0 "" 2
 6156              		.thumb
 6157 0022 3B61     		str	r3, [r7, #16]
 6158              	.L397:
 6159              	.LBE217:
 6160              	.LBE216:
 6161              		.loc 1 4674 0 discriminator 1
 6162 0024 FEE7     		b	.L397
 6163              	.L396:
4675:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4676:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 6164              		.loc 1 4676 0
 6165 0026 FFF7FEFF 		bl	vPortEnterCritical
4677:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4678:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Only block if the notification count is not already non-zero. */
4679:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
 6166              		.loc 1 4679 0
 6167 002a 284B     		ldr	r3, .L403
 6168 002c 1A68     		ldr	r2, [r3]
 6169 002e FB68     		ldr	r3, [r7, #12]
 6170 0030 1433     		adds	r3, r3, #20
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 194


 6171 0032 9B00     		lsls	r3, r3, #2
 6172 0034 1344     		add	r3, r3, r2
 6173 0036 5B68     		ldr	r3, [r3, #4]
 6174 0038 002B     		cmp	r3, #0
 6175 003a 15D1     		bne	.L398
4680:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4681:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Mark this task as waiting for a notification. */
4682:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
 6176              		.loc 1 4682 0
 6177 003c 234B     		ldr	r3, .L403
 6178 003e 1A68     		ldr	r2, [r3]
 6179 0040 FB68     		ldr	r3, [r7, #12]
 6180 0042 1344     		add	r3, r3, r2
 6181 0044 5833     		adds	r3, r3, #88
 6182 0046 0122     		movs	r2, #1
 6183 0048 1A70     		strb	r2, [r3]
4683:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4684:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
 6184              		.loc 1 4684 0
 6185 004a 7B68     		ldr	r3, [r7, #4]
 6186 004c 002B     		cmp	r3, #0
 6187 004e 0BD0     		beq	.L398
4685:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4686:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 6188              		.loc 1 4686 0
 6189 0050 7868     		ldr	r0, [r7, #4]
 6190 0052 0121     		movs	r1, #1
 6191 0054 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
4687:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
4688:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4689:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* All ports are written to allow a yield in a critical
4690:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * section (some will yield immediately, others wait until the
4691:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * critical section exits) - but it is not something that
4692:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * application code should ever do. */
4693:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     portYIELD_WITHIN_API();
 6192              		.loc 1 4693 0
 6193 0058 1D4B     		ldr	r3, .L403+4
 6194 005a 4FF08052 		mov	r2, #268435456
 6195 005e 1A60     		str	r2, [r3]
 6196              	@ 4693 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 6197 0060 BFF34F8F 		dsb
 6198              	@ 0 "" 2
 6199              	@ 4693 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 6200 0064 BFF36F8F 		isb
 6201              	@ 0 "" 2
 6202              		.thumb
 6203              	.L398:
4694:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4695:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4696:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4697:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4698:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4699:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4700:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4701:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4702:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4703:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 195


4704:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4705:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 6204              		.loc 1 4705 0
 6205 0068 FFF7FEFF 		bl	vPortExitCritical
4706:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4707:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 6206              		.loc 1 4707 0
 6207 006c FFF7FEFF 		bl	vPortEnterCritical
4708:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4709:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             traceTASK_NOTIFY_TAKE( uxIndexToWait );
4710:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
 6208              		.loc 1 4710 0
 6209 0070 164B     		ldr	r3, .L403
 6210 0072 1A68     		ldr	r2, [r3]
 6211 0074 FB68     		ldr	r3, [r7, #12]
 6212 0076 1433     		adds	r3, r3, #20
 6213 0078 9B00     		lsls	r3, r3, #2
 6214 007a 1344     		add	r3, r3, r2
 6215 007c 5B68     		ldr	r3, [r3, #4]
 6216 007e 7B61     		str	r3, [r7, #20]
4711:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4712:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( ulReturn != 0UL )
 6217              		.loc 1 4712 0
 6218 0080 7B69     		ldr	r3, [r7, #20]
 6219 0082 002B     		cmp	r3, #0
 6220 0084 14D0     		beq	.L399
4713:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4714:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xClearCountOnExit != pdFALSE )
 6221              		.loc 1 4714 0
 6222 0086 BB68     		ldr	r3, [r7, #8]
 6223 0088 002B     		cmp	r3, #0
 6224 008a 08D0     		beq	.L400
4715:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4716:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
 6225              		.loc 1 4716 0
 6226 008c 0F4B     		ldr	r3, .L403
 6227 008e 1A68     		ldr	r2, [r3]
 6228 0090 FB68     		ldr	r3, [r7, #12]
 6229 0092 1433     		adds	r3, r3, #20
 6230 0094 9B00     		lsls	r3, r3, #2
 6231 0096 1344     		add	r3, r3, r2
 6232 0098 0022     		movs	r2, #0
 6233 009a 5A60     		str	r2, [r3, #4]
 6234 009c 08E0     		b	.L399
 6235              	.L400:
4717:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4718:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4719:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4720:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
 6236              		.loc 1 4720 0
 6237 009e 0B4B     		ldr	r3, .L403
 6238 00a0 1968     		ldr	r1, [r3]
 6239 00a2 7B69     		ldr	r3, [r7, #20]
 6240 00a4 5A1E     		subs	r2, r3, #1
 6241 00a6 FB68     		ldr	r3, [r7, #12]
 6242 00a8 1433     		adds	r3, r3, #20
 6243 00aa 9B00     		lsls	r3, r3, #2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 196


 6244 00ac 0B44     		add	r3, r3, r1
 6245 00ae 5A60     		str	r2, [r3, #4]
 6246              	.L399:
4721:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4722:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4723:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4724:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4725:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4726:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4727:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4728:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
 6247              		.loc 1 4728 0
 6248 00b0 064B     		ldr	r3, .L403
 6249 00b2 1A68     		ldr	r2, [r3]
 6250 00b4 FB68     		ldr	r3, [r7, #12]
 6251 00b6 1344     		add	r3, r3, r2
 6252 00b8 5833     		adds	r3, r3, #88
 6253 00ba 0022     		movs	r2, #0
 6254 00bc 1A70     		strb	r2, [r3]
4729:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4730:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 6255              		.loc 1 4730 0
 6256 00be FFF7FEFF 		bl	vPortExitCritical
4731:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4732:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return ulReturn;
 6257              		.loc 1 4732 0
 6258 00c2 7B69     		ldr	r3, [r7, #20]
4733:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 6259              		.loc 1 4733 0
 6260 00c4 1846     		mov	r0, r3
 6261 00c6 1837     		adds	r7, r7, #24
 6262              	.LCFI267:
 6263              		.cfi_def_cfa_offset 8
 6264 00c8 BD46     		mov	sp, r7
 6265              	.LCFI268:
 6266              		.cfi_def_cfa_register 13
 6267              		@ sp needed
 6268 00ca 80BD     		pop	{r7, pc}
 6269              	.L404:
 6270              		.align	2
 6271              	.L403:
 6272 00cc 00000000 		.word	pxCurrentTCB
 6273 00d0 04ED00E0 		.word	-536810236
 6274              		.cfi_endproc
 6275              	.LFE57:
 6277              		.section	.text.xTaskGenericNotifyWait,"ax",%progbits
 6278              		.align	2
 6279              		.global	xTaskGenericNotifyWait
 6280              		.thumb
 6281              		.thumb_func
 6283              	xTaskGenericNotifyWait:
 6284              	.LFB58:
4734:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4735:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4736:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4737:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4738:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 197


4739:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4740:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
4741:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                        uint32_t ulBitsToClearOnEntry,
4742:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                        uint32_t ulBitsToClearOnExit,
4743:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                        uint32_t * pulNotificationValue,
4744:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                        TickType_t xTicksToWait )
4745:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 6285              		.loc 1 4745 0
 6286              		.cfi_startproc
 6287              		@ args = 4, pretend = 0, frame = 24
 6288              		@ frame_needed = 1, uses_anonymous_args = 0
 6289 0000 80B5     		push	{r7, lr}
 6290              	.LCFI269:
 6291              		.cfi_def_cfa_offset 8
 6292              		.cfi_offset 7, -8
 6293              		.cfi_offset 14, -4
 6294 0002 86B0     		sub	sp, sp, #24
 6295              	.LCFI270:
 6296              		.cfi_def_cfa_offset 32
 6297 0004 00AF     		add	r7, sp, #0
 6298              	.LCFI271:
 6299              		.cfi_def_cfa_register 7
 6300 0006 F860     		str	r0, [r7, #12]
 6301 0008 B960     		str	r1, [r7, #8]
 6302 000a 7A60     		str	r2, [r7, #4]
 6303 000c 3B60     		str	r3, [r7]
4746:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn;
4747:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4748:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6304              		.loc 1 4748 0
 6305 000e FB68     		ldr	r3, [r7, #12]
 6306 0010 002B     		cmp	r3, #0
 6307 0012 09D0     		beq	.L406
 6308              	.LBB218:
 6309              	.LBB219:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6310              		.loc 2 197 0 discriminator 1
 6311              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6312 0014 4FF05003 			mov r3, #80												
 6313 0018 83F31188 		msr basepri, r3											
 6314 001c BFF36F8F 		isb														
 6315 0020 BFF34F8F 		dsb														
 6316              	
 6317              	@ 0 "" 2
 6318              		.thumb
 6319 0024 3B61     		str	r3, [r7, #16]
 6320              	.L407:
 6321              	.LBE219:
 6322              	.LBE218:
 6323              		.loc 1 4748 0 discriminator 1
 6324 0026 FEE7     		b	.L407
 6325              	.L406:
4749:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4750:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 6326              		.loc 1 4750 0
 6327 0028 FFF7FEFF 		bl	vPortEnterCritical
4751:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 198


4752:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Only block if a notification is not already pending. */
4753:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
 6328              		.loc 1 4753 0
 6329 002c 344B     		ldr	r3, .L413
 6330 002e 1A68     		ldr	r2, [r3]
 6331 0030 FB68     		ldr	r3, [r7, #12]
 6332 0032 1344     		add	r3, r3, r2
 6333 0034 5833     		adds	r3, r3, #88
 6334 0036 1B78     		ldrb	r3, [r3]
 6335 0038 DBB2     		uxtb	r3, r3
 6336 003a 022B     		cmp	r3, #2
 6337 003c 24D0     		beq	.L408
4754:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4755:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Clear bits in the task's notification value as bits may get
4756:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * set  by the notifying task or interrupt.  This can be used to
4757:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * clear the value to zero. */
4758:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
 6338              		.loc 1 4758 0
 6339 003e 304B     		ldr	r3, .L413
 6340 0040 1A68     		ldr	r2, [r3]
 6341 0042 FB68     		ldr	r3, [r7, #12]
 6342 0044 1433     		adds	r3, r3, #20
 6343 0046 9B00     		lsls	r3, r3, #2
 6344 0048 1344     		add	r3, r3, r2
 6345 004a 5968     		ldr	r1, [r3, #4]
 6346 004c BB68     		ldr	r3, [r7, #8]
 6347 004e DB43     		mvns	r3, r3
 6348 0050 1940     		ands	r1, r1, r3
 6349 0052 FB68     		ldr	r3, [r7, #12]
 6350 0054 1433     		adds	r3, r3, #20
 6351 0056 9B00     		lsls	r3, r3, #2
 6352 0058 1344     		add	r3, r3, r2
 6353 005a 5960     		str	r1, [r3, #4]
4759:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4760:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Mark this task as waiting for a notification. */
4761:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
 6354              		.loc 1 4761 0
 6355 005c 284B     		ldr	r3, .L413
 6356 005e 1A68     		ldr	r2, [r3]
 6357 0060 FB68     		ldr	r3, [r7, #12]
 6358 0062 1344     		add	r3, r3, r2
 6359 0064 5833     		adds	r3, r3, #88
 6360 0066 0122     		movs	r2, #1
 6361 0068 1A70     		strb	r2, [r3]
4762:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4763:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
 6362              		.loc 1 4763 0
 6363 006a 3B6A     		ldr	r3, [r7, #32]
 6364 006c 002B     		cmp	r3, #0
 6365 006e 0BD0     		beq	.L408
4764:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4765:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 6366              		.loc 1 4765 0
 6367 0070 386A     		ldr	r0, [r7, #32]
 6368 0072 0121     		movs	r1, #1
 6369 0074 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
4766:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 199


4767:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4768:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* All ports are written to allow a yield in a critical
4769:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * section (some will yield immediately, others wait until the
4770:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * critical section exits) - but it is not something that
4771:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * application code should ever do. */
4772:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     portYIELD_WITHIN_API();
 6370              		.loc 1 4772 0
 6371 0078 224B     		ldr	r3, .L413+4
 6372 007a 4FF08052 		mov	r2, #268435456
 6373 007e 1A60     		str	r2, [r3]
 6374              	@ 4772 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 6375 0080 BFF34F8F 		dsb
 6376              	@ 0 "" 2
 6377              	@ 4772 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 6378 0084 BFF36F8F 		isb
 6379              	@ 0 "" 2
 6380              		.thumb
 6381              	.L408:
4773:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4774:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4775:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4776:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4777:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4778:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4779:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4780:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4781:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4782:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4783:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4784:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 6382              		.loc 1 4784 0
 6383 0088 FFF7FEFF 		bl	vPortExitCritical
4785:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4786:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 6384              		.loc 1 4786 0
 6385 008c FFF7FEFF 		bl	vPortEnterCritical
4787:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4788:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             traceTASK_NOTIFY_WAIT( uxIndexToWait );
4789:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4790:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pulNotificationValue != NULL )
 6386              		.loc 1 4790 0
 6387 0090 3B68     		ldr	r3, [r7]
 6388 0092 002B     		cmp	r3, #0
 6389 0094 08D0     		beq	.L409
4791:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4792:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Output the current notification value, which may or may not
4793:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * have changed. */
4794:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
 6390              		.loc 1 4794 0
 6391 0096 1A4B     		ldr	r3, .L413
 6392 0098 1A68     		ldr	r2, [r3]
 6393 009a FB68     		ldr	r3, [r7, #12]
 6394 009c 1433     		adds	r3, r3, #20
 6395 009e 9B00     		lsls	r3, r3, #2
 6396 00a0 1344     		add	r3, r3, r2
 6397 00a2 5A68     		ldr	r2, [r3, #4]
 6398 00a4 3B68     		ldr	r3, [r7]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 200


 6399 00a6 1A60     		str	r2, [r3]
 6400              	.L409:
4795:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4796:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4797:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If ucNotifyValue is set then either the task never entered the
4798:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * blocked state (because a notification was already pending) or the
4799:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * task unblocked because of a notification.  Otherwise the task
4800:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * unblocked because of a timeout. */
4801:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
 6401              		.loc 1 4801 0
 6402 00a8 154B     		ldr	r3, .L413
 6403 00aa 1A68     		ldr	r2, [r3]
 6404 00ac FB68     		ldr	r3, [r7, #12]
 6405 00ae 1344     		add	r3, r3, r2
 6406 00b0 5833     		adds	r3, r3, #88
 6407 00b2 1B78     		ldrb	r3, [r3]
 6408 00b4 DBB2     		uxtb	r3, r3
 6409 00b6 022B     		cmp	r3, #2
 6410 00b8 02D0     		beq	.L410
4802:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4803:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* A notification was not received. */
4804:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdFALSE;
 6411              		.loc 1 4804 0
 6412 00ba 0023     		movs	r3, #0
 6413 00bc 7B61     		str	r3, [r7, #20]
 6414 00be 10E0     		b	.L411
 6415              	.L410:
4805:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4806:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4807:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4808:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* A notification was already pending or a notification was
4809:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * received while the task was waiting. */
4810:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
 6416              		.loc 1 4810 0
 6417 00c0 0F4B     		ldr	r3, .L413
 6418 00c2 1A68     		ldr	r2, [r3]
 6419 00c4 FB68     		ldr	r3, [r7, #12]
 6420 00c6 1433     		adds	r3, r3, #20
 6421 00c8 9B00     		lsls	r3, r3, #2
 6422 00ca 1344     		add	r3, r3, r2
 6423 00cc 5968     		ldr	r1, [r3, #4]
 6424 00ce 7B68     		ldr	r3, [r7, #4]
 6425 00d0 DB43     		mvns	r3, r3
 6426 00d2 1940     		ands	r1, r1, r3
 6427 00d4 FB68     		ldr	r3, [r7, #12]
 6428 00d6 1433     		adds	r3, r3, #20
 6429 00d8 9B00     		lsls	r3, r3, #2
 6430 00da 1344     		add	r3, r3, r2
 6431 00dc 5960     		str	r1, [r3, #4]
4811:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdTRUE;
 6432              		.loc 1 4811 0
 6433 00de 0123     		movs	r3, #1
 6434 00e0 7B61     		str	r3, [r7, #20]
 6435              	.L411:
4812:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4813:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4814:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 201


 6436              		.loc 1 4814 0
 6437 00e2 074B     		ldr	r3, .L413
 6438 00e4 1A68     		ldr	r2, [r3]
 6439 00e6 FB68     		ldr	r3, [r7, #12]
 6440 00e8 1344     		add	r3, r3, r2
 6441 00ea 5833     		adds	r3, r3, #88
 6442 00ec 0022     		movs	r2, #0
 6443 00ee 1A70     		strb	r2, [r3]
4815:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4816:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 6444              		.loc 1 4816 0
 6445 00f0 FFF7FEFF 		bl	vPortExitCritical
4817:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4818:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 6446              		.loc 1 4818 0
 6447 00f4 7B69     		ldr	r3, [r7, #20]
4819:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 6448              		.loc 1 4819 0
 6449 00f6 1846     		mov	r0, r3
 6450 00f8 1837     		adds	r7, r7, #24
 6451              	.LCFI272:
 6452              		.cfi_def_cfa_offset 8
 6453 00fa BD46     		mov	sp, r7
 6454              	.LCFI273:
 6455              		.cfi_def_cfa_register 13
 6456              		@ sp needed
 6457 00fc 80BD     		pop	{r7, pc}
 6458              	.L414:
 6459 00fe 00BF     		.align	2
 6460              	.L413:
 6461 0100 00000000 		.word	pxCurrentTCB
 6462 0104 04ED00E0 		.word	-536810236
 6463              		.cfi_endproc
 6464              	.LFE58:
 6466              		.section	.text.xTaskGenericNotify,"ax",%progbits
 6467              		.align	2
 6468              		.global	xTaskGenericNotify
 6469              		.thumb
 6470              		.thumb_func
 6472              	xTaskGenericNotify:
 6473              	.LFB59:
4820:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4821:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4822:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4823:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4824:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4825:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4826:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
4827:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    UBaseType_t uxIndexToNotify,
4828:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    uint32_t ulValue,
4829:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    eNotifyAction eAction,
4830:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                    uint32_t * pulPreviousNotificationValue )
4831:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 6474              		.loc 1 4831 0
 6475              		.cfi_startproc
 6476              		@ args = 4, pretend = 0, frame = 48
 6477              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 202


 6478 0000 80B5     		push	{r7, lr}
 6479              	.LCFI274:
 6480              		.cfi_def_cfa_offset 8
 6481              		.cfi_offset 7, -8
 6482              		.cfi_offset 14, -4
 6483 0002 8CB0     		sub	sp, sp, #48
 6484              	.LCFI275:
 6485              		.cfi_def_cfa_offset 56
 6486 0004 00AF     		add	r7, sp, #0
 6487              	.LCFI276:
 6488              		.cfi_def_cfa_register 7
 6489 0006 F860     		str	r0, [r7, #12]
 6490 0008 B960     		str	r1, [r7, #8]
 6491 000a 7A60     		str	r2, [r7, #4]
 6492 000c FB70     		strb	r3, [r7, #3]
4832:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
4833:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn = pdPASS;
 6493              		.loc 1 4833 0
 6494 000e 0123     		movs	r3, #1
 6495 0010 FB62     		str	r3, [r7, #44]
4834:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint8_t ucOriginalNotifyState;
4835:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4836:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6496              		.loc 1 4836 0
 6497 0012 BB68     		ldr	r3, [r7, #8]
 6498 0014 002B     		cmp	r3, #0
 6499 0016 09D0     		beq	.L416
 6500              	.LBB220:
 6501              	.LBB221:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6502              		.loc 2 197 0 discriminator 1
 6503              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6504 0018 4FF05003 			mov r3, #80												
 6505 001c 83F31188 		msr basepri, r3											
 6506 0020 BFF36F8F 		isb														
 6507 0024 BFF34F8F 		dsb														
 6508              	
 6509              	@ 0 "" 2
 6510              		.thumb
 6511 0028 3B62     		str	r3, [r7, #32]
 6512              	.L417:
 6513              	.LBE221:
 6514              	.LBE220:
 6515              		.loc 1 4836 0 discriminator 1
 6516 002a FEE7     		b	.L417
 6517              	.L416:
4837:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( xTaskToNotify );
 6518              		.loc 1 4837 0
 6519 002c FB68     		ldr	r3, [r7, #12]
 6520 002e 002B     		cmp	r3, #0
 6521 0030 09D1     		bne	.L418
 6522              	.LBB222:
 6523              	.LBB223:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6524              		.loc 2 197 0 discriminator 1
 6525              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6526 0032 4FF05003 			mov r3, #80												
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 203


 6527 0036 83F31188 		msr basepri, r3											
 6528 003a BFF36F8F 		isb														
 6529 003e BFF34F8F 		dsb														
 6530              	
 6531              	@ 0 "" 2
 6532              		.thumb
 6533 0042 FB61     		str	r3, [r7, #28]
 6534              	.L419:
 6535              	.LBE223:
 6536              	.LBE222:
 6537              		.loc 1 4837 0 discriminator 2
 6538 0044 FEE7     		b	.L419
 6539              	.L418:
4838:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = xTaskToNotify;
 6540              		.loc 1 4838 0
 6541 0046 FB68     		ldr	r3, [r7, #12]
 6542 0048 BB62     		str	r3, [r7, #40]
4839:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4840:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 6543              		.loc 1 4840 0
 6544 004a FFF7FEFF 		bl	vPortEnterCritical
4841:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4842:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pulPreviousNotificationValue != NULL )
 6545              		.loc 1 4842 0
 6546 004e BB6B     		ldr	r3, [r7, #56]
 6547 0050 002B     		cmp	r3, #0
 6548 0052 07D0     		beq	.L420
4843:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4844:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
 6549              		.loc 1 4844 0
 6550 0054 BA6A     		ldr	r2, [r7, #40]
 6551 0056 BB68     		ldr	r3, [r7, #8]
 6552 0058 1433     		adds	r3, r3, #20
 6553 005a 9B00     		lsls	r3, r3, #2
 6554 005c 1344     		add	r3, r3, r2
 6555 005e 5A68     		ldr	r2, [r3, #4]
 6556 0060 BB6B     		ldr	r3, [r7, #56]
 6557 0062 1A60     		str	r2, [r3]
 6558              	.L420:
4845:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4846:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4847:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
 6559              		.loc 1 4847 0
 6560 0064 BA6A     		ldr	r2, [r7, #40]
 6561 0066 BB68     		ldr	r3, [r7, #8]
 6562 0068 1344     		add	r3, r3, r2
 6563 006a 5833     		adds	r3, r3, #88
 6564 006c 1B78     		ldrb	r3, [r3]
 6565 006e 87F82730 		strb	r3, [r7, #39]
4848:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4849:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 6566              		.loc 1 4849 0
 6567 0072 BA6A     		ldr	r2, [r7, #40]
 6568 0074 BB68     		ldr	r3, [r7, #8]
 6569 0076 1344     		add	r3, r3, r2
 6570 0078 5833     		adds	r3, r3, #88
 6571 007a 0222     		movs	r2, #2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 204


 6572 007c 1A70     		strb	r2, [r3]
4850:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4851:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             switch( eAction )
 6573              		.loc 1 4851 0
 6574 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6575 0080 042B     		cmp	r3, #4
 6576 0082 41D8     		bhi	.L421
 6577 0084 01A2     		adr	r2, .L423
 6578 0086 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6579 008a 00BF     		.p2align 2
 6580              	.L423:
 6581 008c 27010000 		.word	.L437+1
 6582 0090 A1000000 		.word	.L424+1
 6583 0094 BF000000 		.word	.L425+1
 6584 0098 DB000000 		.word	.L426+1
 6585 009c EB000000 		.word	.L427+1
 6586              		.p2align 1
 6587              	.L424:
4852:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4853:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eSetBits:
4854:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
 6588              		.loc 1 4854 0
 6589 00a0 BA6A     		ldr	r2, [r7, #40]
 6590 00a2 BB68     		ldr	r3, [r7, #8]
 6591 00a4 1433     		adds	r3, r3, #20
 6592 00a6 9B00     		lsls	r3, r3, #2
 6593 00a8 1344     		add	r3, r3, r2
 6594 00aa 5A68     		ldr	r2, [r3, #4]
 6595 00ac 7B68     		ldr	r3, [r7, #4]
 6596 00ae 1A43     		orrs	r2, r2, r3
 6597 00b0 B96A     		ldr	r1, [r7, #40]
 6598 00b2 BB68     		ldr	r3, [r7, #8]
 6599 00b4 1433     		adds	r3, r3, #20
 6600 00b6 9B00     		lsls	r3, r3, #2
 6601 00b8 0B44     		add	r3, r3, r1
 6602 00ba 5A60     		str	r2, [r3, #4]
4855:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6603              		.loc 1 4855 0
 6604 00bc 34E0     		b	.L428
 6605              	.L425:
4856:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4857:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eIncrement:
4858:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
 6606              		.loc 1 4858 0
 6607 00be BA6A     		ldr	r2, [r7, #40]
 6608 00c0 BB68     		ldr	r3, [r7, #8]
 6609 00c2 1433     		adds	r3, r3, #20
 6610 00c4 9B00     		lsls	r3, r3, #2
 6611 00c6 1344     		add	r3, r3, r2
 6612 00c8 5B68     		ldr	r3, [r3, #4]
 6613 00ca 5A1C     		adds	r2, r3, #1
 6614 00cc B96A     		ldr	r1, [r7, #40]
 6615 00ce BB68     		ldr	r3, [r7, #8]
 6616 00d0 1433     		adds	r3, r3, #20
 6617 00d2 9B00     		lsls	r3, r3, #2
 6618 00d4 0B44     		add	r3, r3, r1
 6619 00d6 5A60     		str	r2, [r3, #4]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 205


4859:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6620              		.loc 1 4859 0
 6621 00d8 26E0     		b	.L428
 6622              	.L426:
4860:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4861:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eSetValueWithOverwrite:
4862:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
 6623              		.loc 1 4862 0
 6624 00da BA6A     		ldr	r2, [r7, #40]
 6625 00dc BB68     		ldr	r3, [r7, #8]
 6626 00de 1433     		adds	r3, r3, #20
 6627 00e0 9B00     		lsls	r3, r3, #2
 6628 00e2 1344     		add	r3, r3, r2
 6629 00e4 7A68     		ldr	r2, [r7, #4]
 6630 00e6 5A60     		str	r2, [r3, #4]
4863:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6631              		.loc 1 4863 0
 6632 00e8 1EE0     		b	.L428
 6633              	.L427:
4864:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4865:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eSetValueWithoutOverwrite:
4866:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4867:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 6634              		.loc 1 4867 0
 6635 00ea 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6636 00ee 022B     		cmp	r3, #2
 6637 00f0 07D0     		beq	.L429
4868:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4869:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
 6638              		.loc 1 4869 0
 6639 00f2 BA6A     		ldr	r2, [r7, #40]
 6640 00f4 BB68     		ldr	r3, [r7, #8]
 6641 00f6 1433     		adds	r3, r3, #20
 6642 00f8 9B00     		lsls	r3, r3, #2
 6643 00fa 1344     		add	r3, r3, r2
 6644 00fc 7A68     		ldr	r2, [r7, #4]
 6645 00fe 5A60     		str	r2, [r3, #4]
4870:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4871:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
4872:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4873:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* The value could not be written to the task. */
4874:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xReturn = pdFAIL;
4875:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4876:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4877:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6646              		.loc 1 4877 0
 6647 0100 12E0     		b	.L428
 6648              	.L429:
4874:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
 6649              		.loc 1 4874 0
 6650 0102 0023     		movs	r3, #0
 6651 0104 FB62     		str	r3, [r7, #44]
 6652              		.loc 1 4877 0
 6653 0106 0FE0     		b	.L428
 6654              	.L421:
4878:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4879:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eNoAction:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 206


4880:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4881:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The task is being notified without its notify value being
4882:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * updated. */
4883:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
4884:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4885:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 default:
4886:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4887:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Should not get here if all enums are handled.
4888:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * Artificially force an assert by testing a value the
4889:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * compiler can't assume is const. */
4890:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
 6655              		.loc 1 4890 0
 6656 0108 2A4B     		ldr	r3, .L438
 6657 010a 1B68     		ldr	r3, [r3]
 6658 010c 002B     		cmp	r3, #0
 6659 010e 09D0     		beq	.L431
 6660              	.LBB224:
 6661              	.LBB225:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6662              		.loc 2 197 0 discriminator 1
 6663              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6664 0110 4FF05003 			mov r3, #80												
 6665 0114 83F31188 		msr basepri, r3											
 6666 0118 BFF36F8F 		isb														
 6667 011c BFF34F8F 		dsb														
 6668              	
 6669              	@ 0 "" 2
 6670              		.thumb
 6671 0120 BB61     		str	r3, [r7, #24]
 6672              	.L432:
 6673              	.LBE225:
 6674              	.LBE224:
 6675              		.loc 1 4890 0 discriminator 3
 6676 0122 FEE7     		b	.L432
 6677              	.L431:
4891:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4892:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6678              		.loc 1 4892 0
 6679 0124 00E0     		b	.L428
 6680              	.L437:
4883:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 6681              		.loc 1 4883 0
 6682 0126 00BF     		nop
 6683              	.L428:
4893:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4894:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4895:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             traceTASK_NOTIFY( uxIndexToNotify );
4896:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4897:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
4898:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * notification then unblock it now. */
4899:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 6684              		.loc 1 4899 0
 6685 0128 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6686 012c 012B     		cmp	r3, #1
 6687 012e 3AD1     		bne	.L433
4900:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4901:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 207


 6688              		.loc 1 4901 0
 6689 0130 BB6A     		ldr	r3, [r7, #40]
 6690 0132 0433     		adds	r3, r3, #4
 6691 0134 1846     		mov	r0, r3
 6692 0136 FFF7FEFF 		bl	uxListRemove
4902:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 6693              		.loc 1 4902 0
 6694 013a BB6A     		ldr	r3, [r7, #40]
 6695 013c DB6A     		ldr	r3, [r3, #44]
 6696 013e 1A46     		mov	r2, r3
 6697 0140 0123     		movs	r3, #1
 6698 0142 03FA02F2 		lsl	r2, r3, r2
 6699 0146 1C4B     		ldr	r3, .L438+4
 6700 0148 1B68     		ldr	r3, [r3]
 6701 014a 1343     		orrs	r3, r3, r2
 6702 014c 1A4A     		ldr	r2, .L438+4
 6703 014e 1360     		str	r3, [r2]
 6704 0150 BB6A     		ldr	r3, [r7, #40]
 6705 0152 DA6A     		ldr	r2, [r3, #44]
 6706 0154 1346     		mov	r3, r2
 6707 0156 9B00     		lsls	r3, r3, #2
 6708 0158 1344     		add	r3, r3, r2
 6709 015a 9B00     		lsls	r3, r3, #2
 6710 015c 174A     		ldr	r2, .L438+8
 6711 015e 1A44     		add	r2, r2, r3
 6712 0160 BB6A     		ldr	r3, [r7, #40]
 6713 0162 0433     		adds	r3, r3, #4
 6714 0164 1046     		mov	r0, r2
 6715 0166 1946     		mov	r1, r3
 6716 0168 FFF7FEFF 		bl	vListInsertEnd
4903:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4904:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The task should not have been on an event list. */
4905:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 6717              		.loc 1 4905 0
 6718 016c BB6A     		ldr	r3, [r7, #40]
 6719 016e 9B6A     		ldr	r3, [r3, #40]
 6720 0170 002B     		cmp	r3, #0
 6721 0172 09D0     		beq	.L434
 6722              	.LBB226:
 6723              	.LBB227:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6724              		.loc 2 197 0 discriminator 1
 6725              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6726 0174 4FF05003 			mov r3, #80												
 6727 0178 83F31188 		msr basepri, r3											
 6728 017c BFF36F8F 		isb														
 6729 0180 BFF34F8F 		dsb														
 6730              	
 6731              	@ 0 "" 2
 6732              		.thumb
 6733 0184 7B61     		str	r3, [r7, #20]
 6734              	.L435:
 6735              	.LBE227:
 6736              	.LBE226:
 6737              		.loc 1 4905 0 discriminator 4
 6738 0186 FEE7     		b	.L435
 6739              	.L434:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 208


4906:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4907:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #if ( configUSE_TICKLESS_IDLE != 0 )
4908:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
4909:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* If a task is blocked waiting for a notification then
4910:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * xNextTaskUnblockTime might be set to the blocked task's time
4911:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * out time.  If the task is unblocked for a reason other than
4912:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * a timeout xNextTaskUnblockTime is normally left unchanged,
4913:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * because it will automatically get reset to a new value when
4914:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * the tick count equals xNextTaskUnblockTime.  However if
4915:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * tickless idling is used it might be more important to enter
4916:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * sleep mode at the earliest possible time - so reset
4917:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * xNextTaskUnblockTime here to ensure it is updated at the
4918:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                          * earliest possible time. */
4919:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         prvResetNextTaskUnblockTime();
4920:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
4921:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 #endif
4922:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4923:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 6740              		.loc 1 4923 0
 6741 0188 BB6A     		ldr	r3, [r7, #40]
 6742 018a DA6A     		ldr	r2, [r3, #44]
 6743 018c 0C4B     		ldr	r3, .L438+12
 6744 018e 1B68     		ldr	r3, [r3]
 6745 0190 DB6A     		ldr	r3, [r3, #44]
 6746 0192 9A42     		cmp	r2, r3
 6747 0194 07D9     		bls	.L433
4924:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4925:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The notified task has a priority above the currently
4926:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * executing task so a yield is required. */
4927:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
 6748              		.loc 1 4927 0
 6749 0196 0B4B     		ldr	r3, .L438+16
 6750 0198 4FF08052 		mov	r2, #268435456
 6751 019c 1A60     		str	r2, [r3]
 6752              	@ 4927 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 6753 019e BFF34F8F 		dsb
 6754              	@ 0 "" 2
 6755              	@ 4927 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c" 1
 6756 01a2 BFF36F8F 		isb
 6757              	@ 0 "" 2
 6758              		.thumb
 6759              	.L433:
4928:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4929:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
4930:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
4931:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4932:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
4933:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4934:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
4935:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4936:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4937:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4938:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
4939:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 6760              		.loc 1 4939 0
 6761 01a6 FFF7FEFF 		bl	vPortExitCritical
4940:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 209


4941:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 6762              		.loc 1 4941 0
 6763 01aa FB6A     		ldr	r3, [r7, #44]
4942:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 6764              		.loc 1 4942 0
 6765 01ac 1846     		mov	r0, r3
 6766 01ae 3037     		adds	r7, r7, #48
 6767              	.LCFI277:
 6768              		.cfi_def_cfa_offset 8
 6769 01b0 BD46     		mov	sp, r7
 6770              	.LCFI278:
 6771              		.cfi_def_cfa_register 13
 6772              		@ sp needed
 6773 01b2 80BD     		pop	{r7, pc}
 6774              	.L439:
 6775              		.align	2
 6776              	.L438:
 6777 01b4 00000000 		.word	xTickCount
 6778 01b8 00000000 		.word	uxTopReadyPriority
 6779 01bc 00000000 		.word	pxReadyTasksLists
 6780 01c0 00000000 		.word	pxCurrentTCB
 6781 01c4 04ED00E0 		.word	-536810236
 6782              		.cfi_endproc
 6783              	.LFE59:
 6785              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 6786              		.align	2
 6787              		.global	xTaskGenericNotifyFromISR
 6788              		.thumb
 6789              		.thumb_func
 6791              	xTaskGenericNotifyFromISR:
 6792              	.LFB60:
4943:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4944:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4945:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4946:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4947:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4948:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4949:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
4950:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                           UBaseType_t uxIndexToNotify,
4951:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                           uint32_t ulValue,
4952:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                           eNotifyAction eAction,
4953:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                           uint32_t * pulPreviousNotificationValue,
4954:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                           BaseType_t * pxHigherPriorityTaskWoken )
4955:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 6793              		.loc 1 4955 0
 6794              		.cfi_startproc
 6795              		@ args = 8, pretend = 0, frame = 64
 6796              		@ frame_needed = 1, uses_anonymous_args = 0
 6797 0000 80B5     		push	{r7, lr}
 6798              	.LCFI279:
 6799              		.cfi_def_cfa_offset 8
 6800              		.cfi_offset 7, -8
 6801              		.cfi_offset 14, -4
 6802 0002 90B0     		sub	sp, sp, #64
 6803              	.LCFI280:
 6804              		.cfi_def_cfa_offset 72
 6805 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 210


 6806              	.LCFI281:
 6807              		.cfi_def_cfa_register 7
 6808 0006 F860     		str	r0, [r7, #12]
 6809 0008 B960     		str	r1, [r7, #8]
 6810 000a 7A60     		str	r2, [r7, #4]
 6811 000c FB70     		strb	r3, [r7, #3]
4956:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
4957:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint8_t ucOriginalNotifyState;
4958:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn = pdPASS;
 6812              		.loc 1 4958 0
 6813 000e 0123     		movs	r3, #1
 6814 0010 FB63     		str	r3, [r7, #60]
4959:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
4960:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4961:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( xTaskToNotify );
 6815              		.loc 1 4961 0
 6816 0012 FB68     		ldr	r3, [r7, #12]
 6817 0014 002B     		cmp	r3, #0
 6818 0016 09D1     		bne	.L441
 6819              	.LBB228:
 6820              	.LBB229:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6821              		.loc 2 197 0 discriminator 1
 6822              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6823 0018 4FF05003 			mov r3, #80												
 6824 001c 83F31188 		msr basepri, r3											
 6825 0020 BFF36F8F 		isb														
 6826 0024 BFF34F8F 		dsb														
 6827              	
 6828              	@ 0 "" 2
 6829              		.thumb
 6830 0028 FB62     		str	r3, [r7, #44]
 6831              	.L442:
 6832              	.LBE229:
 6833              	.LBE228:
 6834              		.loc 1 4961 0 discriminator 1
 6835 002a FEE7     		b	.L442
 6836              	.L441:
4962:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 6837              		.loc 1 4962 0
 6838 002c BB68     		ldr	r3, [r7, #8]
 6839 002e 002B     		cmp	r3, #0
 6840 0030 09D0     		beq	.L443
 6841              	.LBB230:
 6842              	.LBB231:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6843              		.loc 2 197 0 discriminator 1
 6844              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6845 0032 4FF05003 			mov r3, #80												
 6846 0036 83F31188 		msr basepri, r3											
 6847 003a BFF36F8F 		isb														
 6848 003e BFF34F8F 		dsb														
 6849              	
 6850              	@ 0 "" 2
 6851              		.thumb
 6852 0042 BB62     		str	r3, [r7, #40]
 6853              	.L444:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 211


 6854              	.LBE231:
 6855              	.LBE230:
 6856              		.loc 1 4962 0 discriminator 2
 6857 0044 FEE7     		b	.L444
 6858              	.L443:
4963:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4964:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
4965:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
4966:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
4967:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
4968:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4969:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * is defined in FreeRTOSConfig.h then
4970:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4971:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
4972:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * been assigned a priority above the configured maximum system call
4973:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
4974:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
4975:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
4976:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
4977:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
4978:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * provided on the following link:
4979:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
4980:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 6859              		.loc 1 4980 0
 6860 0046 FFF7FEFF 		bl	vPortValidateInterruptPriority
4981:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4982:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = xTaskToNotify;
 6861              		.loc 1 4982 0
 6862 004a FB68     		ldr	r3, [r7, #12]
 6863 004c BB63     		str	r3, [r7, #56]
 6864              	.LBB232:
 6865              	.LBB233:
 213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6866              		.loc 2 213 0
 6867              	@ 213 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 6868 004e EFF31182 			mrs r2, basepri											
 6869 0052 4FF05003 		mov r3, #80												
 6870 0056 83F31188 		msr basepri, r3											
 6871 005a BFF36F8F 		isb														
 6872 005e BFF34F8F 		dsb														
 6873              	
 6874              	@ 0 "" 2
 6875              		.thumb
 6876 0062 7A62     		str	r2, [r7, #36]
 6877 0064 3B62     		str	r3, [r7, #32]
 225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 6878              		.loc 2 225 0
 6879 0066 7B6A     		ldr	r3, [r7, #36]
 6880              	.LBE233:
 6881              	.LBE232:
4983:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4984:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 6882              		.loc 1 4984 0
 6883 0068 7B63     		str	r3, [r7, #52]
4985:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
4986:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pulPreviousNotificationValue != NULL )
 6884              		.loc 1 4986 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 212


 6885 006a BB6C     		ldr	r3, [r7, #72]
 6886 006c 002B     		cmp	r3, #0
 6887 006e 07D0     		beq	.L446
4987:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4988:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
 6888              		.loc 1 4988 0
 6889 0070 BA6B     		ldr	r2, [r7, #56]
 6890 0072 BB68     		ldr	r3, [r7, #8]
 6891 0074 1433     		adds	r3, r3, #20
 6892 0076 9B00     		lsls	r3, r3, #2
 6893 0078 1344     		add	r3, r3, r2
 6894 007a 5A68     		ldr	r2, [r3, #4]
 6895 007c BB6C     		ldr	r3, [r7, #72]
 6896 007e 1A60     		str	r2, [r3]
 6897              	.L446:
4989:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
4990:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4991:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
 6898              		.loc 1 4991 0
 6899 0080 BA6B     		ldr	r2, [r7, #56]
 6900 0082 BB68     		ldr	r3, [r7, #8]
 6901 0084 1344     		add	r3, r3, r2
 6902 0086 5833     		adds	r3, r3, #88
 6903 0088 1B78     		ldrb	r3, [r3]
 6904 008a 87F83330 		strb	r3, [r7, #51]
4992:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 6905              		.loc 1 4992 0
 6906 008e BA6B     		ldr	r2, [r7, #56]
 6907 0090 BB68     		ldr	r3, [r7, #8]
 6908 0092 1344     		add	r3, r3, r2
 6909 0094 5833     		adds	r3, r3, #88
 6910 0096 0222     		movs	r2, #2
 6911 0098 1A70     		strb	r2, [r3]
4993:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
4994:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             switch( eAction )
 6912              		.loc 1 4994 0
 6913 009a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6914 009c 042B     		cmp	r3, #4
 6915 009e 41D8     		bhi	.L447
 6916 00a0 01A2     		adr	r2, .L449
 6917 00a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6918 00a6 00BF     		.p2align 2
 6919              	.L449:
 6920 00a8 43010000 		.word	.L466+1
 6921 00ac BD000000 		.word	.L450+1
 6922 00b0 DB000000 		.word	.L451+1
 6923 00b4 F7000000 		.word	.L452+1
 6924 00b8 07010000 		.word	.L453+1
 6925              		.p2align 1
 6926              	.L450:
4995:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
4996:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eSetBits:
4997:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
 6927              		.loc 1 4997 0
 6928 00bc BA6B     		ldr	r2, [r7, #56]
 6929 00be BB68     		ldr	r3, [r7, #8]
 6930 00c0 1433     		adds	r3, r3, #20
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 213


 6931 00c2 9B00     		lsls	r3, r3, #2
 6932 00c4 1344     		add	r3, r3, r2
 6933 00c6 5A68     		ldr	r2, [r3, #4]
 6934 00c8 7B68     		ldr	r3, [r7, #4]
 6935 00ca 1A43     		orrs	r2, r2, r3
 6936 00cc B96B     		ldr	r1, [r7, #56]
 6937 00ce BB68     		ldr	r3, [r7, #8]
 6938 00d0 1433     		adds	r3, r3, #20
 6939 00d2 9B00     		lsls	r3, r3, #2
 6940 00d4 0B44     		add	r3, r3, r1
 6941 00d6 5A60     		str	r2, [r3, #4]
4998:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6942              		.loc 1 4998 0
 6943 00d8 34E0     		b	.L454
 6944              	.L451:
4999:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5000:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eIncrement:
5001:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
 6945              		.loc 1 5001 0
 6946 00da BA6B     		ldr	r2, [r7, #56]
 6947 00dc BB68     		ldr	r3, [r7, #8]
 6948 00de 1433     		adds	r3, r3, #20
 6949 00e0 9B00     		lsls	r3, r3, #2
 6950 00e2 1344     		add	r3, r3, r2
 6951 00e4 5B68     		ldr	r3, [r3, #4]
 6952 00e6 5A1C     		adds	r2, r3, #1
 6953 00e8 B96B     		ldr	r1, [r7, #56]
 6954 00ea BB68     		ldr	r3, [r7, #8]
 6955 00ec 1433     		adds	r3, r3, #20
 6956 00ee 9B00     		lsls	r3, r3, #2
 6957 00f0 0B44     		add	r3, r3, r1
 6958 00f2 5A60     		str	r2, [r3, #4]
5002:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6959              		.loc 1 5002 0
 6960 00f4 26E0     		b	.L454
 6961              	.L452:
5003:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5004:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eSetValueWithOverwrite:
5005:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
 6962              		.loc 1 5005 0
 6963 00f6 BA6B     		ldr	r2, [r7, #56]
 6964 00f8 BB68     		ldr	r3, [r7, #8]
 6965 00fa 1433     		adds	r3, r3, #20
 6966 00fc 9B00     		lsls	r3, r3, #2
 6967 00fe 1344     		add	r3, r3, r2
 6968 0100 7A68     		ldr	r2, [r7, #4]
 6969 0102 5A60     		str	r2, [r3, #4]
5006:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6970              		.loc 1 5006 0
 6971 0104 1EE0     		b	.L454
 6972              	.L453:
5007:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5008:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eSetValueWithoutOverwrite:
5009:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5010:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 6973              		.loc 1 5010 0
 6974 0106 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 214


 6975 010a 022B     		cmp	r3, #2
 6976 010c 07D0     		beq	.L455
5011:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
5012:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
 6977              		.loc 1 5012 0
 6978 010e BA6B     		ldr	r2, [r7, #56]
 6979 0110 BB68     		ldr	r3, [r7, #8]
 6980 0112 1433     		adds	r3, r3, #20
 6981 0114 9B00     		lsls	r3, r3, #2
 6982 0116 1344     		add	r3, r3, r2
 6983 0118 7A68     		ldr	r2, [r7, #4]
 6984 011a 5A60     		str	r2, [r3, #4]
5013:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
5014:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
5015:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
5016:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         /* The value could not be written to the task. */
5017:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xReturn = pdFAIL;
5018:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
5019:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5020:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 6985              		.loc 1 5020 0
 6986 011c 12E0     		b	.L454
 6987              	.L455:
5017:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
 6988              		.loc 1 5017 0
 6989 011e 0023     		movs	r3, #0
 6990 0120 FB63     		str	r3, [r7, #60]
 6991              		.loc 1 5020 0
 6992 0122 0FE0     		b	.L454
 6993              	.L447:
5021:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5022:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 case eNoAction:
5023:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5024:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The task is being notified without its notify value being
5025:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * updated. */
5026:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
5027:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5028:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 default:
5029:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5030:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Should not get here if all enums are handled.
5031:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * Artificially force an assert by testing a value the
5032:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * compiler can't assume is const. */
5033:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
 6994              		.loc 1 5033 0
 6995 0124 324B     		ldr	r3, .L467
 6996 0126 1B68     		ldr	r3, [r3]
 6997 0128 002B     		cmp	r3, #0
 6998 012a 09D0     		beq	.L457
 6999              	.LBB234:
 7000              	.LBB235:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7001              		.loc 2 197 0 discriminator 1
 7002              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7003 012c 4FF05003 			mov r3, #80												
 7004 0130 83F31188 		msr basepri, r3											
 7005 0134 BFF36F8F 		isb														
 7006 0138 BFF34F8F 		dsb														
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 215


 7007              	
 7008              	@ 0 "" 2
 7009              		.thumb
 7010 013c FB61     		str	r3, [r7, #28]
 7011              	.L458:
 7012              	.LBE235:
 7013              	.LBE234:
 7014              		.loc 1 5033 0 discriminator 3
 7015 013e FEE7     		b	.L458
 7016              	.L457:
5034:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     break;
 7017              		.loc 1 5034 0
 7018 0140 00E0     		b	.L454
 7019              	.L466:
5026:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
 7020              		.loc 1 5026 0
 7021 0142 00BF     		nop
 7022              	.L454:
5035:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5036:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5037:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );
5038:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5039:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5040:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * notification then unblock it now. */
5041:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 7023              		.loc 1 5041 0
 7024 0144 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 7025 0148 012B     		cmp	r3, #1
 7026 014a 46D1     		bne	.L459
5042:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
5043:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The task should not have been on an event list. */
5044:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 7027              		.loc 1 5044 0
 7028 014c BB6B     		ldr	r3, [r7, #56]
 7029 014e 9B6A     		ldr	r3, [r3, #40]
 7030 0150 002B     		cmp	r3, #0
 7031 0152 09D0     		beq	.L460
 7032              	.LBB236:
 7033              	.LBB237:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7034              		.loc 2 197 0 discriminator 1
 7035              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7036 0154 4FF05003 			mov r3, #80												
 7037 0158 83F31188 		msr basepri, r3											
 7038 015c BFF36F8F 		isb														
 7039 0160 BFF34F8F 		dsb														
 7040              	
 7041              	@ 0 "" 2
 7042              		.thumb
 7043 0164 BB61     		str	r3, [r7, #24]
 7044              	.L461:
 7045              	.LBE237:
 7046              	.LBE236:
 7047              		.loc 1 5044 0 discriminator 4
 7048 0166 FEE7     		b	.L461
 7049              	.L460:
5045:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 216


5046:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 7050              		.loc 1 5046 0
 7051 0168 224B     		ldr	r3, .L467+4
 7052 016a 1B68     		ldr	r3, [r3]
 7053 016c 002B     		cmp	r3, #0
 7054 016e 1ED1     		bne	.L462
5047:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5048:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 7055              		.loc 1 5048 0
 7056 0170 BB6B     		ldr	r3, [r7, #56]
 7057 0172 0433     		adds	r3, r3, #4
 7058 0174 1846     		mov	r0, r3
 7059 0176 FFF7FEFF 		bl	uxListRemove
5049:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7060              		.loc 1 5049 0
 7061 017a BB6B     		ldr	r3, [r7, #56]
 7062 017c DB6A     		ldr	r3, [r3, #44]
 7063 017e 1A46     		mov	r2, r3
 7064 0180 0123     		movs	r3, #1
 7065 0182 03FA02F2 		lsl	r2, r3, r2
 7066 0186 1C4B     		ldr	r3, .L467+8
 7067 0188 1B68     		ldr	r3, [r3]
 7068 018a 1343     		orrs	r3, r3, r2
 7069 018c 1A4A     		ldr	r2, .L467+8
 7070 018e 1360     		str	r3, [r2]
 7071 0190 BB6B     		ldr	r3, [r7, #56]
 7072 0192 DA6A     		ldr	r2, [r3, #44]
 7073 0194 1346     		mov	r3, r2
 7074 0196 9B00     		lsls	r3, r3, #2
 7075 0198 1344     		add	r3, r3, r2
 7076 019a 9B00     		lsls	r3, r3, #2
 7077 019c 174A     		ldr	r2, .L467+12
 7078 019e 1A44     		add	r2, r2, r3
 7079 01a0 BB6B     		ldr	r3, [r7, #56]
 7080 01a2 0433     		adds	r3, r3, #4
 7081 01a4 1046     		mov	r0, r2
 7082 01a6 1946     		mov	r1, r3
 7083 01a8 FFF7FEFF 		bl	vListInsertEnd
 7084 01ac 05E0     		b	.L463
 7085              	.L462:
5050:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5051:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
5052:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5053:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5054:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * this task pending until the scheduler is resumed. */
5055:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 7086              		.loc 1 5055 0
 7087 01ae BB6B     		ldr	r3, [r7, #56]
 7088 01b0 1833     		adds	r3, r3, #24
 7089 01b2 1348     		ldr	r0, .L467+16
 7090 01b4 1946     		mov	r1, r3
 7091 01b6 FFF7FEFF 		bl	vListInsertEnd
 7092              	.L463:
5056:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5057:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5058:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 7093              		.loc 1 5058 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 217


 7094 01ba BB6B     		ldr	r3, [r7, #56]
 7095 01bc DA6A     		ldr	r2, [r3, #44]
 7096 01be 114B     		ldr	r3, .L467+20
 7097 01c0 1B68     		ldr	r3, [r3]
 7098 01c2 DB6A     		ldr	r3, [r3, #44]
 7099 01c4 9A42     		cmp	r2, r3
 7100 01c6 08D9     		bls	.L459
5059:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5060:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The notified task has a priority above the currently
5061:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * executing task so a yield is required. */
5062:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
 7101              		.loc 1 5062 0
 7102 01c8 FB6C     		ldr	r3, [r7, #76]
 7103 01ca 002B     		cmp	r3, #0
 7104 01cc 02D0     		beq	.L464
5063:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
5064:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
 7105              		.loc 1 5064 0
 7106 01ce FB6C     		ldr	r3, [r7, #76]
 7107 01d0 0122     		movs	r2, #1
 7108 01d2 1A60     		str	r2, [r3]
 7109              	.L464:
5065:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
5066:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5067:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5068:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter to an ISR
5069:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * safe FreeRTOS function. */
5070:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xYieldPending = pdTRUE;
 7110              		.loc 1 5070 0
 7111 01d4 0C4B     		ldr	r3, .L467+24
 7112 01d6 0122     		movs	r2, #1
 7113 01d8 1A60     		str	r2, [r3]
 7114              	.L459:
 7115 01da 7B6B     		ldr	r3, [r7, #52]
 7116 01dc 7B61     		str	r3, [r7, #20]
 7117              	.LBB238:
 7118              	.LBB239:
 7119              		.loc 2 231 0
 7120 01de 7B69     		ldr	r3, [r7, #20]
 7121              	@ 231 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7122 01e0 83F31188 			msr basepri, r3	
 7123              	@ 0 "" 2
 7124              		.thumb
 7125              	.LBE239:
 7126              	.LBE238:
5071:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5072:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
5073:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5074:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5075:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5076:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5077:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
5078:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5079:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5080:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 7127              		.loc 1 5080 0
 7128 01e4 FB6B     		ldr	r3, [r7, #60]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 218


5081:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 7129              		.loc 1 5081 0
 7130 01e6 1846     		mov	r0, r3
 7131 01e8 4037     		adds	r7, r7, #64
 7132              	.LCFI282:
 7133              		.cfi_def_cfa_offset 8
 7134 01ea BD46     		mov	sp, r7
 7135              	.LCFI283:
 7136              		.cfi_def_cfa_register 13
 7137              		@ sp needed
 7138 01ec 80BD     		pop	{r7, pc}
 7139              	.L468:
 7140 01ee 00BF     		.align	2
 7141              	.L467:
 7142 01f0 00000000 		.word	xTickCount
 7143 01f4 00000000 		.word	uxSchedulerSuspended
 7144 01f8 00000000 		.word	uxTopReadyPriority
 7145 01fc 00000000 		.word	pxReadyTasksLists
 7146 0200 00000000 		.word	xPendingReadyList
 7147 0204 00000000 		.word	pxCurrentTCB
 7148 0208 00000000 		.word	xYieldPending
 7149              		.cfi_endproc
 7150              	.LFE60:
 7152              		.section	.text.vTaskGenericNotifyGiveFromISR,"ax",%progbits
 7153              		.align	2
 7154              		.global	vTaskGenericNotifyGiveFromISR
 7155              		.thumb
 7156              		.thumb_func
 7158              	vTaskGenericNotifyGiveFromISR:
 7159              	.LFB61:
5082:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5083:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5084:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5085:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5086:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5087:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5088:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
5089:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                         UBaseType_t uxIndexToNotify,
5090:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                         BaseType_t * pxHigherPriorityTaskWoken )
5091:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 7160              		.loc 1 5091 0
 7161              		.cfi_startproc
 7162              		@ args = 0, pretend = 0, frame = 56
 7163              		@ frame_needed = 1, uses_anonymous_args = 0
 7164 0000 80B5     		push	{r7, lr}
 7165              	.LCFI284:
 7166              		.cfi_def_cfa_offset 8
 7167              		.cfi_offset 7, -8
 7168              		.cfi_offset 14, -4
 7169 0002 8EB0     		sub	sp, sp, #56
 7170              	.LCFI285:
 7171              		.cfi_def_cfa_offset 64
 7172 0004 00AF     		add	r7, sp, #0
 7173              	.LCFI286:
 7174              		.cfi_def_cfa_register 7
 7175 0006 F860     		str	r0, [r7, #12]
 7176 0008 B960     		str	r1, [r7, #8]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 219


 7177 000a 7A60     		str	r2, [r7, #4]
5092:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
5093:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint8_t ucOriginalNotifyState;
5094:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
5095:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5096:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( xTaskToNotify );
 7178              		.loc 1 5096 0
 7179 000c FB68     		ldr	r3, [r7, #12]
 7180 000e 002B     		cmp	r3, #0
 7181 0010 09D1     		bne	.L470
 7182              	.LBB240:
 7183              	.LBB241:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7184              		.loc 2 197 0 discriminator 1
 7185              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7186 0012 4FF05003 			mov r3, #80												
 7187 0016 83F31188 		msr basepri, r3											
 7188 001a BFF36F8F 		isb														
 7189 001e BFF34F8F 		dsb														
 7190              	
 7191              	@ 0 "" 2
 7192              		.thumb
 7193 0022 BB62     		str	r3, [r7, #40]
 7194              	.L471:
 7195              	.LBE241:
 7196              	.LBE240:
 7197              		.loc 1 5096 0 discriminator 1
 7198 0024 FEE7     		b	.L471
 7199              	.L470:
5097:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7200              		.loc 1 5097 0
 7201 0026 BB68     		ldr	r3, [r7, #8]
 7202 0028 002B     		cmp	r3, #0
 7203 002a 09D0     		beq	.L472
 7204              	.LBB242:
 7205              	.LBB243:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7206              		.loc 2 197 0 discriminator 1
 7207              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7208 002c 4FF05003 			mov r3, #80												
 7209 0030 83F31188 		msr basepri, r3											
 7210 0034 BFF36F8F 		isb														
 7211 0038 BFF34F8F 		dsb														
 7212              	
 7213              	@ 0 "" 2
 7214              		.thumb
 7215 003c 7B62     		str	r3, [r7, #36]
 7216              	.L473:
 7217              	.LBE243:
 7218              	.LBE242:
 7219              		.loc 1 5097 0 discriminator 2
 7220 003e FEE7     		b	.L473
 7221              	.L472:
5098:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5099:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
5100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
5101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 220


5102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
5103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * is defined in FreeRTOSConfig.h then
5105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
5107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * been assigned a priority above the configured maximum system call
5108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
5109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
5110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
5111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * provided on the following link:
5114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 7222              		.loc 1 5115 0
 7223 0040 FFF7FEFF 		bl	vPortValidateInterruptPriority
5116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = xTaskToNotify;
 7224              		.loc 1 5117 0
 7225 0044 FB68     		ldr	r3, [r7, #12]
 7226 0046 7B63     		str	r3, [r7, #52]
 7227              	.LBB244:
 7228              	.LBB245:
 213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7229              		.loc 2 213 0
 7230              	@ 213 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7231 0048 EFF31182 			mrs r2, basepri											
 7232 004c 4FF05003 		mov r3, #80												
 7233 0050 83F31188 		msr basepri, r3											
 7234 0054 BFF36F8F 		isb														
 7235 0058 BFF34F8F 		dsb														
 7236              	
 7237              	@ 0 "" 2
 7238              		.thumb
 7239 005c 3A62     		str	r2, [r7, #32]
 7240 005e FB61     		str	r3, [r7, #28]
 225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7241              		.loc 2 225 0
 7242 0060 3B6A     		ldr	r3, [r7, #32]
 7243              	.LBE245:
 7244              	.LBE244:
5118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 7245              		.loc 1 5119 0
 7246 0062 3B63     		str	r3, [r7, #48]
5120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
5121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
 7247              		.loc 1 5121 0
 7248 0064 7A6B     		ldr	r2, [r7, #52]
 7249 0066 BB68     		ldr	r3, [r7, #8]
 7250 0068 1344     		add	r3, r3, r2
 7251 006a 5833     		adds	r3, r3, #88
 7252 006c 1B78     		ldrb	r3, [r3]
 7253 006e 87F82F30 		strb	r3, [r7, #47]
5122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7254              		.loc 1 5122 0
 7255 0072 7A6B     		ldr	r2, [r7, #52]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 221


 7256 0074 BB68     		ldr	r3, [r7, #8]
 7257 0076 1344     		add	r3, r3, r2
 7258 0078 5833     		adds	r3, r3, #88
 7259 007a 0222     		movs	r2, #2
 7260 007c 1A70     		strb	r2, [r3]
5123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* 'Giving' is equivalent to incrementing a count in a counting
5125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * semaphore. */
5126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
 7261              		.loc 1 5126 0
 7262 007e 7A6B     		ldr	r2, [r7, #52]
 7263 0080 BB68     		ldr	r3, [r7, #8]
 7264 0082 1433     		adds	r3, r3, #20
 7265 0084 9B00     		lsls	r3, r3, #2
 7266 0086 1344     		add	r3, r3, r2
 7267 0088 5B68     		ldr	r3, [r3, #4]
 7268 008a 5A1C     		adds	r2, r3, #1
 7269 008c 796B     		ldr	r1, [r7, #52]
 7270 008e BB68     		ldr	r3, [r7, #8]
 7271 0090 1433     		adds	r3, r3, #20
 7272 0092 9B00     		lsls	r3, r3, #2
 7273 0094 0B44     		add	r3, r3, r1
 7274 0096 5A60     		str	r2, [r3, #4]
5127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             traceTASK_NOTIFY_GIVE_FROM_ISR( uxIndexToNotify );
5129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * notification then unblock it now. */
5132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 7275              		.loc 1 5132 0
 7276 0098 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 7277 009c 012B     		cmp	r3, #1
 7278 009e 46D1     		bne	.L475
5133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
5134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The task should not have been on an event list. */
5135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 7279              		.loc 1 5135 0
 7280 00a0 7B6B     		ldr	r3, [r7, #52]
 7281 00a2 9B6A     		ldr	r3, [r3, #40]
 7282 00a4 002B     		cmp	r3, #0
 7283 00a6 09D0     		beq	.L476
 7284              	.LBB246:
 7285              	.LBB247:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7286              		.loc 2 197 0 discriminator 1
 7287              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7288 00a8 4FF05003 			mov r3, #80												
 7289 00ac 83F31188 		msr basepri, r3											
 7290 00b0 BFF36F8F 		isb														
 7291 00b4 BFF34F8F 		dsb														
 7292              	
 7293              	@ 0 "" 2
 7294              		.thumb
 7295 00b8 BB61     		str	r3, [r7, #24]
 7296              	.L477:
 7297              	.LBE247:
 7298              	.LBE246:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 222


 7299              		.loc 1 5135 0 discriminator 3
 7300 00ba FEE7     		b	.L477
 7301              	.L476:
5136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 7302              		.loc 1 5137 0
 7303 00bc 204B     		ldr	r3, .L481
 7304 00be 1B68     		ldr	r3, [r3]
 7305 00c0 002B     		cmp	r3, #0
 7306 00c2 1ED1     		bne	.L478
5138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 7307              		.loc 1 5139 0
 7308 00c4 7B6B     		ldr	r3, [r7, #52]
 7309 00c6 0433     		adds	r3, r3, #4
 7310 00c8 1846     		mov	r0, r3
 7311 00ca FFF7FEFF 		bl	uxListRemove
5140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7312              		.loc 1 5140 0
 7313 00ce 7B6B     		ldr	r3, [r7, #52]
 7314 00d0 DB6A     		ldr	r3, [r3, #44]
 7315 00d2 1A46     		mov	r2, r3
 7316 00d4 0123     		movs	r3, #1
 7317 00d6 03FA02F2 		lsl	r2, r3, r2
 7318 00da 1A4B     		ldr	r3, .L481+4
 7319 00dc 1B68     		ldr	r3, [r3]
 7320 00de 1343     		orrs	r3, r3, r2
 7321 00e0 184A     		ldr	r2, .L481+4
 7322 00e2 1360     		str	r3, [r2]
 7323 00e4 7B6B     		ldr	r3, [r7, #52]
 7324 00e6 DA6A     		ldr	r2, [r3, #44]
 7325 00e8 1346     		mov	r3, r2
 7326 00ea 9B00     		lsls	r3, r3, #2
 7327 00ec 1344     		add	r3, r3, r2
 7328 00ee 9B00     		lsls	r3, r3, #2
 7329 00f0 154A     		ldr	r2, .L481+8
 7330 00f2 1A44     		add	r2, r2, r3
 7331 00f4 7B6B     		ldr	r3, [r7, #52]
 7332 00f6 0433     		adds	r3, r3, #4
 7333 00f8 1046     		mov	r0, r2
 7334 00fa 1946     		mov	r1, r3
 7335 00fc FFF7FEFF 		bl	vListInsertEnd
 7336 0100 05E0     		b	.L479
 7337              	.L478:
5141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
5143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * this task pending until the scheduler is resumed. */
5146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 7338              		.loc 1 5146 0
 7339 0102 7B6B     		ldr	r3, [r7, #52]
 7340 0104 1833     		adds	r3, r3, #24
 7341 0106 1148     		ldr	r0, .L481+12
 7342 0108 1946     		mov	r1, r3
 7343 010a FFF7FEFF 		bl	vListInsertEnd
 7344              	.L479:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 223


5147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 7345              		.loc 1 5149 0
 7346 010e 7B6B     		ldr	r3, [r7, #52]
 7347 0110 DA6A     		ldr	r2, [r3, #44]
 7348 0112 0F4B     		ldr	r3, .L481+16
 7349 0114 1B68     		ldr	r3, [r3]
 7350 0116 DB6A     		ldr	r3, [r3, #44]
 7351 0118 9A42     		cmp	r2, r3
 7352 011a 08D9     		bls	.L475
5150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The notified task has a priority above the currently
5152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * executing task so a yield is required. */
5153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
 7353              		.loc 1 5153 0
 7354 011c 7B68     		ldr	r3, [r7, #4]
 7355 011e 002B     		cmp	r3, #0
 7356 0120 02D0     		beq	.L480
5154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
5155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
 7357              		.loc 1 5155 0
 7358 0122 7B68     		ldr	r3, [r7, #4]
 7359 0124 0122     		movs	r2, #1
 7360 0126 1A60     		str	r2, [r3]
 7361              	.L480:
5156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
5157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter in an ISR
5160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * safe FreeRTOS function. */
5161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xYieldPending = pdTRUE;
 7362              		.loc 1 5161 0
 7363 0128 0A4B     		ldr	r3, .L481+20
 7364 012a 0122     		movs	r2, #1
 7365 012c 1A60     		str	r2, [r3]
 7366              	.L475:
 7367 012e 3B6B     		ldr	r3, [r7, #48]
 7368 0130 7B61     		str	r3, [r7, #20]
 7369              	.LBB248:
 7370              	.LBB249:
 7371              		.loc 2 231 0
 7372 0132 7B69     		ldr	r3, [r7, #20]
 7373              	@ 231 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7374 0134 83F31188 			msr basepri, r3	
 7375              	@ 0 "" 2
 7376              		.thumb
 7377              	.LBE249:
 7378              	.LBE248:
5162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
5164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
5169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 224


5170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 7379              		.loc 1 5170 0
 7380 0138 3837     		adds	r7, r7, #56
 7381              	.LCFI287:
 7382              		.cfi_def_cfa_offset 8
 7383 013a BD46     		mov	sp, r7
 7384              	.LCFI288:
 7385              		.cfi_def_cfa_register 13
 7386              		@ sp needed
 7387 013c 80BD     		pop	{r7, pc}
 7388              	.L482:
 7389 013e 00BF     		.align	2
 7390              	.L481:
 7391 0140 00000000 		.word	uxSchedulerSuspended
 7392 0144 00000000 		.word	uxTopReadyPriority
 7393 0148 00000000 		.word	pxReadyTasksLists
 7394 014c 00000000 		.word	xPendingReadyList
 7395 0150 00000000 		.word	pxCurrentTCB
 7396 0154 00000000 		.word	xYieldPending
 7397              		.cfi_endproc
 7398              	.LFE61:
 7400              		.section	.text.xTaskGenericNotifyStateClear,"ax",%progbits
 7401              		.align	2
 7402              		.global	xTaskGenericNotifyStateClear
 7403              		.thumb
 7404              		.thumb_func
 7406              	xTaskGenericNotifyStateClear:
 7407              	.LFB62:
5171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
5178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                              UBaseType_t uxIndexToClear )
5179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 7408              		.loc 1 5179 0
 7409              		.cfi_startproc
 7410              		@ args = 0, pretend = 0, frame = 24
 7411              		@ frame_needed = 1, uses_anonymous_args = 0
 7412 0000 80B5     		push	{r7, lr}
 7413              	.LCFI289:
 7414              		.cfi_def_cfa_offset 8
 7415              		.cfi_offset 7, -8
 7416              		.cfi_offset 14, -4
 7417 0002 86B0     		sub	sp, sp, #24
 7418              	.LCFI290:
 7419              		.cfi_def_cfa_offset 32
 7420 0004 00AF     		add	r7, sp, #0
 7421              	.LCFI291:
 7422              		.cfi_def_cfa_register 7
 7423 0006 7860     		str	r0, [r7, #4]
 7424 0008 3960     		str	r1, [r7]
5180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
5181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         BaseType_t xReturn;
5182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 225


5183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7425              		.loc 1 5183 0
 7426 000a 3B68     		ldr	r3, [r7]
 7427 000c 002B     		cmp	r3, #0
 7428 000e 09D0     		beq	.L484
 7429              	.LBB250:
 7430              	.LBB251:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7431              		.loc 2 197 0 discriminator 1
 7432              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 7433 0010 4FF05003 			mov r3, #80												
 7434 0014 83F31188 		msr basepri, r3											
 7435 0018 BFF36F8F 		isb														
 7436 001c BFF34F8F 		dsb														
 7437              	
 7438              	@ 0 "" 2
 7439              		.thumb
 7440 0020 FB60     		str	r3, [r7, #12]
 7441              	.L485:
 7442              	.LBE251:
 7443              	.LBE250:
 7444              		.loc 1 5183 0 discriminator 1
 7445 0022 FEE7     		b	.L485
 7446              	.L484:
5184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * its notification state cleared. */
5187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
 7447              		.loc 1 5187 0
 7448 0024 7B68     		ldr	r3, [r7, #4]
 7449 0026 002B     		cmp	r3, #0
 7450 0028 02D1     		bne	.L486
 7451              		.loc 1 5187 0 is_stmt 0 discriminator 1
 7452 002a 104B     		ldr	r3, .L491
 7453 002c 1B68     		ldr	r3, [r3]
 7454 002e 00E0     		b	.L487
 7455              	.L486:
 7456              		.loc 1 5187 0 discriminator 2
 7457 0030 7B68     		ldr	r3, [r7, #4]
 7458              	.L487:
 7459              		.loc 1 5187 0 discriminator 4
 7460 0032 3B61     		str	r3, [r7, #16]
5188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 7461              		.loc 1 5189 0 is_stmt 1 discriminator 4
 7462 0034 FFF7FEFF 		bl	vPortEnterCritical
5190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
5191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
 7463              		.loc 1 5191 0 discriminator 4
 7464 0038 3A69     		ldr	r2, [r7, #16]
 7465 003a 3B68     		ldr	r3, [r7]
 7466 003c 1344     		add	r3, r3, r2
 7467 003e 5833     		adds	r3, r3, #88
 7468 0040 1B78     		ldrb	r3, [r3]
 7469 0042 DBB2     		uxtb	r3, r3
 7470 0044 022B     		cmp	r3, #2
 7471 0046 08D1     		bne	.L488
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 226


5192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
5193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
 7472              		.loc 1 5193 0
 7473 0048 3A69     		ldr	r2, [r7, #16]
 7474 004a 3B68     		ldr	r3, [r7]
 7475 004c 1344     		add	r3, r3, r2
 7476 004e 5833     		adds	r3, r3, #88
 7477 0050 0022     		movs	r2, #0
 7478 0052 1A70     		strb	r2, [r3]
5194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdPASS;
 7479              		.loc 1 5194 0
 7480 0054 0123     		movs	r3, #1
 7481 0056 7B61     		str	r3, [r7, #20]
 7482 0058 01E0     		b	.L489
 7483              	.L488:
5195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
5197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
5198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xReturn = pdFAIL;
 7484              		.loc 1 5198 0
 7485 005a 0023     		movs	r3, #0
 7486 005c 7B61     		str	r3, [r7, #20]
 7487              	.L489:
5199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
5201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 7488              		.loc 1 5201 0
 7489 005e FFF7FEFF 		bl	vPortExitCritical
5202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xReturn;
 7490              		.loc 1 5203 0
 7491 0062 7B69     		ldr	r3, [r7, #20]
5204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 7492              		.loc 1 5204 0
 7493 0064 1846     		mov	r0, r3
 7494 0066 1837     		adds	r7, r7, #24
 7495              	.LCFI292:
 7496              		.cfi_def_cfa_offset 8
 7497 0068 BD46     		mov	sp, r7
 7498              	.LCFI293:
 7499              		.cfi_def_cfa_register 13
 7500              		@ sp needed
 7501 006a 80BD     		pop	{r7, pc}
 7502              	.L492:
 7503              		.align	2
 7504              	.L491:
 7505 006c 00000000 		.word	pxCurrentTCB
 7506              		.cfi_endproc
 7507              	.LFE62:
 7509              		.section	.text.ulTaskGenericNotifyValueClear,"ax",%progbits
 7510              		.align	2
 7511              		.global	ulTaskGenericNotifyValueClear
 7512              		.thumb
 7513              		.thumb_func
 7515              	ulTaskGenericNotifyValueClear:
 7516              	.LFB63:
5205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 227


5206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
5212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                             UBaseType_t uxIndexToClear,
5213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                             uint32_t ulBitsToClear )
5214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
 7517              		.loc 1 5214 0
 7518              		.cfi_startproc
 7519              		@ args = 0, pretend = 0, frame = 24
 7520              		@ frame_needed = 1, uses_anonymous_args = 0
 7521 0000 80B5     		push	{r7, lr}
 7522              	.LCFI294:
 7523              		.cfi_def_cfa_offset 8
 7524              		.cfi_offset 7, -8
 7525              		.cfi_offset 14, -4
 7526 0002 86B0     		sub	sp, sp, #24
 7527              	.LCFI295:
 7528              		.cfi_def_cfa_offset 32
 7529 0004 00AF     		add	r7, sp, #0
 7530              	.LCFI296:
 7531              		.cfi_def_cfa_register 7
 7532 0006 F860     		str	r0, [r7, #12]
 7533 0008 B960     		str	r1, [r7, #8]
 7534 000a 7A60     		str	r2, [r7, #4]
5215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         TCB_t * pxTCB;
5216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         uint32_t ulReturn;
5217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * its notification state cleared. */
5220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
 7535              		.loc 1 5220 0
 7536 000c FB68     		ldr	r3, [r7, #12]
 7537 000e 002B     		cmp	r3, #0
 7538 0010 02D1     		bne	.L494
 7539              		.loc 1 5220 0 is_stmt 0 discriminator 1
 7540 0012 124B     		ldr	r3, .L497
 7541 0014 1B68     		ldr	r3, [r3]
 7542 0016 00E0     		b	.L495
 7543              	.L494:
 7544              		.loc 1 5220 0 discriminator 2
 7545 0018 FB68     		ldr	r3, [r7, #12]
 7546              	.L495:
 7547              		.loc 1 5220 0 discriminator 4
 7548 001a 7B61     		str	r3, [r7, #20]
5221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskENTER_CRITICAL();
 7549              		.loc 1 5222 0 is_stmt 1 discriminator 4
 7550 001c FFF7FEFF 		bl	vPortEnterCritical
5223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
5224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Return the notification as it was before the bits were cleared,
5225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * then clear the bit mask. */
5226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
 7551              		.loc 1 5226 0 discriminator 4
 7552 0020 7A69     		ldr	r2, [r7, #20]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 228


 7553 0022 BB68     		ldr	r3, [r7, #8]
 7554 0024 1433     		adds	r3, r3, #20
 7555 0026 9B00     		lsls	r3, r3, #2
 7556 0028 1344     		add	r3, r3, r2
 7557 002a 5B68     		ldr	r3, [r3, #4]
 7558 002c 3B61     		str	r3, [r7, #16]
5227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 7559              		.loc 1 5227 0 discriminator 4
 7560 002e 7A69     		ldr	r2, [r7, #20]
 7561 0030 BB68     		ldr	r3, [r7, #8]
 7562 0032 1433     		adds	r3, r3, #20
 7563 0034 9B00     		lsls	r3, r3, #2
 7564 0036 1344     		add	r3, r3, r2
 7565 0038 5A68     		ldr	r2, [r3, #4]
 7566 003a 7B68     		ldr	r3, [r7, #4]
 7567 003c DB43     		mvns	r3, r3
 7568 003e 1A40     		ands	r2, r2, r3
 7569 0040 7969     		ldr	r1, [r7, #20]
 7570 0042 BB68     		ldr	r3, [r7, #8]
 7571 0044 1433     		adds	r3, r3, #20
 7572 0046 9B00     		lsls	r3, r3, #2
 7573 0048 0B44     		add	r3, r3, r1
 7574 004a 5A60     		str	r2, [r3, #4]
5228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
5229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         taskEXIT_CRITICAL();
 7575              		.loc 1 5229 0 discriminator 4
 7576 004c FFF7FEFF 		bl	vPortExitCritical
5230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return ulReturn;
 7577              		.loc 1 5231 0 discriminator 4
 7578 0050 3B69     		ldr	r3, [r7, #16]
5232:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
 7579              		.loc 1 5232 0 discriminator 4
 7580 0052 1846     		mov	r0, r3
 7581 0054 1837     		adds	r7, r7, #24
 7582              	.LCFI297:
 7583              		.cfi_def_cfa_offset 8
 7584 0056 BD46     		mov	sp, r7
 7585              	.LCFI298:
 7586              		.cfi_def_cfa_register 13
 7587              		@ sp needed
 7588 0058 80BD     		pop	{r7, pc}
 7589              	.L498:
 7590 005a 00BF     		.align	2
 7591              	.L497:
 7592 005c 00000000 		.word	pxCurrentTCB
 7593              		.cfi_endproc
 7594              	.LFE63:
 7596              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 7597              		.align	2
 7598              		.thumb
 7599              		.thumb_func
 7601              	prvAddCurrentTaskToDelayedList:
 7602              	.LFB64:
5233:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5234:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5235:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 229


5236:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5237:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5238:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5239:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     uint32_t ulTaskGetIdleRunTimeCounter( void )
5240:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
5241:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         return xIdleTaskHandle->ulRunTimeCounter;
5242:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
5243:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5244:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** #endif
5245:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5246:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5247:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
5248:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely )
5249:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** {
 7603              		.loc 1 5249 0
 7604              		.cfi_startproc
 7605              		@ args = 0, pretend = 0, frame = 16
 7606              		@ frame_needed = 1, uses_anonymous_args = 0
 7607 0000 80B5     		push	{r7, lr}
 7608              	.LCFI299:
 7609              		.cfi_def_cfa_offset 8
 7610              		.cfi_offset 7, -8
 7611              		.cfi_offset 14, -4
 7612 0002 84B0     		sub	sp, sp, #16
 7613              	.LCFI300:
 7614              		.cfi_def_cfa_offset 24
 7615 0004 00AF     		add	r7, sp, #0
 7616              	.LCFI301:
 7617              		.cfi_def_cfa_register 7
 7618 0006 7860     		str	r0, [r7, #4]
 7619 0008 3960     		str	r1, [r7]
5250:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     TickType_t xTimeToWake;
5251:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     const TickType_t xConstTickCount = xTickCount;
 7620              		.loc 1 5251 0
 7621 000a 284B     		ldr	r3, .L504
 7622 000c 1B68     		ldr	r3, [r3]
 7623 000e FB60     		str	r3, [r7, #12]
5252:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5253:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
5254:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
5255:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* About to enter a delayed list, so ensure the ucDelayAborted flag is
5256:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * reset to pdFALSE so it can be detected as having been set to pdTRUE
5257:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * when the task leaves the Blocked state. */
5258:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             pxCurrentTCB->ucDelayAborted = pdFALSE;
5259:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
5260:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif
5261:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5262:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     /* Remove the task from the ready list before adding it to the blocked list
5263:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****      * as the same list item is used for both lists. */
5264:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 7624              		.loc 1 5264 0
 7625 0010 274B     		ldr	r3, .L504+4
 7626 0012 1B68     		ldr	r3, [r3]
 7627 0014 0433     		adds	r3, r3, #4
 7628 0016 1846     		mov	r0, r3
 7629 0018 FFF7FEFF 		bl	uxListRemove
 7630 001c 0346     		mov	r3, r0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 230


 7631 001e 002B     		cmp	r3, #0
 7632 0020 0BD1     		bne	.L500
5265:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
5266:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         /* The current task must be in a ready list, so there is no need to
5267:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****          * check, and the port reset macro can be called directly. */
5268:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCu
 7633              		.loc 1 5268 0
 7634 0022 234B     		ldr	r3, .L504+4
 7635 0024 1B68     		ldr	r3, [r3]
 7636 0026 DB6A     		ldr	r3, [r3, #44]
 7637 0028 1A46     		mov	r2, r3
 7638 002a 0123     		movs	r3, #1
 7639 002c 9340     		lsls	r3, r3, r2
 7640 002e DA43     		mvns	r2, r3
 7641 0030 204B     		ldr	r3, .L504+8
 7642 0032 1B68     		ldr	r3, [r3]
 7643 0034 1340     		ands	r3, r3, r2
 7644 0036 1F4A     		ldr	r2, .L504+8
 7645 0038 1360     		str	r3, [r2]
 7646              	.L500:
5269:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
5270:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     else
5271:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     {
5272:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         mtCOVERAGE_TEST_MARKER();
5273:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     }
5274:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5275:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
5276:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
5277:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 7647              		.loc 1 5277 0
 7648 003a 7B68     		ldr	r3, [r7, #4]
 7649 003c B3F1FF3F 		cmp	r3, #-1
 7650 0040 0AD1     		bne	.L501
 7651              		.loc 1 5277 0 is_stmt 0 discriminator 1
 7652 0042 3B68     		ldr	r3, [r7]
 7653 0044 002B     		cmp	r3, #0
 7654 0046 07D0     		beq	.L501
5278:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
5279:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Add the task to the suspended task list instead of a delayed task
5280:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * list to ensure it is not woken by a timing event.  It will block
5281:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * indefinitely. */
5282:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 7655              		.loc 1 5282 0 is_stmt 1
 7656 0048 194B     		ldr	r3, .L504+4
 7657 004a 1B68     		ldr	r3, [r3]
 7658 004c 0433     		adds	r3, r3, #4
 7659 004e 1A48     		ldr	r0, .L504+12
 7660 0050 1946     		mov	r1, r3
 7661 0052 FFF7FEFF 		bl	vListInsertEnd
 7662 0056 26E0     		b	.L499
 7663              	.L501:
5283:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5284:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
5285:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
5286:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Calculate the time at which the task should be woken if the event
5287:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * does not occur.  This may overflow but this doesn't matter, the
5288:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * kernel will manage it correctly. */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 231


5289:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 xTimeToWake = xConstTickCount + xTicksToWait;
 7664              		.loc 1 5289 0
 7665 0058 FA68     		ldr	r2, [r7, #12]
 7666 005a 7B68     		ldr	r3, [r7, #4]
 7667 005c 1344     		add	r3, r3, r2
 7668 005e BB60     		str	r3, [r7, #8]
5290:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5291:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The list item will be inserted in wake time order. */
5292:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 7669              		.loc 1 5292 0
 7670 0060 134B     		ldr	r3, .L504+4
 7671 0062 1B68     		ldr	r3, [r3]
 7672 0064 BA68     		ldr	r2, [r7, #8]
 7673 0066 5A60     		str	r2, [r3, #4]
5293:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5294:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xTimeToWake < xConstTickCount )
 7674              		.loc 1 5294 0
 7675 0068 BA68     		ldr	r2, [r7, #8]
 7676 006a FB68     		ldr	r3, [r7, #12]
 7677 006c 9A42     		cmp	r2, r3
 7678 006e 09D2     		bcs	.L503
5295:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5296:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* Wake time has overflowed.  Place this item in the overflow
5297:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * list. */
5298:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 7679              		.loc 1 5298 0
 7680 0070 124B     		ldr	r3, .L504+16
 7681 0072 1A68     		ldr	r2, [r3]
 7682 0074 0E4B     		ldr	r3, .L504+4
 7683 0076 1B68     		ldr	r3, [r3]
 7684 0078 0433     		adds	r3, r3, #4
 7685 007a 1046     		mov	r0, r2
 7686 007c 1946     		mov	r1, r3
 7687 007e FFF7FEFF 		bl	vListInsert
 7688 0082 10E0     		b	.L499
 7689              	.L503:
5299:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5300:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
5301:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5302:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* The wake time has not overflowed, so the current block list
5303:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * is used. */
5304:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 7690              		.loc 1 5304 0
 7691 0084 0E4B     		ldr	r3, .L504+20
 7692 0086 1A68     		ldr	r2, [r3]
 7693 0088 094B     		ldr	r3, .L504+4
 7694 008a 1B68     		ldr	r3, [r3]
 7695 008c 0433     		adds	r3, r3, #4
 7696 008e 1046     		mov	r0, r2
 7697 0090 1946     		mov	r1, r3
 7698 0092 FFF7FEFF 		bl	vListInsert
5305:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5306:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     /* If the task entering the blocked state was placed at the
5307:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * head of the list of blocked tasks then xNextTaskUnblockTime
5308:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                      * needs to be updated too. */
5309:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     if( xTimeToWake < xNextTaskUnblockTime )
 7699              		.loc 1 5309 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 232


 7700 0096 0B4B     		ldr	r3, .L504+24
 7701 0098 1B68     		ldr	r3, [r3]
 7702 009a BA68     		ldr	r2, [r7, #8]
 7703 009c 9A42     		cmp	r2, r3
 7704 009e 02D2     		bcs	.L499
5310:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
5311:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         xNextTaskUnblockTime = xTimeToWake;
 7705              		.loc 1 5311 0
 7706 00a0 084A     		ldr	r2, .L504+24
 7707 00a2 BB68     		ldr	r3, [r7, #8]
 7708 00a4 1360     		str	r3, [r2]
 7709              	.L499:
5312:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
5313:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     else
5314:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     {
5315:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
5316:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     }
5317:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5318:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5319:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
5320:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #else /* INCLUDE_vTaskSuspend */
5321:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         {
5322:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Calculate the time at which the task should be woken if the event
5323:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * does not occur.  This may overflow but this doesn't matter, the kernel
5324:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****              * will manage it correctly. */
5325:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             xTimeToWake = xConstTickCount + xTicksToWait;
5326:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5327:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* The list item will be inserted in wake time order. */
5328:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5329:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5330:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             if( xTimeToWake < xConstTickCount )
5331:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
5332:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* Wake time has overflowed.  Place this item in the overflow list. */
5333:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5334:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5335:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             else
5336:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             {
5337:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* The wake time has not overflowed, so the current block list is used. */
5338:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5339:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5340:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 /* If the task entering the blocked state was placed at the head of the
5341:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * list of blocked tasks then xNextTaskUnblockTime needs to be updated
5342:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                  * too. */
5343:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 if( xTimeToWake < xNextTaskUnblockTime )
5344:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5345:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     xNextTaskUnblockTime = xTimeToWake;
5346:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5347:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 else
5348:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 {
5349:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5350:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****                 }
5351:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             }
5352:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** 
5353:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5354:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****             ( void ) xCanBlockIndefinitely;
5355:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****         }
5356:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 233


5357:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/tasks.c **** }
 7710              		.loc 1 5357 0
 7711 00a6 1037     		adds	r7, r7, #16
 7712              	.LCFI302:
 7713              		.cfi_def_cfa_offset 8
 7714 00a8 BD46     		mov	sp, r7
 7715              	.LCFI303:
 7716              		.cfi_def_cfa_register 13
 7717              		@ sp needed
 7718 00aa 80BD     		pop	{r7, pc}
 7719              	.L505:
 7720              		.align	2
 7721              	.L504:
 7722 00ac 00000000 		.word	xTickCount
 7723 00b0 00000000 		.word	pxCurrentTCB
 7724 00b4 00000000 		.word	uxTopReadyPriority
 7725 00b8 00000000 		.word	xSuspendedTaskList
 7726 00bc 00000000 		.word	pxOverflowDelayedTaskList
 7727 00c0 00000000 		.word	pxDelayedTaskList
 7728 00c4 00000000 		.word	xNextTaskUnblockTime
 7729              		.cfi_endproc
 7730              	.LFE64:
 7732              		.text
 7733              	.Letext0:
 7734              		.file 3 "/Users/adambujak/Workspace/whisper_system/.dependencies/gcc-arm-none-eabi-4_9-2015q3/lib/
 7735              		.file 4 "/Users/adambujak/Workspace/whisper_system/.dependencies/gcc-arm-none-eabi-4_9-2015q3/arm-
 7736              		.file 5 "/Users/adambujak/Workspace/whisper_system/.dependencies/gcc-arm-none-eabi-4_9-2015q3/arm-
 7737              		.file 6 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/include/projdefs.h"
 7738              		.file 7 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/include/list.h"
 7739              		.file 8 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/include/task.h"
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 234


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:25     .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:22     .bss.pxCurrentTCB:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:28     .bss.pxReadyTasksLists:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:31     .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:34     .bss.xDelayedTaskList1:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:37     .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:40     .bss.xDelayedTaskList2:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:43     .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:46     .bss.pxDelayedTaskList:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:49     .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:52     .bss.pxOverflowDelayedTaskList:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:55     .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:58     .bss.xPendingReadyList:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:61     .bss.xPendingReadyList:0000000000000000 xPendingReadyList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:64     .bss.xTasksWaitingTermination:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:67     .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:70     .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:73     .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:76     .bss.xSuspendedTaskList:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:79     .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:82     .bss.uxCurrentNumberOfTasks:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:85     .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:88     .bss.xTickCount:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:91     .bss.xTickCount:0000000000000000 xTickCount
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:94     .bss.uxTopReadyPriority:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:97     .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:100    .bss.xSchedulerRunning:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:103    .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:106    .bss.xPendedTicks:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:109    .bss.xPendedTicks:0000000000000000 xPendedTicks
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:112    .bss.xYieldPending:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:115    .bss.xYieldPending:0000000000000000 xYieldPending
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:118    .bss.xNumOfOverflows:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:121    .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:124    .bss.uxTaskNumber:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:127    .bss.uxTaskNumber:0000000000000000 uxTaskNumber
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:130    .bss.xNextTaskUnblockTime:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:133    .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:136    .bss.xIdleTaskHandle:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:139    .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:142    .bss.uxSchedulerSuspended:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:145    .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:148    .text.xTaskCreate:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:153    .text.xTaskCreate:0000000000000000 xTaskCreate
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:261    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:470    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:257    .text.prvInitialiseNewTask:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:466    .text.prvAddNewTaskToReadyList:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4710   .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:606    .text.prvAddNewTaskToReadyList:00000000000000c4 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:617    .text.vTaskDelete:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:622    .text.vTaskDelete:0000000000000000 vTaskDelete
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5237   .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5280   .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:798    .text.vTaskDelete:00000000000000f4 $d
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 235


/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:812    .text.vTaskDelayUntil:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:817    .text.vTaskDelayUntil:0000000000000000 vTaskDelayUntil
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2509   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7601   .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2553   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1005   .text.vTaskDelayUntil:00000000000000e8 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1012   .text.vTaskDelay:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1017   .text.vTaskDelay:0000000000000000 vTaskDelay
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1103   .text.vTaskDelay:000000000000005c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1109   .text.eTaskGetState:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1114   .text.eTaskGetState:0000000000000000 eTaskGetState
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1286   .text.eTaskGetState:00000000000000dc $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1295   .text.uxTaskPriorityGet:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1300   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1355   .text.uxTaskPriorityGet:0000000000000030 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1360   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1365   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1450   .text.uxTaskPriorityGetFromISR:0000000000000054 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1455   .text.vTaskPrioritySet:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1460   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1687   .text.vTaskPrioritySet:0000000000000144 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1695   .text.vTaskSuspend:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1700   .text.vTaskSuspend:0000000000000000 vTaskSuspend
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3508   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1906   .text.vTaskSuspend:000000000000011c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1918   .text.prvTaskIsTaskSuspended:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:1922   .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2008   .text.prvTaskIsTaskSuspended:0000000000000058 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2014   .text.vTaskResume:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2019   .text.vTaskResume:0000000000000000 vTaskResume
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2144   .text.vTaskResume:00000000000000ac $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2152   .text.xTaskResumeFromISR:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2157   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2313   .text.xTaskResumeFromISR:00000000000000d0 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2322   .rodata:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2326   .text.vTaskStartScheduler:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2331   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2435   .text.vTaskStartScheduler:000000000000007c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4657   .text.prvIdleTask:0000000000000000 prvIdleTask
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2445   .text.vTaskEndScheduler:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2450   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2499   .text.vTaskEndScheduler:0000000000000028 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2504   .text.vTaskSuspendAll:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2543   .text.vTaskSuspendAll:0000000000000018 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2548   .text.xTaskResumeAll:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3257   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2755   .text.xTaskResumeAll:0000000000000118 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2768   .text.xTaskGetTickCount:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2773   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2813   .text.xTaskGetTickCount:000000000000001c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2818   .text.xTaskGetTickCountFromISR:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2823   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2864   .text.xTaskGetTickCountFromISR:0000000000000020 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2869   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2874   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2905   .text.uxTaskGetNumberOfTasks:0000000000000014 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2910   .text.pcTaskGetName:0000000000000000 $t
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 236


/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2915   .text.pcTaskGetName:0000000000000000 pcTaskGetName
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2989   .text.pcTaskGetName:0000000000000044 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2994   .text.uxTaskGetSystemState:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:2999   .text.uxTaskGetSystemState:0000000000000000 uxTaskGetSystemState
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5040   .text.prvListTasksWithinSingleList:0000000000000000 prvListTasksWithinSingleList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3163   .text.uxTaskGetSystemState:0000000000000108 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3173   .text.xTaskCatchUpTicks:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3178   .text.xTaskCatchUpTicks:0000000000000000 xTaskCatchUpTicks
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3246   .text.xTaskCatchUpTicks:0000000000000044 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3252   .text.xTaskIncrementTick:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3488   .text.xTaskIncrementTick:0000000000000148 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3503   .text.vTaskSwitchContext:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3642   .text.vTaskSwitchContext:00000000000000a0 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3651   .text.vTaskPlaceOnEventList:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3656   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3720   .text.vTaskPlaceOnEventList:0000000000000040 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3725   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3730   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3824   .text.vTaskPlaceOnUnorderedEventList:000000000000006c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3830   .text.vTaskPlaceOnEventListRestricted:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3835   .text.vTaskPlaceOnEventListRestricted:0000000000000000 vTaskPlaceOnEventListRestricted
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3908   .text.vTaskPlaceOnEventListRestricted:0000000000000050 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3913   .text.xTaskRemoveFromEventList:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:3918   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4047   .text.xTaskRemoveFromEventList:00000000000000b0 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4057   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4062   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4192   .text.vTaskRemoveFromUnorderedEventList:00000000000000ac $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4201   .text.vTaskSetTimeOutState:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4206   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4272   .text.vTaskSetTimeOutState:0000000000000040 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4278   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4283   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4327   .text.vTaskInternalSetTimeOutState:0000000000000024 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4333   .text.xTaskCheckForTimeOut:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4338   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4493   .text.xTaskCheckForTimeOut:00000000000000c0 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4499   .text.vTaskMissedYield:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4504   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4535   .text.vTaskMissedYield:0000000000000014 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4540   .text.uxTaskGetTaskNumber:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4545   .text.uxTaskGetTaskNumber:0000000000000000 uxTaskGetTaskNumber
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4600   .text.vTaskSetTaskNumber:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4605   .text.vTaskSetTaskNumber:0000000000000000 vTaskSetTaskNumber
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4653   .text.prvIdleTask:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4802   .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4700   .text.prvIdleTask:0000000000000028 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4706   .text.prvInitialiseTaskLists:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4786   .text.prvInitialiseTaskLists:000000000000005c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4798   .text.prvCheckTasksWaitingTermination:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4871   .text.prvCheckTasksWaitingTermination:000000000000004c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4878   .text.vTaskGetInfo:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:4883   .text.vTaskGetInfo:0000000000000000 vTaskGetInfo
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5170   .text.prvTaskCheckFreeStackSpace:0000000000000000 prvTaskCheckFreeStackSpace
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5031   .text.vTaskGetInfo:00000000000000c4 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5036   .text.prvListTasksWithinSingleList:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5166   .text.prvTaskCheckFreeStackSpace:0000000000000000 $t
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 237


/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5233   .text.prvDeleteTCB:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5276   .text.prvResetNextTaskUnblockTime:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5327   .text.prvResetNextTaskUnblockTime:000000000000002c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5333   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5338   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5378   .text.xTaskGetCurrentTaskHandle:000000000000001c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5383   .text.xTaskGetSchedulerState:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5388   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5448   .text.xTaskGetSchedulerState:0000000000000034 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5454   .text.xTaskPriorityInherit:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5459   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5613   .text.xTaskPriorityInherit:00000000000000e4 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5620   .text.xTaskPriorityDisinherit:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5625   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5793   .text.xTaskPriorityDisinherit:00000000000000e8 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5800   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5805   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:5998   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000110 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6005   .text.uxTaskResetEventItemValue:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6010   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6059   .text.uxTaskResetEventItemValue:000000000000002c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6064   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6069   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6112   .text.pvTaskIncrementMutexHeldCount:0000000000000024 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6117   .text.ulTaskGenericNotifyTake:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6122   .text.ulTaskGenericNotifyTake:0000000000000000 ulTaskGenericNotifyTake
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6272   .text.ulTaskGenericNotifyTake:00000000000000cc $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6278   .text.xTaskGenericNotifyWait:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6283   .text.xTaskGenericNotifyWait:0000000000000000 xTaskGenericNotifyWait
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6461   .text.xTaskGenericNotifyWait:0000000000000100 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6467   .text.xTaskGenericNotify:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6472   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6581   .text.xTaskGenericNotify:000000000000008c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6586   .text.xTaskGenericNotify:00000000000000a0 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6777   .text.xTaskGenericNotify:00000000000001b4 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6786   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6791   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6920   .text.xTaskGenericNotifyFromISR:00000000000000a8 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:6925   .text.xTaskGenericNotifyFromISR:00000000000000bc $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7142   .text.xTaskGenericNotifyFromISR:00000000000001f0 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7153   .text.vTaskGenericNotifyGiveFromISR:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7158   .text.vTaskGenericNotifyGiveFromISR:0000000000000000 vTaskGenericNotifyGiveFromISR
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7391   .text.vTaskGenericNotifyGiveFromISR:0000000000000140 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7401   .text.xTaskGenericNotifyStateClear:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7406   .text.xTaskGenericNotifyStateClear:0000000000000000 xTaskGenericNotifyStateClear
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7505   .text.xTaskGenericNotifyStateClear:000000000000006c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7510   .text.ulTaskGenericNotifyValueClear:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7515   .text.ulTaskGenericNotifyValueClear:0000000000000000 ulTaskGenericNotifyValueClear
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7592   .text.ulTaskGenericNotifyValueClear:000000000000005c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7597   .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s:7722   .text.prvAddCurrentTaskToDelayedList:00000000000000ac $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.12d3039ce5a2552d46df25be77b64279
                           .group:0000000000000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccuBawkf.s 			page 238


                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:0000000000000000 wm4.stddef.h.39.dc09cac7e3f758f23d559f6b28ebbb0d
                           .group:0000000000000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:0000000000000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:0000000000000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:0000000000000000 wm4.cdefs.h.47.a14b68a47d722a767cc4688ffe478d81
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:0000000000000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.2.23623fc0cad83877f62ccd9ca9b417c2
                           .group:0000000000000000 wm4.projdefs.h.28.d6a7c9061b707820f2fcf4c2ff5d9f24
                           .group:0000000000000000 wm4.portmacro.h.30.0285ed3864ca8fd2e12d2b9aedd88dfd
                           .group:0000000000000000 wm4.portable.h.63.e9cc508c3850f44ce542149380c67812
                           .group:0000000000000000 wm4.mpu_wrappers.h.28.163fb40577cf8d1578015ea3f2ff4cdb
                           .group:0000000000000000 wm4.FreeRTOS.h.67.b174ccccfb8001b827e8ddeee1ca37a2
                           .group:0000000000000000 wm4.list.h.57.02ec67e07eacffe5ca7cfb7326896236
                           .group:0000000000000000 wm4.task.h.47.2d3fe49a094b8ec1e3e6aac441e8db21
                           .group:0000000000000000 wm4.timers.h.55.5dc360ab39e4b575b2753deeda01a480
                           .group:0000000000000000 wm4.stack_macros.h.28.d35740f6159eb4807b1b5492ea0f4504

UNDEFINED SYMBOLS
pvPortMalloc
vPortFree
memset
vListInitialiseItem
pxPortInitialiseStack
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vPortValidateInterruptPriority
xTimerCreateTimerTask
xPortStartScheduler
vPortEndScheduler
vListInsert
vListInitialise
