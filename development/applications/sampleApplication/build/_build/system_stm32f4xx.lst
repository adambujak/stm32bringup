ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"system_stm32f4xx.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.global	SystemCoreClock
  21              		.section	.data.SystemCoreClock,"aw",%progbits
  22              		.align	2
  25              	SystemCoreClock:
  26 0000 0024F400 		.word	16000000
  27              		.global	AHBPrescTable
  28              		.section	.rodata.AHBPrescTable,"a",%progbits
  29              		.align	2
  32              	AHBPrescTable:
  33 0000 00       		.byte	0
  34 0001 00       		.byte	0
  35 0002 00       		.byte	0
  36 0003 00       		.byte	0
  37 0004 00       		.byte	0
  38 0005 00       		.byte	0
  39 0006 00       		.byte	0
  40 0007 00       		.byte	0
  41 0008 01       		.byte	1
  42 0009 02       		.byte	2
  43 000a 03       		.byte	3
  44 000b 04       		.byte	4
  45 000c 06       		.byte	6
  46 000d 07       		.byte	7
  47 000e 08       		.byte	8
  48 000f 09       		.byte	9
  49              		.global	APBPrescTable
  50              		.section	.rodata.APBPrescTable,"a",%progbits
  51              		.align	2
  54              	APBPrescTable:
  55 0000 00       		.byte	0
  56 0001 00       		.byte	0
  57 0002 00       		.byte	0
  58 0003 00       		.byte	0
  59 0004 01       		.byte	1
  60 0005 02       		.byte	2
  61 0006 03       		.byte	3
  62 0007 04       		.byte	4
  63              		.section	.text.SystemInit,"ax",%progbits
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 2


  64              		.align	2
  65              		.global	SystemInit
  66              		.thumb
  67              		.thumb_func
  69              	SystemInit:
  70              	.LFB130:
  71              		.file 1 "../src/system_stm32f4xx.c"
   1:../src/system_stm32f4xx.c **** /**
   2:../src/system_stm32f4xx.c ****   ******************************************************************************
   3:../src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:../src/system_stm32f4xx.c ****   *
   7:../src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:../src/system_stm32f4xx.c ****   *   user application:
   9:../src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:../src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  11:../src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  12:../src/system_stm32f4xx.c ****   *
  13:../src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:../src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick
  15:../src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  16:../src/system_stm32f4xx.c ****   *
  17:../src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:../src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  19:../src/system_stm32f4xx.c ****   *                                 during program execution.
  20:../src/system_stm32f4xx.c ****   *
  21:../src/system_stm32f4xx.c ****   *
  22:../src/system_stm32f4xx.c ****   ******************************************************************************
  23:../src/system_stm32f4xx.c ****   * @attention
  24:../src/system_stm32f4xx.c ****   *
  25:../src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2017 STMicroelectronics</center></h2>
  26:../src/system_stm32f4xx.c ****   *
  27:../src/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  28:../src/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  29:../src/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  30:../src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
  31:../src/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  32:../src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  33:../src/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  34:../src/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  35:../src/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  36:../src/system_stm32f4xx.c ****   *      without specific prior written permission.
  37:../src/system_stm32f4xx.c ****   *
  38:../src/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  39:../src/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  40:../src/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  41:../src/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  42:../src/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  43:../src/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  44:../src/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  45:../src/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  46:../src/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  47:../src/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  48:../src/system_stm32f4xx.c ****   *
  49:../src/system_stm32f4xx.c ****   ******************************************************************************
  50:../src/system_stm32f4xx.c ****   */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 3


  51:../src/system_stm32f4xx.c **** 
  52:../src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  53:../src/system_stm32f4xx.c ****   * @{
  54:../src/system_stm32f4xx.c ****   */
  55:../src/system_stm32f4xx.c **** 
  56:../src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  57:../src/system_stm32f4xx.c ****   * @{
  58:../src/system_stm32f4xx.c ****   */
  59:../src/system_stm32f4xx.c **** 
  60:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  61:../src/system_stm32f4xx.c ****   * @{
  62:../src/system_stm32f4xx.c ****   */
  63:../src/system_stm32f4xx.c **** 
  64:../src/system_stm32f4xx.c **** 
  65:../src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  66:../src/system_stm32f4xx.c **** 
  67:../src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE)
  68:../src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  69:../src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  70:../src/system_stm32f4xx.c **** 
  71:../src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  72:../src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  73:../src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  74:../src/system_stm32f4xx.c **** 
  75:../src/system_stm32f4xx.c **** /**
  76:../src/system_stm32f4xx.c ****   * @}
  77:../src/system_stm32f4xx.c ****   */
  78:../src/system_stm32f4xx.c **** 
  79:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  80:../src/system_stm32f4xx.c ****   * @{
  81:../src/system_stm32f4xx.c ****   */
  82:../src/system_stm32f4xx.c **** 
  83:../src/system_stm32f4xx.c **** /**
  84:../src/system_stm32f4xx.c ****   * @}
  85:../src/system_stm32f4xx.c ****   */
  86:../src/system_stm32f4xx.c **** 
  87:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  88:../src/system_stm32f4xx.c ****   * @{
  89:../src/system_stm32f4xx.c ****   */
  90:../src/system_stm32f4xx.c **** 
  91:../src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  92:../src/system_stm32f4xx.c **** 
  93:../src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  94:../src/system_stm32f4xx.c ****      Internal SRAM. */
  95:../src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
  96:../src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field.
  97:../src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
  98:../src/system_stm32f4xx.c **** /******************************************************************************/
  99:../src/system_stm32f4xx.c **** 
 100:../src/system_stm32f4xx.c **** /**
 101:../src/system_stm32f4xx.c ****   * @}
 102:../src/system_stm32f4xx.c ****   */
 103:../src/system_stm32f4xx.c **** 
 104:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 105:../src/system_stm32f4xx.c ****   * @{
 106:../src/system_stm32f4xx.c ****   */
 107:../src/system_stm32f4xx.c **** 
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 4


 108:../src/system_stm32f4xx.c **** /**
 109:../src/system_stm32f4xx.c ****   * @}
 110:../src/system_stm32f4xx.c ****   */
 111:../src/system_stm32f4xx.c **** 
 112:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 113:../src/system_stm32f4xx.c ****   * @{
 114:../src/system_stm32f4xx.c ****   */
 115:../src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 116:../src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 117:../src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 118:../src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 119:../src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 120:../src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 121:../src/system_stm32f4xx.c ****                variable is updated automatically.
 122:../src/system_stm32f4xx.c ****   */
 123:../src/system_stm32f4xx.c **** uint32_t SystemCoreClock = 16000000;
 124:../src/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 125:../src/system_stm32f4xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 126:../src/system_stm32f4xx.c **** /**
 127:../src/system_stm32f4xx.c ****   * @}
 128:../src/system_stm32f4xx.c ****   */
 129:../src/system_stm32f4xx.c **** 
 130:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 131:../src/system_stm32f4xx.c ****   * @{
 132:../src/system_stm32f4xx.c ****   */
 133:../src/system_stm32f4xx.c **** 
 134:../src/system_stm32f4xx.c **** /**
 135:../src/system_stm32f4xx.c ****   * @}
 136:../src/system_stm32f4xx.c ****   */
 137:../src/system_stm32f4xx.c **** 
 138:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 139:../src/system_stm32f4xx.c ****   * @{
 140:../src/system_stm32f4xx.c ****   */
 141:../src/system_stm32f4xx.c **** 
 142:../src/system_stm32f4xx.c **** /**
 143:../src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 144:../src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory
 145:../src/system_stm32f4xx.c ****   *         configuration.
 146:../src/system_stm32f4xx.c ****   * @param  None
 147:../src/system_stm32f4xx.c ****   * @retval None
 148:../src/system_stm32f4xx.c ****   */
 149:../src/system_stm32f4xx.c **** void SystemInit(void)
 150:../src/system_stm32f4xx.c **** {
  72              		.loc 1 150 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 7, -4
  81 0002 00AF     		add	r7, sp, #0
  82              	.LCFI1:
  83              		.cfi_def_cfa_register 7
 151:../src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 152:../src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 5


 153:../src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  84              		.loc 1 153 0
  85 0004 164A     		ldr	r2, .L2
  86 0006 164B     		ldr	r3, .L2
  87 0008 D3F88830 		ldr	r3, [r3, #136]
  88 000c 43F47003 		orr	r3, r3, #15728640
  89 0010 C2F88830 		str	r3, [r2, #136]
 154:../src/system_stm32f4xx.c ****   #endif
 155:../src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 156:../src/system_stm32f4xx.c ****   /* Set HSION bit */
 157:../src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  90              		.loc 1 157 0
  91 0014 134A     		ldr	r2, .L2+4
  92 0016 134B     		ldr	r3, .L2+4
  93 0018 1B68     		ldr	r3, [r3]
  94 001a 43F00103 		orr	r3, r3, #1
  95 001e 1360     		str	r3, [r2]
 158:../src/system_stm32f4xx.c **** 
 159:../src/system_stm32f4xx.c ****   /* Reset CFGR register */
 160:../src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  96              		.loc 1 160 0
  97 0020 104B     		ldr	r3, .L2+4
  98 0022 0022     		movs	r2, #0
  99 0024 9A60     		str	r2, [r3, #8]
 161:../src/system_stm32f4xx.c **** 
 162:../src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 163:../src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 100              		.loc 1 163 0
 101 0026 0F4A     		ldr	r2, .L2+4
 102 0028 0E4B     		ldr	r3, .L2+4
 103 002a 1B68     		ldr	r3, [r3]
 104 002c 23F08473 		bic	r3, r3, #17301504
 105 0030 23F48033 		bic	r3, r3, #65536
 106 0034 1360     		str	r3, [r2]
 164:../src/system_stm32f4xx.c **** 
 165:../src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 166:../src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 107              		.loc 1 166 0
 108 0036 0B4B     		ldr	r3, .L2+4
 109 0038 0B4A     		ldr	r2, .L2+8
 110 003a 5A60     		str	r2, [r3, #4]
 167:../src/system_stm32f4xx.c **** 
 168:../src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 169:../src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 111              		.loc 1 169 0
 112 003c 094A     		ldr	r2, .L2+4
 113 003e 094B     		ldr	r3, .L2+4
 114 0040 1B68     		ldr	r3, [r3]
 115 0042 23F48023 		bic	r3, r3, #262144
 116 0046 1360     		str	r3, [r2]
 170:../src/system_stm32f4xx.c **** 
 171:../src/system_stm32f4xx.c ****   /* Disable all interrupts */
 172:../src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 117              		.loc 1 172 0
 118 0048 064B     		ldr	r3, .L2+4
 119 004a 0022     		movs	r2, #0
 120 004c DA60     		str	r2, [r3, #12]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 6


 173:../src/system_stm32f4xx.c **** 
 174:../src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 175:../src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 176:../src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 177:../src/system_stm32f4xx.c **** #else
 178:../src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 121              		.loc 1 178 0
 122 004e 044B     		ldr	r3, .L2
 123 0050 4FF00062 		mov	r2, #134217728
 124 0054 9A60     		str	r2, [r3, #8]
 179:../src/system_stm32f4xx.c **** #endif
 180:../src/system_stm32f4xx.c **** }
 125              		.loc 1 180 0
 126 0056 BD46     		mov	sp, r7
 127              	.LCFI2:
 128              		.cfi_def_cfa_register 13
 129              		@ sp needed
 130 0058 5DF8047B 		ldr	r7, [sp], #4
 131              	.LCFI3:
 132              		.cfi_restore 7
 133              		.cfi_def_cfa_offset 0
 134 005c 7047     		bx	lr
 135              	.L3:
 136 005e 00BF     		.align	2
 137              	.L2:
 138 0060 00ED00E0 		.word	-536810240
 139 0064 00380240 		.word	1073887232
 140 0068 10300024 		.word	603992080
 141              		.cfi_endproc
 142              	.LFE130:
 144              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 145              		.align	2
 146              		.global	SystemCoreClockUpdate
 147              		.thumb
 148              		.thumb_func
 150              	SystemCoreClockUpdate:
 151              	.LFB131:
 181:../src/system_stm32f4xx.c **** 
 182:../src/system_stm32f4xx.c **** /**
 183:../src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 184:../src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 185:../src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 186:../src/system_stm32f4xx.c ****   *         other parameters.
 187:../src/system_stm32f4xx.c ****   *
 188:../src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 189:../src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 190:../src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.
 191:../src/system_stm32f4xx.c ****   *
 192:../src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real
 193:../src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 194:../src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 195:../src/system_stm32f4xx.c ****   *
 196:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 197:../src/system_stm32f4xx.c ****   *
 198:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 199:../src/system_stm32f4xx.c ****   *
 200:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 7


 201:../src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 202:../src/system_stm32f4xx.c ****   *
 203:../src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 204:../src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 205:../src/system_stm32f4xx.c ****   *             in voltage and temperature.
 206:../src/system_stm32f4xx.c ****   *
 207:../src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 208:../src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 209:../src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 210:../src/system_stm32f4xx.c ****   *              may have wrong result.
 211:../src/system_stm32f4xx.c ****   *
 212:../src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 213:../src/system_stm32f4xx.c ****   *           value for HSE crystal.
 214:../src/system_stm32f4xx.c ****   *
 215:../src/system_stm32f4xx.c ****   * @param  None
 216:../src/system_stm32f4xx.c ****   * @retval None
 217:../src/system_stm32f4xx.c ****   */
 218:../src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 219:../src/system_stm32f4xx.c **** {
 152              		.loc 1 219 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 24
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 0000 80B4     		push	{r7}
 158              	.LCFI4:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 87B0     		sub	sp, sp, #28
 162              	.LCFI5:
 163              		.cfi_def_cfa_offset 32
 164 0004 00AF     		add	r7, sp, #0
 165              	.LCFI6:
 166              		.cfi_def_cfa_register 7
 220:../src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 167              		.loc 1 220 0
 168 0006 0023     		movs	r3, #0
 169 0008 3B61     		str	r3, [r7, #16]
 170 000a 0023     		movs	r3, #0
 171 000c 7B61     		str	r3, [r7, #20]
 172 000e 0223     		movs	r3, #2
 173 0010 FB60     		str	r3, [r7, #12]
 174 0012 0023     		movs	r3, #0
 175 0014 BB60     		str	r3, [r7, #8]
 176 0016 0223     		movs	r3, #2
 177 0018 7B60     		str	r3, [r7, #4]
 221:../src/system_stm32f4xx.c **** 
 222:../src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 223:../src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 178              		.loc 1 223 0
 179 001a 324B     		ldr	r3, .L13
 180 001c 9B68     		ldr	r3, [r3, #8]
 181 001e 03F00C03 		and	r3, r3, #12
 182 0022 3B61     		str	r3, [r7, #16]
 224:../src/system_stm32f4xx.c **** 
 225:../src/system_stm32f4xx.c ****   switch (tmp)
 183              		.loc 1 225 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 8


 184 0024 3B69     		ldr	r3, [r7, #16]
 185 0026 042B     		cmp	r3, #4
 186 0028 07D0     		beq	.L6
 187 002a 082B     		cmp	r3, #8
 188 002c 09D0     		beq	.L7
 189 002e 002B     		cmp	r3, #0
 190 0030 3FD1     		bne	.L12
 226:../src/system_stm32f4xx.c ****   {
 227:../src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 228:../src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 191              		.loc 1 228 0
 192 0032 2D4B     		ldr	r3, .L13+4
 193 0034 2D4A     		ldr	r2, .L13+8
 194 0036 1A60     		str	r2, [r3]
 229:../src/system_stm32f4xx.c ****       break;
 195              		.loc 1 229 0
 196 0038 3FE0     		b	.L9
 197              	.L6:
 230:../src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 231:../src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 198              		.loc 1 231 0
 199 003a 2B4B     		ldr	r3, .L13+4
 200 003c 2C4A     		ldr	r2, .L13+12
 201 003e 1A60     		str	r2, [r3]
 232:../src/system_stm32f4xx.c ****       break;
 202              		.loc 1 232 0
 203 0040 3BE0     		b	.L9
 204              	.L7:
 233:../src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 234:../src/system_stm32f4xx.c **** 
 235:../src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 236:../src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 237:../src/system_stm32f4xx.c ****          */
 238:../src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 205              		.loc 1 238 0
 206 0042 284B     		ldr	r3, .L13
 207 0044 5B68     		ldr	r3, [r3, #4]
 208 0046 03F48003 		and	r3, r3, #4194304
 209 004a 9B0D     		lsrs	r3, r3, #22
 210 004c BB60     		str	r3, [r7, #8]
 239:../src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 211              		.loc 1 239 0
 212 004e 254B     		ldr	r3, .L13
 213 0050 5B68     		ldr	r3, [r3, #4]
 214 0052 03F03F03 		and	r3, r3, #63
 215 0056 7B60     		str	r3, [r7, #4]
 240:../src/system_stm32f4xx.c **** 
 241:../src/system_stm32f4xx.c ****       if (pllsource != 0)
 216              		.loc 1 241 0
 217 0058 BB68     		ldr	r3, [r7, #8]
 218 005a 002B     		cmp	r3, #0
 219 005c 0DD0     		beq	.L10
 242:../src/system_stm32f4xx.c ****       {
 243:../src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 244:../src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 220              		.loc 1 244 0
 221 005e 244A     		ldr	r2, .L13+12
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 9


 222 0060 7B68     		ldr	r3, [r7, #4]
 223 0062 B2FBF3F2 		udiv	r2, r2, r3
 224 0066 1F4B     		ldr	r3, .L13
 225 0068 5968     		ldr	r1, [r3, #4]
 226 006a 47F6C073 		movw	r3, #32704
 227 006e 0B40     		ands	r3, r3, r1
 228 0070 9B09     		lsrs	r3, r3, #6
 229 0072 03FB02F3 		mul	r3, r3, r2
 230 0076 7B61     		str	r3, [r7, #20]
 231 0078 0CE0     		b	.L11
 232              	.L10:
 245:../src/system_stm32f4xx.c ****       }
 246:../src/system_stm32f4xx.c ****       else
 247:../src/system_stm32f4xx.c ****       {
 248:../src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 249:../src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 233              		.loc 1 249 0
 234 007a 1C4A     		ldr	r2, .L13+8
 235 007c 7B68     		ldr	r3, [r7, #4]
 236 007e B2FBF3F2 		udiv	r2, r2, r3
 237 0082 184B     		ldr	r3, .L13
 238 0084 5968     		ldr	r1, [r3, #4]
 239 0086 47F6C073 		movw	r3, #32704
 240 008a 0B40     		ands	r3, r3, r1
 241 008c 9B09     		lsrs	r3, r3, #6
 242 008e 03FB02F3 		mul	r3, r3, r2
 243 0092 7B61     		str	r3, [r7, #20]
 244              	.L11:
 250:../src/system_stm32f4xx.c ****       }
 251:../src/system_stm32f4xx.c **** 
 252:../src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 245              		.loc 1 252 0
 246 0094 134B     		ldr	r3, .L13
 247 0096 5B68     		ldr	r3, [r3, #4]
 248 0098 03F44033 		and	r3, r3, #196608
 249 009c 1B0C     		lsrs	r3, r3, #16
 250 009e 0133     		adds	r3, r3, #1
 251 00a0 5B00     		lsls	r3, r3, #1
 252 00a2 FB60     		str	r3, [r7, #12]
 253:../src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 253              		.loc 1 253 0
 254 00a4 7A69     		ldr	r2, [r7, #20]
 255 00a6 FB68     		ldr	r3, [r7, #12]
 256 00a8 B2FBF3F3 		udiv	r3, r2, r3
 257 00ac 0E4A     		ldr	r2, .L13+4
 258 00ae 1360     		str	r3, [r2]
 254:../src/system_stm32f4xx.c ****       break;
 259              		.loc 1 254 0
 260 00b0 03E0     		b	.L9
 261              	.L12:
 255:../src/system_stm32f4xx.c ****     default:
 256:../src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 262              		.loc 1 256 0
 263 00b2 0D4B     		ldr	r3, .L13+4
 264 00b4 0D4A     		ldr	r2, .L13+8
 265 00b6 1A60     		str	r2, [r3]
 257:../src/system_stm32f4xx.c ****       break;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 10


 266              		.loc 1 257 0
 267 00b8 00BF     		nop
 268              	.L9:
 258:../src/system_stm32f4xx.c ****   }
 259:../src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 260:../src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 261:../src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 269              		.loc 1 261 0
 270 00ba 0A4B     		ldr	r3, .L13
 271 00bc 9B68     		ldr	r3, [r3, #8]
 272 00be 03F0F003 		and	r3, r3, #240
 273 00c2 1B09     		lsrs	r3, r3, #4
 274 00c4 0B4A     		ldr	r2, .L13+16
 275 00c6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 276 00c8 3B61     		str	r3, [r7, #16]
 262:../src/system_stm32f4xx.c ****   /* HCLK frequency */
 263:../src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 277              		.loc 1 263 0
 278 00ca 074B     		ldr	r3, .L13+4
 279 00cc 1A68     		ldr	r2, [r3]
 280 00ce 3B69     		ldr	r3, [r7, #16]
 281 00d0 22FA03F3 		lsr	r3, r2, r3
 282 00d4 044A     		ldr	r2, .L13+4
 283 00d6 1360     		str	r3, [r2]
 264:../src/system_stm32f4xx.c **** }
 284              		.loc 1 264 0
 285 00d8 1C37     		adds	r7, r7, #28
 286              	.LCFI7:
 287              		.cfi_def_cfa_offset 4
 288 00da BD46     		mov	sp, r7
 289              	.LCFI8:
 290              		.cfi_def_cfa_register 13
 291              		@ sp needed
 292 00dc 5DF8047B 		ldr	r7, [sp], #4
 293              	.LCFI9:
 294              		.cfi_restore 7
 295              		.cfi_def_cfa_offset 0
 296 00e0 7047     		bx	lr
 297              	.L14:
 298 00e2 00BF     		.align	2
 299              	.L13:
 300 00e4 00380240 		.word	1073887232
 301 00e8 00000000 		.word	SystemCoreClock
 302 00ec 0024F400 		.word	16000000
 303 00f0 00127A00 		.word	8000000
 304 00f4 00000000 		.word	AHBPrescTable
 305              		.cfi_endproc
 306              	.LFE131:
 308              		.text
 309              	.Letext0:
 310              		.file 2 "/Users/adambujak/Workspace/whisper_system/.dependencies/gcc-arm-none-eabi-4_9-2015q3/arm-
 311              		.file 3 "/Users/adambujak/Workspace/whisper_system/.dependencies/gcc-arm-none-eabi-4_9-2015q3/arm-
 312              		.file 4 "../../../../dependencies/stm/STM32F4_Cube/Drivers/CMSIS/Include/core_cm4.h"
 313              		.file 5 "../../../../dependencies/stm/STM32F4_Cube/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:25     .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:22     .data.SystemCoreClock:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:32     .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:29     .rodata.AHBPrescTable:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:54     .rodata.APBPrescTable:0000000000000000 APBPrescTable
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:51     .rodata.APBPrescTable:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:64     .text.SystemInit:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:69     .text.SystemInit:0000000000000000 SystemInit
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:138    .text.SystemInit:0000000000000060 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:145    .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:150    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s:300    .text.SystemCoreClockUpdate:00000000000000e4 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.12d3039ce5a2552d46df25be77b64279
                           .group:0000000000000000 wm4.stm32f4xx.h.39.1b09cc4be5834e402f47d342f5416be4
                           .group:0000000000000000 wm4.stm32f412zx.h.35.d9913ab15c3cc42510cd85c75dd3c4eb
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.f42444deefab66ffa141b9b9fddb57a3
                           .group:0000000000000000 wm4.core_cm4.h.174.059a5e001a9e729091d1407208e93224
                           .group:0000000000000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:0000000000000000 wm4.stm32f412zx.h.838.7f7dacbfe2e2c88ca5202f260290d6c1
                           .group:0000000000000000 wm4.stm32f4xx.h.196.23c4e4a5d465a121178374b8f4182f7c
                           .group:0000000000000000 wm4.stm32f4xx_hal_conf.h.2.af8b2ca6b03807d43d9ddf9698d1361c
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.394d12941f5a0482dbe3c36ee9e57b2b
                           .group:0000000000000000 wm4.stddef.h.39.c744ceb84abf2f8351653f0e2622da1c
                           .group:0000000000000000 wm4.stm32f4xx_hal_def.h.58.2d2c85d5b9693a63e90566b806e8a752
                           .group:0000000000000000 wm4.stm32f4xx_hal_rcc_ex.h.22.fe15f7aa872c0ff0051d1df0fdd88661
                           .group:0000000000000000 wm4.stm32f4xx_hal_rcc.h.108.0c18a3cfc2dd91bdf92470b4bd0ea1b5
                           .group:0000000000000000 wm4.stm32f4xx_hal_exti.h.22.b6735b42221f61fdbfd800fa51550a85
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio.h.22.be2c6bcf9722096ea8f49a41bf6aa50c
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio_ex.h.22.5fac61f4372beb17c6941adb263493e1
                           .group:0000000000000000 wm4.stm32f4xx_hal_gpio.h.264.978ac12eab1d3b3400b35b8c427e2c33
                           .group:0000000000000000 wm4.stm32f4xx_hal_dma.h.22.fffce20ac9119c50557659c75e75ab1c
                           .group:0000000000000000 wm4.stm32f4xx_hal_dma.h.721.a1e57ffbc615f926e6509c5acc65e492
                           .group:0000000000000000 wm4.stm32f4xx_hal_cortex.h.22.e6aa3b847b5388be63c32d1f9e696ef7
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash.h.22.31b301be2655c3eb8583e51c8231544a
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash_ex.h.22.5016bda819f6a480c96be63516c36ab2
                           .group:0000000000000000 wm4.stm32f4xx_hal_flash.h.363.51efdf0f6c88f683efb89d7cc95cc1be
                           .group:0000000000000000 wm4.stm32f4xx_ll_fsmc.h.22.ed2b494a9a7d206deda6c53e626a4601
                           .group:0000000000000000 wm4.stm32f4xx_hal_i2c.h.22.7a518225417837eb3d0550cc95fa0a57
                           .group:0000000000000000 wm4.stm32f4xx_hal_i2c_ex.h.22.a90c9435159b7eaef7dc679da6295e14
                           .group:0000000000000000 wm4.stm32f4xx_hal_i2c.h.644.9d0aaa0659558fa97b5b5ac32630da6a
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr.h.22.2c27d93ae187efe3a73816f03a329970
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr_ex.h.22.a735ba4f49c5b2574a98d58f3b7ae925
                           .group:0000000000000000 wm4.stm32f4xx_hal_pwr.h.337.60b43975c84527a23cb6994b23165a5e
                           .group:0000000000000000 wm4.stm32f4xx_hal_spi.h.22.bc4a13b7a7ee3429db720a8d37eb1e5e
                           .group:0000000000000000 wm4.stm32f4xx_hal_tim.h.22.9c16860ec2cc7f3d941608a8f521bc4a
                           .group:0000000000000000 wm4.stm32f4xx_hal_tim_ex.h.22.2fde471485fd197eebc7c86251149c11
                           .group:0000000000000000 wm4.stm32f4xx_hal_uart.h.22.1edfd0da9670bd23245390d2a3da576d
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccDTAb6F.s 			page 12


                           .group:0000000000000000 wm4.stm32f4xx_hal.h.72.a5a58188aa461a0614f1e58e159c7840

NO UNDEFINED SYMBOLS
