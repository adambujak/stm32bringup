ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"port.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.data.uxCriticalNesting,"aw",%progbits
  21              		.align	2
  24              	uxCriticalNesting:
  25 0000 AAAAAAAA 		.word	-1431655766
  26              		.section	.bss.ucMaxSysCallPriority,"aw",%nobits
  29              	ucMaxSysCallPriority:
  30 0000 00       		.space	1
  31              		.section	.bss.ulMaxPRIGROUPValue,"aw",%nobits
  32              		.align	2
  35              	ulMaxPRIGROUPValue:
  36 0000 00000000 		.space	4
  37              		.section	.rodata.pcInterruptPriorityRegisters,"a",%progbits
  38              		.align	2
  41              	pcInterruptPriorityRegisters:
  42 0000 F0E300E0 		.word	-536812560
  43              		.section	.text.pxPortInitialiseStack,"ax",%progbits
  44              		.align	2
  45              		.global	pxPortInitialiseStack
  46              		.thumb
  47              		.thumb_func
  49              	pxPortInitialiseStack:
  50              	.LFB5:
  51              		.file 1 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/p
   1:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
   2:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS Kernel V10.4.1
   3:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
   5:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * the Software without restriction, including without limitation the rights to
   8:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * subject to the following conditions:
  11:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  12:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * copies or substantial portions of the Software.
  14:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  15:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 2


  16:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  22:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * https://www.FreeRTOS.org
  23:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * https://github.com/FreeRTOS
  24:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  25:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
  26:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  27:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------
  28:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** * Implementation of functions defined in portable.h for the ARM CM4F port.
  29:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** *----------------------------------------------------------*/
  30:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  31:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Scheduler includes. */
  32:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #include "FreeRTOS.h"
  33:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #include "task.h"
  34:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  35:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifndef __VFP_FP__
  36:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #error This port can only be used when the project options are configured to enable hardware fl
  37:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
  38:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  39:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  40:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #define configSYSTICK_CLOCK_HZ      configCPU_CLOCK_HZ
  41:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Ensure the SysTick is clocked at the same frequency as the core. */
  42:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #define portNVIC_SYSTICK_CLK_BIT    ( 1UL << 2UL )
  43:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #else
  44:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  45:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* The way the SysTick is clocked is not modified in case it is not the same
  46:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * as the core. */
  47:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #define portNVIC_SYSTICK_CLK_BIT    ( 0 )
  48:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
  49:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  50:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the core.  Registers first... */
  51:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CTRL_REG             ( *( ( volatile uint32_t * ) 0xe000e010 ) )
  52:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_LOAD_REG             ( *( ( volatile uint32_t * ) 0xe000e014 ) )
  53:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG    ( *( ( volatile uint32_t * ) 0xe000e018 ) )
  54:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SHPR3_REG                    ( *( ( volatile uint32_t * ) 0xe000ed20 ) )
  55:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* ...then bits in the registers. */
  56:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_INT_BIT              ( 1UL << 1UL )
  57:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT           ( 1UL << 0UL )
  58:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT       ( 1UL << 16UL )
  59:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSVCLEAR_BIT              ( 1UL << 27UL )
  60:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT       ( 1UL << 25UL )
  61:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  62:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants used to detect a Cortex-M7 r0p1 core, which should use the ARM_CM7
  63:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * r0p1 port. */
  64:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCPUID                             ( *( ( volatile uint32_t * ) 0xE000ed00 ) )
  65:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p1_ID                 ( 0x410FC271UL )
  66:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p0_ID                 ( 0x410FC270UL )
  67:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  68:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSV_PRI                   ( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) <<
  69:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_PRI                  ( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) <<
  70:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  71:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to check the validity of an interrupt priority. */
  72:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER       ( 16 )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 3


  73:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16       ( 0xE000E3F0 )
  74:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portAIRCR_REG                         ( *( ( volatile uint32_t * ) 0xE000ED0C ) )
  75:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_8_BIT_VALUE                   ( ( uint8_t ) 0xff )
  76:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portTOP_BIT_OF_BYTE                   ( ( uint8_t ) 0x80 )
  77:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_PRIGROUP_BITS                 ( ( uint8_t ) 7 )
  78:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portPRIORITY_GROUP_MASK               ( 0x07UL << 8UL )
  79:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portPRIGROUP_SHIFT                    ( 8UL )
  80:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  81:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  82:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portVECTACTIVE_MASK                   ( 0xFFUL )
  83:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  84:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the VFP. */
  85:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portFPCCR                             ( ( volatile uint32_t * ) 0xe000ef34 ) /* Floating po
  86:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portASPEN_AND_LSPEN_BITS              ( 0x3UL << 30UL )
  87:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  88:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to set up the initial stack. */
  89:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_XPSR                      ( 0x01000000 )
  90:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_EXC_RETURN                ( 0xfffffffd )
  91:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  92:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* The systick is a 24-bit counter. */
  93:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_24_BIT_NUMBER                 ( 0xffffffUL )
  94:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  95:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  96:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  97:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portSTART_ADDRESS_MASK                ( ( StackType_t ) 0xfffffffeUL )
  98:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  99:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
 100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * occurred while the SysTick counter is stopped during tickless idle
 101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * calculations. */
 102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMISSED_COUNTS_FACTOR              ( 45UL )
 103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
 105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * prvTaskExitError() in case it messes up unwinding of the stack in the
 106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * debugger. */
 107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifdef configTASK_RETURN_ADDRESS
 108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #define portTASK_RETURN_ADDRESS    configTASK_RETURN_ADDRESS
 109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #else
 110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #define portTASK_RETURN_ADDRESS    prvTaskExitError
 111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
 112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * file is weak to allow application writers to change the timer used to
 116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * generate the tick interrupt.
 117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSetupTimerInterrupt( void );
 119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Exception handlers.
 122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void ) __attribute__( ( naked ) );
 124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void );
 125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void ) __attribute__( ( naked ) );
 126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 4


 130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void ) __attribute__( ( naked ) );
 131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Function to enable the VFP.
 134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void ) __attribute__( ( naked ) );
 136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void );
 141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * variable. */
 146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The number of SysTick increments that make up one tick period.
 150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     static uint32_t ulTimerCountsForOneTick = 0;
 153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * 24 bit resolution of the SysTick timer.
 158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     static uint32_t xMaximumPossibleSuppressedTicks = 0;
 161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * power functionality only.
 166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     static uint32_t ulStoppedTimerCompensation = 0;
 169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if ( configASSERT_DEFINED == 1 )
 177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     static uint8_t ucMaxSysCallPriority = 0;
 178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     static uint32_t ulMaxPRIGROUPValue = 0;
 179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t *
 180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configASSERT_DEFINED */
 181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 5


 187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
 188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                                      TaskFunction_t pxCode,
 189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                                      void * pvParameters )
 190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
  52              		.loc 1 190 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 16
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57 0000 80B4     		push	{r7}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 4
  60              		.cfi_offset 7, -4
  61 0002 85B0     		sub	sp, sp, #20
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 24
  64 0004 00AF     		add	r7, sp, #0
  65              	.LCFI2:
  66              		.cfi_def_cfa_register 7
  67 0006 F860     		str	r0, [r7, #12]
  68 0008 B960     		str	r1, [r7, #8]
  69 000a 7A60     		str	r2, [r7, #4]
 191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Simulate the stack frame as it would be created by a context switch
 192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * interrupt. */
 193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Offset added to account for the way the MCU uses the stack on entry/exit
 195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * of interrupts, and to ensure alignment. */
 196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
  70              		.loc 1 196 0
  71 000c FB68     		ldr	r3, [r7, #12]
  72 000e 043B     		subs	r3, r3, #4
  73 0010 FB60     		str	r3, [r7, #12]
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = portINITIAL_XPSR;                                    /* xPSR */
  74              		.loc 1 198 0
  75 0012 FB68     		ldr	r3, [r7, #12]
  76 0014 4FF08072 		mov	r2, #16777216
  77 0018 1A60     		str	r2, [r3]
 199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
  78              		.loc 1 199 0
  79 001a FB68     		ldr	r3, [r7, #12]
  80 001c 043B     		subs	r3, r3, #4
  81 001e FB60     		str	r3, [r7, #12]
 200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK; /* PC */
  82              		.loc 1 200 0
  83 0020 BB68     		ldr	r3, [r7, #8]
  84 0022 23F00102 		bic	r2, r3, #1
  85 0026 FB68     		ldr	r3, [r7, #12]
  86 0028 1A60     		str	r2, [r3]
 201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
  87              		.loc 1 201 0
  88 002a FB68     		ldr	r3, [r7, #12]
  89 002c 043B     		subs	r3, r3, #4
  90 002e FB60     		str	r3, [r7, #12]
 202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;             /* LR */
  91              		.loc 1 202 0
  92 0030 0C4A     		ldr	r2, .L3
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 6


  93 0032 FB68     		ldr	r3, [r7, #12]
  94 0034 1A60     		str	r2, [r3]
 203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Save code space by skipping register initialisation. */
 205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack -= 5;                            /* R12, R3, R2 and R1. */
  95              		.loc 1 205 0
  96 0036 FB68     		ldr	r3, [r7, #12]
  97 0038 143B     		subs	r3, r3, #20
  98 003a FB60     		str	r3, [r7, #12]
 206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( StackType_t ) pvParameters; /* R0 */
  99              		.loc 1 206 0
 100 003c 7A68     		ldr	r2, [r7, #4]
 101 003e FB68     		ldr	r3, [r7, #12]
 102 0040 1A60     		str	r2, [r3]
 207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* A save method is being used that requires each task to maintain its
 209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * own exec return value. */
 210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 103              		.loc 1 210 0
 104 0042 FB68     		ldr	r3, [r7, #12]
 105 0044 043B     		subs	r3, r3, #4
 106 0046 FB60     		str	r3, [r7, #12]
 211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = portINITIAL_EXC_RETURN;
 107              		.loc 1 211 0
 108 0048 FB68     		ldr	r3, [r7, #12]
 109 004a 6FF00202 		mvn	r2, #2
 110 004e 1A60     		str	r2, [r3]
 212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack -= 8; /* R11, R10, R9, R8, R7, R6, R5 and R4. */
 111              		.loc 1 213 0
 112 0050 FB68     		ldr	r3, [r7, #12]
 113 0052 203B     		subs	r3, r3, #32
 114 0054 FB60     		str	r3, [r7, #12]
 214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     return pxTopOfStack;
 115              		.loc 1 215 0
 116 0056 FB68     		ldr	r3, [r7, #12]
 216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 117              		.loc 1 216 0
 118 0058 1846     		mov	r0, r3
 119 005a 1437     		adds	r7, r7, #20
 120              	.LCFI3:
 121              		.cfi_def_cfa_offset 4
 122 005c BD46     		mov	sp, r7
 123              	.LCFI4:
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 005e 5DF8047B 		ldr	r7, [sp], #4
 127              	.LCFI5:
 128              		.cfi_restore 7
 129              		.cfi_def_cfa_offset 0
 130 0062 7047     		bx	lr
 131              	.L4:
 132              		.align	2
 133              	.L3:
 134 0064 00000000 		.word	prvTaskExitError
 135              		.cfi_endproc
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 7


 136              	.LFE5:
 138              		.section	.text.prvTaskExitError,"ax",%progbits
 139              		.align	2
 140              		.thumb
 141              		.thumb_func
 143              	prvTaskExitError:
 144              	.LFB6:
 217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void )
 220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 145              		.loc 1 220 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 16
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150 0000 80B4     		push	{r7}
 151              	.LCFI6:
 152              		.cfi_def_cfa_offset 4
 153              		.cfi_offset 7, -4
 154 0002 85B0     		sub	sp, sp, #20
 155              	.LCFI7:
 156              		.cfi_def_cfa_offset 24
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI8:
 159              		.cfi_def_cfa_register 7
 221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     volatile uint32_t ulDummy = 0;
 160              		.loc 1 221 0
 161 0006 0023     		movs	r3, #0
 162 0008 7B60     		str	r3, [r7, #4]
 222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* A function that implements a task must not exit or attempt to return to
 224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * its caller as there is nothing to return to.  If a task wants to exit it
 225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * should instead call vTaskDelete( NULL ).
 226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      *
 227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * Artificially force an assert() to be triggered if configASSERT() is
 228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * defined, then stop here so application writers can catch the error. */
 229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     configASSERT( uxCriticalNesting == ~0UL );
 163              		.loc 1 229 0
 164 000a 104B     		ldr	r3, .L9
 165 000c 1B68     		ldr	r3, [r3]
 166 000e B3F1FF3F 		cmp	r3, #-1
 167 0012 09D0     		beq	.L6
 168              	.LBB31:
 169              	.LBB32:
 170              		.file 2 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/p
   1:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.4.1
   3:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 8


  12:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  23:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  24:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  31:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  33:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  34:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  35:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  48:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  49:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  50:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  51:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  52:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  54:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  57:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  61:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  63:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  64:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  68:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 9


  69:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  70:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  78:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  79:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  80:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  81:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  82:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  85:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
  90:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  91:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  96:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  98:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
  99:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 100:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 107:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 108:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 109:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 112:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 116:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 117:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 121:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 122:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 123:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 124:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 10


 126:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 127:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 128:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 130:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 131:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 133:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 134:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 135:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 137:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 138:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 139:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 140:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 141:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 144:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 145:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 150:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 158:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 161:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 162:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 163:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 164:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 166:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 167:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 168:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 170:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 173:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 174:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 175:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 177:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 178:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 179:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 180:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 181:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 182:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 11


 183:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         else
 184:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 185:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 186:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 187:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 188:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 189:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 190:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 192:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 195:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
 196:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 171              		.loc 2 197 0 discriminator 1
 172              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 173 0014 4FF05003 			mov r3, #80												
 174 0018 83F31188 		msr basepri, r3											
 175 001c BFF36F8F 		isb														
 176 0020 BFF34F8F 		dsb														
 177              	
 178              	@ 0 "" 2
 179              		.thumb
 180 0024 FB60     		str	r3, [r7, #12]
 181              	.L7:
 182              	.LBE32:
 183              	.LBE31:
 184              		.loc 1 229 0 discriminator 1
 185 0026 FEE7     		b	.L7
 186              	.L6:
 187              	.LBB33:
 188              	.LBB34:
 189              		.loc 2 197 0
 190              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 191 0028 4FF05003 			mov r3, #80												
 192 002c 83F31188 		msr basepri, r3											
 193 0030 BFF36F8F 		isb														
 194 0034 BFF34F8F 		dsb														
 195              	
 196              	@ 0 "" 2
 197              		.thumb
 198 0038 BB60     		str	r3, [r7, #8]
 199              	.LBE34:
 200              	.LBE33:
 230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portDISABLE_INTERRUPTS();
 231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 232:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     while( ulDummy == 0 )
 201              		.loc 1 232 0
 202 003a 00BF     		nop
 203              	.L8:
 204              		.loc 1 232 0 is_stmt 0 discriminator 1
 205 003c 7B68     		ldr	r3, [r7, #4]
 206 003e 002B     		cmp	r3, #0
 207 0040 FCD0     		beq	.L8
 233:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     {
 234:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* This file calls prvTaskExitError() after the scheduler has been
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 12


 235:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * started to remove a compiler warning about the function being defined
 236:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * but never called.  ulDummy is used purely to quieten other warnings
 237:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * about code appearing after this function is called - making ulDummy
 238:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * volatile makes the compiler think the function could return and
 239:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * therefore not output an 'unreachable code' warning for code that appears
 240:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * after it. */
 241:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     }
 242:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 208              		.loc 1 242 0 is_stmt 1
 209 0042 1437     		adds	r7, r7, #20
 210              	.LCFI9:
 211              		.cfi_def_cfa_offset 4
 212 0044 BD46     		mov	sp, r7
 213              	.LCFI10:
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 0046 5DF8047B 		ldr	r7, [sp], #4
 217              	.LCFI11:
 218              		.cfi_restore 7
 219              		.cfi_def_cfa_offset 0
 220 004a 7047     		bx	lr
 221              	.L10:
 222              		.align	2
 223              	.L9:
 224 004c 00000000 		.word	uxCriticalNesting
 225              		.cfi_endproc
 226              	.LFE6:
 228              		.section	.text.SVC_Handler,"ax",%progbits
 229              		.align	2
 230              		.global	SVC_Handler
 231              		.thumb
 232              		.thumb_func
 234              	SVC_Handler:
 235              	.LFB7:
 243:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 244:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 245:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void )
 246:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 236              		.loc 1 246 0
 237              		.cfi_startproc
 238              		@ Naked Function: prologue and epilogue provided by programmer.
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 247:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     __asm volatile (
 241              		.loc 1 247 0
 242              	@ 247 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 243 0000 074B     			ldr	r3, pxCurrentTCBConst2		
 244 0002 1968     		ldr r1, [r3]					
 245 0004 0868     		ldr r0, [r1]					
 246 0006 B0E8F04F 		ldmia r0!, {r4-r11, r14}		
 247 000a 80F30988 		msr psp, r0						
 248 000e BFF36F8F 		isb								
 249 0012 4FF00000 		mov r0, #0 						
 250 0016 80F31188 		msr	basepri, r0					
 251 001a 7047     		bx r14							
 252              										
 253 001c AFF30080 		.align 4						
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 13


 254 0020 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 255              	
 256              	@ 0 "" 2
 248:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr	r3, pxCurrentTCBConst2		\n"/* Restore the context. */
 249:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr r1, [r3]					\n"/* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 250:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr r0, [r1]					\n"/* The first item in pxCurrentTCB is the task top of stack. */
 251:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldmia r0!, {r4-r11, r14}		\n"/* Pop the registers that are not automatically saved on exc
 252:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	msr psp, r0						\n"/* Restore the task stack pointer. */
 253:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	isb								\n"
 254:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	mov r0, #0 						\n"
 255:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	msr	basepri, r0					\n"
 256:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	bx r14							\n"
 257:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "									\n"
 258:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	.align 4						\n"
 259:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 260:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         );
 261:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 257              		.loc 1 261 0
 258              		.thumb
 259              		.cfi_endproc
 260              	.LFE7:
 262              		.section	.text.prvPortStartFirstTask,"ax",%progbits
 263              		.align	2
 264              		.thumb
 265              		.thumb_func
 267              	prvPortStartFirstTask:
 268              	.LFB8:
 262:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 263:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 264:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void )
 265:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 269              		.loc 1 265 0
 270              		.cfi_startproc
 271              		@ Naked Function: prologue and epilogue provided by programmer.
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 266:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Start the first task.  This also clears the bit that indicates the FPU is
 267:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * in use in case the FPU was used before the scheduler was started - which
 268:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * would otherwise result in the unnecessary leaving of space in the SVC stack
 269:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * for lazy saving of FPU registers. */
 270:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     __asm volatile (
 274              		.loc 1 270 0
 275              	@ 270 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 276 0000 0848     		 ldr r0, =0xE000ED08 	
 277 0002 0068     	 ldr r0, [r0] 			
 278 0004 0068     	 ldr r0, [r0] 			
 279 0006 80F30888 	 msr msp, r0			
 280 000a 4FF00000 	 mov r0, #0			
 281 000e 80F31488 	 msr control, r0		
 282 0012 62B6     	 cpsie i				
 283 0014 61B6     	 cpsie f				
 284 0016 BFF34F8F 	 dsb					
 285 001a BFF36F8F 	 isb					
 286 001e 00DF     	 svc 0					
 287 0020 00BF     	 nop					
 288 0022 000008ED 	 .ltorg				
 288      00E0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 14


 289              	
 290              	@ 0 "" 2
 271:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " ldr r0, =0xE000ED08 	\n"/* Use the NVIC offset register to locate the stack. */
 272:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " ldr r0, [r0] 			\n"
 273:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " ldr r0, [r0] 			\n"
 274:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " msr msp, r0			\n"/* Set the msp back to the start of the stack. */
 275:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " mov r0, #0			\n"/* Clear the bit that indicates the FPU is in use, see comment above. */
 276:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " msr control, r0		\n"
 277:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " cpsie i				\n"/* Globally enable interrupts. */
 278:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " cpsie f				\n"
 279:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " dsb					\n"
 280:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " isb					\n"
 281:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " svc 0					\n"/* System call to start first task. */
 282:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " nop					\n"
 283:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         " .ltorg				\n"
 284:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         );
 285:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 291              		.loc 1 285 0
 292              		.thumb
 293              		.cfi_endproc
 294              	.LFE8:
 296              		.section	.text.xPortStartScheduler,"ax",%progbits
 297              		.align	2
 298              		.global	xPortStartScheduler
 299              		.thumb
 300              		.thumb_func
 302              	xPortStartScheduler:
 303              	.LFB9:
 286:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 287:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 288:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 289:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 290:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 291:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** BaseType_t xPortStartScheduler( void )
 292:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 304              		.loc 1 292 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 24
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              	.LCFI12:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 86B0     		sub	sp, sp, #24
 314              	.LCFI13:
 315              		.cfi_def_cfa_offset 32
 316 0004 00AF     		add	r7, sp, #0
 317              	.LCFI14:
 318              		.cfi_def_cfa_register 7
 293:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 294:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * See https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 295:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 296:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 297:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* This port can be used on all revisions of the Cortex-M7 core other than
 298:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * the r0p1 parts.  r0p1 parts should use the port from the
 299:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * /source/portable/GCC/ARM_CM7/r0p1 directory. */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 15


 300:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 319              		.loc 1 300 0
 320 0006 444B     		ldr	r3, .L23
 321 0008 1B68     		ldr	r3, [r3]
 322 000a 444A     		ldr	r2, .L23+4
 323 000c 9342     		cmp	r3, r2
 324 000e 09D1     		bne	.L14
 325              	.LBB35:
 326              	.LBB36:
 327              		.loc 2 197 0 discriminator 1
 328              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 329 0010 4FF05003 			mov r3, #80												
 330 0014 83F31188 		msr basepri, r3											
 331 0018 BFF36F8F 		isb														
 332 001c BFF34F8F 		dsb														
 333              	
 334              	@ 0 "" 2
 335              		.thumb
 336 0020 3B61     		str	r3, [r7, #16]
 337              	.L15:
 338              	.LBE36:
 339              	.LBE35:
 340              		.loc 1 300 0 discriminator 2
 341 0022 FEE7     		b	.L15
 342              	.L14:
 301:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 343              		.loc 1 301 0
 344 0024 3C4B     		ldr	r3, .L23
 345 0026 1B68     		ldr	r3, [r3]
 346 0028 3D4A     		ldr	r2, .L23+8
 347 002a 9342     		cmp	r3, r2
 348 002c 09D1     		bne	.L16
 349              	.LBB37:
 350              	.LBB38:
 351              		.loc 2 197 0 discriminator 1
 352              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 353 002e 4FF05003 			mov r3, #80												
 354 0032 83F31188 		msr basepri, r3											
 355 0036 BFF36F8F 		isb														
 356 003a BFF34F8F 		dsb														
 357              	
 358              	@ 0 "" 2
 359              		.thumb
 360 003e FB60     		str	r3, [r7, #12]
 361              	.L17:
 362              	.LBE38:
 363              	.LBE37:
 364              		.loc 1 301 0 discriminator 3
 365 0040 FEE7     		b	.L17
 366              	.L16:
 367              	.LBB39:
 302:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 303:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #if ( configASSERT_DEFINED == 1 )
 304:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         {
 305:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             volatile uint32_t ulOriginalPriority;
 306:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( 
 368              		.loc 1 306 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 16


 369 0042 384B     		ldr	r3, .L23+12
 370 0044 7B61     		str	r3, [r7, #20]
 307:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             volatile uint8_t ucMaxPriorityValue;
 308:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 309:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Determine the maximum priority from which ISR safe FreeRTOS API
 310:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * functions can be called.  ISR safe functions are those that end in
 311:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * "FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 312:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * ensure interrupt entry is as fast and simple as possible.
 313:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              *
 314:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * Save the interrupt priority value that is about to be clobbered. */
 315:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ulOriginalPriority = *pucFirstUserPriorityRegister;
 371              		.loc 1 315 0
 372 0046 7B69     		ldr	r3, [r7, #20]
 373 0048 1B78     		ldrb	r3, [r3]
 374 004a DBB2     		uxtb	r3, r3
 375 004c 7B60     		str	r3, [r7, #4]
 316:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 317:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Determine the number of priority bits available.  First write to all
 318:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * possible bits. */
 319:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             *pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 376              		.loc 1 319 0
 377 004e 7B69     		ldr	r3, [r7, #20]
 378 0050 FF22     		movs	r2, #255
 379 0052 1A70     		strb	r2, [r3]
 320:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 321:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Read the value back to see how many bits stuck. */
 322:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 380              		.loc 1 322 0
 381 0054 7B69     		ldr	r3, [r7, #20]
 382 0056 1B78     		ldrb	r3, [r3]
 383 0058 DBB2     		uxtb	r3, r3
 384 005a FB70     		strb	r3, [r7, #3]
 323:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 324:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Use the same mask on the maximum system call priority. */
 325:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 385              		.loc 1 325 0
 386 005c FB78     		ldrb	r3, [r7, #3]
 387 005e DBB2     		uxtb	r3, r3
 388 0060 03F05003 		and	r3, r3, #80
 389 0064 DAB2     		uxtb	r2, r3
 390 0066 304B     		ldr	r3, .L23+16
 391 0068 1A70     		strb	r2, [r3]
 326:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 327:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Calculate the maximum acceptable priority group value for the number
 328:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * of bits read back. */
 329:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 392              		.loc 1 329 0
 393 006a 304B     		ldr	r3, .L23+20
 394 006c 0722     		movs	r2, #7
 395 006e 1A60     		str	r2, [r3]
 330:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 331:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 396              		.loc 1 331 0
 397 0070 09E0     		b	.L18
 398              	.L19:
 332:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             {
 333:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 ulMaxPRIGROUPValue--;
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 17


 399              		.loc 1 333 0
 400 0072 2E4B     		ldr	r3, .L23+20
 401 0074 1B68     		ldr	r3, [r3]
 402 0076 013B     		subs	r3, r3, #1
 403 0078 2C4A     		ldr	r2, .L23+20
 404 007a 1360     		str	r3, [r2]
 334:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 405              		.loc 1 334 0
 406 007c FB78     		ldrb	r3, [r7, #3]
 407 007e DBB2     		uxtb	r3, r3
 408 0080 5B00     		lsls	r3, r3, #1
 409 0082 DBB2     		uxtb	r3, r3
 410 0084 FB70     		strb	r3, [r7, #3]
 411              	.L18:
 331:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             {
 412              		.loc 1 331 0
 413 0086 FB78     		ldrb	r3, [r7, #3]
 414 0088 DBB2     		uxtb	r3, r3
 415 008a DBB2     		uxtb	r3, r3
 416 008c 5BB2     		sxtb	r3, r3
 417 008e 002B     		cmp	r3, #0
 418 0090 EFDB     		blt	.L19
 335:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             }
 336:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 337:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             #ifdef __NVIC_PRIO_BITS
 338:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 {
 339:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                     /* Check the CMSIS configuration that defines the number of
 340:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                      * priority bits matches the number of priority bits actually queried
 341:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                      * from the hardware. */
 342:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                     configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BIT
 343:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 }
 344:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             #endif
 345:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 346:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             #ifdef configPRIO_BITS
 347:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 {
 348:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                     /* Check the FreeRTOS configuration that defines the number of
 349:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                      * priority bits matches the number of priority bits actually queried
 350:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                      * from the hardware. */
 351:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                     configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS
 419              		.loc 1 351 0
 420 0092 264B     		ldr	r3, .L23+20
 421 0094 1B68     		ldr	r3, [r3]
 422 0096 C3F10703 		rsb	r3, r3, #7
 423 009a 042B     		cmp	r3, #4
 424 009c 09D0     		beq	.L20
 425              	.LBB40:
 426              	.LBB41:
 427              		.loc 2 197 0 discriminator 1
 428              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 429 009e 4FF05003 			mov r3, #80												
 430 00a2 83F31188 		msr basepri, r3											
 431 00a6 BFF36F8F 		isb														
 432 00aa BFF34F8F 		dsb														
 433              	
 434              	@ 0 "" 2
 435              		.thumb
 436 00ae BB60     		str	r3, [r7, #8]
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 18


 437              	.L21:
 438              	.LBE41:
 439              	.LBE40:
 440              		.loc 1 351 0 discriminator 4
 441 00b0 FEE7     		b	.L21
 442              	.L20:
 352:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 }
 353:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             #endif
 354:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 355:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Shift the priority group value back to its position within the AIRCR
 356:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * register. */
 357:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 443              		.loc 1 357 0
 444 00b2 1E4B     		ldr	r3, .L23+20
 445 00b4 1B68     		ldr	r3, [r3]
 446 00b6 1B02     		lsls	r3, r3, #8
 447 00b8 1C4A     		ldr	r2, .L23+20
 448 00ba 1360     		str	r3, [r2]
 358:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 449              		.loc 1 358 0
 450 00bc 1B4B     		ldr	r3, .L23+20
 451 00be 1B68     		ldr	r3, [r3]
 452 00c0 03F4E063 		and	r3, r3, #1792
 453 00c4 194A     		ldr	r2, .L23+20
 454 00c6 1360     		str	r3, [r2]
 359:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 360:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Restore the clobbered interrupt priority register to its original
 361:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * value. */
 362:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             *pucFirstUserPriorityRegister = ulOriginalPriority;
 455              		.loc 1 362 0
 456 00c8 7B68     		ldr	r3, [r7, #4]
 457 00ca DAB2     		uxtb	r2, r3
 458 00cc 7B69     		ldr	r3, [r7, #20]
 459 00ce 1A70     		strb	r2, [r3]
 460              	.LBE39:
 363:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         }
 364:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #endif /* conifgASSERT_DEFINED */
 365:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 366:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Make PendSV and SysTick the lowest priority interrupts. */
 367:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 461              		.loc 1 367 0
 462 00d0 174A     		ldr	r2, .L23+24
 463 00d2 174B     		ldr	r3, .L23+24
 464 00d4 1B68     		ldr	r3, [r3]
 465 00d6 43F47003 		orr	r3, r3, #15728640
 466 00da 1360     		str	r3, [r2]
 368:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 467              		.loc 1 368 0
 468 00dc 144A     		ldr	r2, .L23+24
 469 00de 144B     		ldr	r3, .L23+24
 470 00e0 1B68     		ldr	r3, [r3]
 471 00e2 43F07043 		orr	r3, r3, #-268435456
 472 00e6 1360     		str	r3, [r2]
 369:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 370:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Start the timer that generates the tick ISR.  Interrupts are disabled
 371:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * here already. */
 372:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     vPortSetupTimerInterrupt();
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 19


 473              		.loc 1 372 0
 474 00e8 FFF7FEFF 		bl	vPortSetupTimerInterrupt
 373:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 374:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Initialise the critical nesting count ready for the first task. */
 375:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting = 0;
 475              		.loc 1 375 0
 476 00ec 114B     		ldr	r3, .L23+28
 477 00ee 0022     		movs	r2, #0
 478 00f0 1A60     		str	r2, [r3]
 376:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 377:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Ensure the VFP is enabled - it should be anyway. */
 378:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     vPortEnableVFP();
 479              		.loc 1 378 0
 480 00f2 FFF7FEFF 		bl	vPortEnableVFP
 379:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 380:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Lazy save always. */
 381:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     *( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 481              		.loc 1 381 0
 482 00f6 104A     		ldr	r2, .L23+32
 483 00f8 0F4B     		ldr	r3, .L23+32
 484 00fa 1B68     		ldr	r3, [r3]
 485 00fc 43F04043 		orr	r3, r3, #-1073741824
 486 0100 1360     		str	r3, [r2]
 382:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 383:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Start the first task. */
 384:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     prvPortStartFirstTask();
 487              		.loc 1 384 0
 488 0102 FFF7FEFF 		bl	prvPortStartFirstTask
 385:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 386:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Should never get here as the tasks will now be executing!  Call the task
 387:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * exit error function to prevent compiler warnings about a static function
 388:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * not being called in the case that the application writer overrides this
 389:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * functionality by defining configTASK_RETURN_ADDRESS.  Call
 390:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * vTaskSwitchContext() so link time optimisation does not remove the
 391:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * symbol. */
 392:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     vTaskSwitchContext();
 489              		.loc 1 392 0
 490 0106 FFF7FEFF 		bl	vTaskSwitchContext
 393:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     prvTaskExitError();
 491              		.loc 1 393 0
 492 010a FFF7FEFF 		bl	prvTaskExitError
 394:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 395:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Should not get here! */
 396:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     return 0;
 493              		.loc 1 396 0
 494 010e 0023     		movs	r3, #0
 397:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 495              		.loc 1 397 0
 496 0110 1846     		mov	r0, r3
 497 0112 1837     		adds	r7, r7, #24
 498              	.LCFI15:
 499              		.cfi_def_cfa_offset 8
 500 0114 BD46     		mov	sp, r7
 501              	.LCFI16:
 502              		.cfi_def_cfa_register 13
 503              		@ sp needed
 504 0116 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 20


 505              	.L24:
 506              		.align	2
 507              	.L23:
 508 0118 00ED00E0 		.word	-536810240
 509 011c 71C20F41 		.word	1091551857
 510 0120 70C20F41 		.word	1091551856
 511 0124 00E400E0 		.word	-536812544
 512 0128 00000000 		.word	ucMaxSysCallPriority
 513 012c 00000000 		.word	ulMaxPRIGROUPValue
 514 0130 20ED00E0 		.word	-536810208
 515 0134 00000000 		.word	uxCriticalNesting
 516 0138 34EF00E0 		.word	-536809676
 517              		.cfi_endproc
 518              	.LFE9:
 520              		.section	.text.vPortEndScheduler,"ax",%progbits
 521              		.align	2
 522              		.global	vPortEndScheduler
 523              		.thumb
 524              		.thumb_func
 526              	vPortEndScheduler:
 527              	.LFB10:
 398:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 399:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 400:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortEndScheduler( void )
 401:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 528              		.loc 1 401 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              	.LCFI17:
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 7, -4
 537 0002 83B0     		sub	sp, sp, #12
 538              	.LCFI18:
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              	.LCFI19:
 542              		.cfi_def_cfa_register 7
 402:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Not implemented in ports where there is nothing to return to.
 403:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * Artificially force an assert. */
 404:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     configASSERT( uxCriticalNesting == 1000UL );
 543              		.loc 1 404 0
 544 0006 0A4B     		ldr	r3, .L28
 545 0008 1B68     		ldr	r3, [r3]
 546 000a B3F57A7F 		cmp	r3, #1000
 547 000e 09D0     		beq	.L25
 548              	.LBB42:
 549              	.LBB43:
 550              		.loc 2 197 0 discriminator 1
 551              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 552 0010 4FF05003 			mov r3, #80												
 553 0014 83F31188 		msr basepri, r3											
 554 0018 BFF36F8F 		isb														
 555 001c BFF34F8F 		dsb														
 556              	
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 21


 557              	@ 0 "" 2
 558              		.thumb
 559 0020 7B60     		str	r3, [r7, #4]
 560              	.L27:
 561              	.LBE43:
 562              	.LBE42:
 563              		.loc 1 404 0 discriminator 1
 564 0022 FEE7     		b	.L27
 565              	.L25:
 405:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 566              		.loc 1 405 0
 567 0024 0C37     		adds	r7, r7, #12
 568              	.LCFI20:
 569              		.cfi_def_cfa_offset 4
 570 0026 BD46     		mov	sp, r7
 571              	.LCFI21:
 572              		.cfi_def_cfa_register 13
 573              		@ sp needed
 574 0028 5DF8047B 		ldr	r7, [sp], #4
 575              	.LCFI22:
 576              		.cfi_restore 7
 577              		.cfi_def_cfa_offset 0
 578 002c 7047     		bx	lr
 579              	.L29:
 580 002e 00BF     		.align	2
 581              	.L28:
 582 0030 00000000 		.word	uxCriticalNesting
 583              		.cfi_endproc
 584              	.LFE10:
 586              		.section	.text.vPortEnterCritical,"ax",%progbits
 587              		.align	2
 588              		.global	vPortEnterCritical
 589              		.thumb
 590              		.thumb_func
 592              	vPortEnterCritical:
 593              	.LFB11:
 406:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 407:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 408:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortEnterCritical( void )
 409:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 594              		.loc 1 409 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              	.LCFI23:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 83B0     		sub	sp, sp, #12
 604              	.LCFI24:
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI25:
 608              		.cfi_def_cfa_register 7
 609              	.LBB44:
 610              	.LBB45:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 22


 611              		.loc 2 197 0
 612              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 613 0006 4FF05003 			mov r3, #80												
 614 000a 83F31188 		msr basepri, r3											
 615 000e BFF36F8F 		isb														
 616 0012 BFF34F8F 		dsb														
 617              	
 618              	@ 0 "" 2
 619              		.thumb
 620 0016 7B60     		str	r3, [r7, #4]
 621              	.LBE45:
 622              	.LBE44:
 410:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portDISABLE_INTERRUPTS();
 411:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting++;
 623              		.loc 1 411 0
 624 0018 0E4B     		ldr	r3, .L33
 625 001a 1B68     		ldr	r3, [r3]
 626 001c 0133     		adds	r3, r3, #1
 627 001e 0D4A     		ldr	r2, .L33
 628 0020 1360     		str	r3, [r2]
 412:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 413:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* This is not the interrupt safe version of the enter critical function so
 414:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * assert() if it is being called from an interrupt context.  Only API
 415:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * functions that end in "FromISR" can be used in an interrupt.  Only assert if
 416:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * the critical nesting count is 1 to protect against recursive calls if the
 417:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * assert function also uses a critical section. */
 418:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     if( uxCriticalNesting == 1 )
 629              		.loc 1 418 0
 630 0022 0C4B     		ldr	r3, .L33
 631 0024 1B68     		ldr	r3, [r3]
 632 0026 012B     		cmp	r3, #1
 633 0028 0ED1     		bne	.L30
 419:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     {
 420:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 634              		.loc 1 420 0
 635 002a 0B4B     		ldr	r3, .L33+4
 636 002c 1B68     		ldr	r3, [r3]
 637 002e DBB2     		uxtb	r3, r3
 638 0030 002B     		cmp	r3, #0
 639 0032 09D0     		beq	.L30
 640              	.LBB46:
 641              	.LBB47:
 642              		.loc 2 197 0 discriminator 1
 643              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 644 0034 4FF05003 			mov r3, #80												
 645 0038 83F31188 		msr basepri, r3											
 646 003c BFF36F8F 		isb														
 647 0040 BFF34F8F 		dsb														
 648              	
 649              	@ 0 "" 2
 650              		.thumb
 651 0044 3B60     		str	r3, [r7]
 652              	.L32:
 653              	.LBE47:
 654              	.LBE46:
 655              		.loc 1 420 0 discriminator 1
 656 0046 FEE7     		b	.L32
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 23


 657              	.L30:
 421:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     }
 422:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 658              		.loc 1 422 0
 659 0048 0C37     		adds	r7, r7, #12
 660              	.LCFI26:
 661              		.cfi_def_cfa_offset 4
 662 004a BD46     		mov	sp, r7
 663              	.LCFI27:
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 004c 5DF8047B 		ldr	r7, [sp], #4
 667              	.LCFI28:
 668              		.cfi_restore 7
 669              		.cfi_def_cfa_offset 0
 670 0050 7047     		bx	lr
 671              	.L34:
 672 0052 00BF     		.align	2
 673              	.L33:
 674 0054 00000000 		.word	uxCriticalNesting
 675 0058 04ED00E0 		.word	-536810236
 676              		.cfi_endproc
 677              	.LFE11:
 679              		.section	.text.vPortExitCritical,"ax",%progbits
 680              		.align	2
 681              		.global	vPortExitCritical
 682              		.thumb
 683              		.thumb_func
 685              	vPortExitCritical:
 686              	.LFB12:
 423:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 424:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 425:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortExitCritical( void )
 426:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 687              		.loc 1 426 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 8
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692 0000 80B4     		push	{r7}
 693              	.LCFI29:
 694              		.cfi_def_cfa_offset 4
 695              		.cfi_offset 7, -4
 696 0002 83B0     		sub	sp, sp, #12
 697              	.LCFI30:
 698              		.cfi_def_cfa_offset 16
 699 0004 00AF     		add	r7, sp, #0
 700              	.LCFI31:
 701              		.cfi_def_cfa_register 7
 427:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     configASSERT( uxCriticalNesting );
 702              		.loc 1 427 0
 703 0006 104B     		ldr	r3, .L39
 704 0008 1B68     		ldr	r3, [r3]
 705 000a 002B     		cmp	r3, #0
 706 000c 09D1     		bne	.L36
 707              	.LBB48:
 708              	.LBB49:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 24


 709              		.loc 2 197 0 discriminator 1
 710              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 711 000e 4FF05003 			mov r3, #80												
 712 0012 83F31188 		msr basepri, r3											
 713 0016 BFF36F8F 		isb														
 714 001a BFF34F8F 		dsb														
 715              	
 716              	@ 0 "" 2
 717              		.thumb
 718 001e 7B60     		str	r3, [r7, #4]
 719              	.L37:
 720              	.LBE49:
 721              	.LBE48:
 722              		.loc 1 427 0 discriminator 1
 723 0020 FEE7     		b	.L37
 724              	.L36:
 428:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting--;
 725              		.loc 1 428 0
 726 0022 094B     		ldr	r3, .L39
 727 0024 1B68     		ldr	r3, [r3]
 728 0026 013B     		subs	r3, r3, #1
 729 0028 074A     		ldr	r2, .L39
 730 002a 1360     		str	r3, [r2]
 429:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 430:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     if( uxCriticalNesting == 0 )
 731              		.loc 1 430 0
 732 002c 064B     		ldr	r3, .L39
 733 002e 1B68     		ldr	r3, [r3]
 734 0030 002B     		cmp	r3, #0
 735 0032 04D1     		bne	.L35
 736 0034 0023     		movs	r3, #0
 737 0036 3B60     		str	r3, [r7]
 738              	.LBB50:
 739              	.LBB51:
 198:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 199:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 200:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 201:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 202:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 203:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         );
 205:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 206:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 208:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 209:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 210:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 211:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 212:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 213:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 214:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 215:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 216:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 217:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 218:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 219:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 220:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 25


 221:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         );
 222:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 223:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 224:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 225:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 226:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 227:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 228:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 229:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 230:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 231:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 740              		.loc 2 231 0
 741 0038 3B68     		ldr	r3, [r7]
 742              	@ 231 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 743 003a 83F31188 			msr basepri, r3	
 744              	@ 0 "" 2
 745              		.thumb
 746              	.L35:
 747              	.LBE51:
 748              	.LBE50:
 431:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     {
 432:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         portENABLE_INTERRUPTS();
 433:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     }
 434:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 749              		.loc 1 434 0
 750 003e 0C37     		adds	r7, r7, #12
 751              	.LCFI32:
 752              		.cfi_def_cfa_offset 4
 753 0040 BD46     		mov	sp, r7
 754              	.LCFI33:
 755              		.cfi_def_cfa_register 13
 756              		@ sp needed
 757 0042 5DF8047B 		ldr	r7, [sp], #4
 758              	.LCFI34:
 759              		.cfi_restore 7
 760              		.cfi_def_cfa_offset 0
 761 0046 7047     		bx	lr
 762              	.L40:
 763              		.align	2
 764              	.L39:
 765 0048 00000000 		.word	uxCriticalNesting
 766              		.cfi_endproc
 767              	.LFE12:
 769              		.section	.text.PendSV_Handler,"ax",%progbits
 770              		.align	2
 771              		.global	PendSV_Handler
 772              		.thumb
 773              		.thumb_func
 775              	PendSV_Handler:
 776              	.LFB13:
 435:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 436:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 437:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void )
 438:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 777              		.loc 1 438 0
 778              		.cfi_startproc
 779              		@ Naked Function: prologue and epilogue provided by programmer.
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 26


 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 439:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* This is a naked function. */
 440:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 441:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     __asm volatile
 782              		.loc 1 441 0
 783              	@ 441 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 784 0000 EFF30980 			mrs r0, psp							
 785 0004 BFF36F8F 		isb									
 786              											
 787 0008 154B     		ldr	r3, pxCurrentTCBConst			
 788 000a 1A68     		ldr	r2, [r3]						
 789              											
 790 000c 1EF0100F 		tst r14, #0x10						
 791 0010 08BF     		it eq								
 792 0012 20ED108A 		vstmdbeq r0!, {s16-s31}				
 793              											
 794 0016 20E9F04F 		stmdb r0!, {r4-r11, r14}			
 795 001a 1060     		str r0, [r2]						
 796              											
 797 001c 2DE90900 		stmdb sp!, {r0, r3}					
 798 0020 4FF05000 		mov r0, #80 							
 799 0024 80F31188 		msr basepri, r0						
 800 0028 BFF34F8F 		dsb									
 801 002c BFF36F8F 		isb									
 802 0030 FFF7FEFF 		bl vTaskSwitchContext				
 803 0034 4FF00000 		mov r0, #0							
 804 0038 80F31188 		msr basepri, r0						
 805 003c 09BC     		ldmia sp!, {r0, r3}					
 806              											
 807 003e 1968     		ldr r1, [r3]						
 808 0040 0868     		ldr r0, [r1]						
 809              											
 810 0042 B0E8F04F 		ldmia r0!, {r4-r11, r14}			
 811              											
 812 0046 1EF0100F 		tst r14, #0x10						
 813 004a 08BF     		it eq								
 814 004c B0EC108A 		vldmiaeq r0!, {s16-s31}				
 815              											
 816 0050 80F30988 		msr psp, r0							
 817 0054 BFF36F8F 		isb									
 818              											
 819              											
 820 0058 7047     		bx r14								
 821              											
 822 005a 00BFAFF3 		.align 4							
 822      0080
 823 0060 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 824              	
 825              	@ 0 "" 2
 442:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     (
 443:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	mrs r0, psp							\n"
 444:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	isb									\n"
 445:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 446:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr	r3, pxCurrentTCBConst			\n"/* Get the location of the current TCB. */
 447:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr	r2, [r3]						\n"
 448:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 27


 449:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	tst r14, #0x10						\n"/* Is the task using the FPU context?  If so, push high vfp regist
 450:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	it eq								\n"
 451:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	vstmdbeq r0!, {s16-s31}				\n"
 452:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 453:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	stmdb r0!, {r4-r11, r14}			\n"/* Save the core registers. */
 454:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	str r0, [r2]						\n"/* Save the new top of stack into the first member of the TCB. */
 455:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 456:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	stmdb sp!, {r0, r3}					\n"
 457:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	mov r0, %0 							\n"
 458:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	msr basepri, r0						\n"
 459:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	dsb									\n"
 460:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	isb									\n"
 461:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	bl vTaskSwitchContext				\n"
 462:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	mov r0, #0							\n"
 463:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	msr basepri, r0						\n"
 464:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldmia sp!, {r0, r3}					\n"
 465:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 466:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr r1, [r3]						\n"/* The first item in pxCurrentTCB is the task top of stack. */
 467:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr r0, [r1]						\n"
 468:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 469:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldmia r0!, {r4-r11, r14}			\n"/* Pop the core registers. */
 470:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 471:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	tst r14, #0x10						\n"/* Is the task using the FPU context?  If so, pop the high vfp reg
 472:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	it eq								\n"
 473:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	vldmiaeq r0!, {s16-s31}				\n"
 474:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 475:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	msr psp, r0							\n"
 476:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	isb									\n"
 477:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 478:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         #ifdef WORKAROUND_PMU_CM001 /* XMC4000 specific errata workaround. */
 479:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             #if WORKAROUND_PMU_CM001 == 1
 480:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 "			push { r14 }				\n"
 481:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 "			pop { pc }					\n"
 482:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             #endif
 483:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         #endif
 484:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 485:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	bx r14								\n"
 486:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 487:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	.align 4							\n"
 488:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "pxCurrentTCBConst: .word pxCurrentTCB	\n"
 489:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 490:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     );
 491:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 826              		.loc 1 491 0
 827              		.thumb
 828              		.cfi_endproc
 829              	.LFE13:
 831              		.section	.text.OSSysTick_Handler,"ax",%progbits
 832              		.align	2
 833              		.global	OSSysTick_Handler
 834              		.thumb
 835              		.thumb_func
 837              	OSSysTick_Handler:
 838              	.LFB14:
 492:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 493:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 494:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void )
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 28


 495:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 839              		.loc 1 495 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843 0000 80B5     		push	{r7, lr}
 844              	.LCFI35:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 82B0     		sub	sp, sp, #8
 849              	.LCFI36:
 850              		.cfi_def_cfa_offset 16
 851 0004 00AF     		add	r7, sp, #0
 852              	.LCFI37:
 853              		.cfi_def_cfa_register 7
 854              	.LBB52:
 855              	.LBB53:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 856              		.loc 2 197 0
 857              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 858 0006 4FF05003 			mov r3, #80												
 859 000a 83F31188 		msr basepri, r3											
 860 000e BFF36F8F 		isb														
 861 0012 BFF34F8F 		dsb														
 862              	
 863              	@ 0 "" 2
 864              		.thumb
 865 0016 7B60     		str	r3, [r7, #4]
 866              	.LBE53:
 867              	.LBE52:
 496:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* The SysTick runs at the lowest interrupt priority, so when this interrupt
 497:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * executes all interrupts must be unmasked.  There is therefore no need to
 498:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * save and then restore the interrupt mask value as its value is already
 499:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****      * known. */
 500:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portDISABLE_INTERRUPTS();
 501:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     {
 502:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* Increment the RTOS tick. */
 503:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         if( xTaskIncrementTick() != pdFALSE )
 868              		.loc 1 503 0
 869 0018 FFF7FEFF 		bl	xTaskIncrementTick
 870 001c 0346     		mov	r3, r0
 871 001e 002B     		cmp	r3, #0
 872 0020 03D0     		beq	.L43
 504:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         {
 505:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* A context switch is required.  Context switching is performed in
 506:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * the PendSV interrupt.  Pend the PendSV interrupt. */
 507:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 873              		.loc 1 507 0
 874 0022 064B     		ldr	r3, .L44
 875 0024 4FF08052 		mov	r2, #268435456
 876 0028 1A60     		str	r2, [r3]
 877              	.L43:
 878 002a 0023     		movs	r3, #0
 879 002c 3B60     		str	r3, [r7]
 880              	.LBB54:
 881              	.LBB55:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 29


 882              		.loc 2 231 0
 883 002e 3B68     		ldr	r3, [r7]
 884              	@ 231 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 885 0030 83F31188 			msr basepri, r3	
 886              	@ 0 "" 2
 887              		.thumb
 888              	.LBE55:
 889              	.LBE54:
 508:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         }
 509:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     }
 510:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portENABLE_INTERRUPTS();
 511:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 890              		.loc 1 511 0
 891 0034 0837     		adds	r7, r7, #8
 892              	.LCFI38:
 893              		.cfi_def_cfa_offset 8
 894 0036 BD46     		mov	sp, r7
 895              	.LCFI39:
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 0038 80BD     		pop	{r7, pc}
 899              	.L45:
 900 003a 00BF     		.align	2
 901              	.L44:
 902 003c 04ED00E0 		.word	-536810236
 903              		.cfi_endproc
 904              	.LFE14:
 906              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 907              		.align	2
 908              		.weak	vPortSetupTimerInterrupt
 909              		.thumb
 910              		.thumb_func
 912              	vPortSetupTimerInterrupt:
 913              	.LFB15:
 512:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 513:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 514:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 515:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 516:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     __attribute__( ( weak ) ) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 517:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     {
 518:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 519:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         TickType_t xModifiableIdleTime;
 520:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 521:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* Make sure the SysTick reload value does not overflow the counter. */
 522:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 523:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         {
 524:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 525:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         }
 526:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 527:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* Stop the SysTick momentarily.  The time the SysTick is stopped for
 528:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * is accounted for as best it can be, but using the tickless mode will
 529:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * inevitably result in some tiny drift of the time maintained by the
 530:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * kernel with respect to calendar time. */
 531:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 532:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 533:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* Calculate the reload value required to wait xExpectedIdleTime
 534:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * tick periods.  -1 is used because this code will execute part way
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 30


 535:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * through one of the tick periods. */
 536:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpecte
 537:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 538:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         if( ulReloadValue > ulStoppedTimerCompensation )
 539:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         {
 540:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ulReloadValue -= ulStoppedTimerCompensation;
 541:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         }
 542:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 543:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* Enter a critical section but don't use the taskENTER_CRITICAL()
 544:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * method as that will mask interrupts that should exit sleep mode. */
 545:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         __asm volatile ( "cpsid i" ::: "memory" );
 546:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         __asm volatile ( "dsb" );
 547:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         __asm volatile ( "isb" );
 548:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 549:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* If a context switch is pending or a task is waiting for the scheduler
 550:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * to be unsuspended then abandon the low power entry. */
 551:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 552:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         {
 553:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Restart from whatever is left in the count register to complete
 554:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * this tick period. */
 555:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 556:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 557:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Restart SysTick. */
 558:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 559:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 560:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Reset the reload register to the value required for normal tick
 561:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * periods. */
 562:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 563:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 564:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Re-enable interrupts - see comments above the cpsid instruction()
 565:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * above. */
 566:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 567:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         }
 568:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         else
 569:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         {
 570:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Set the new reload value. */
 571:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 572:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 573:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Clear the SysTick count flag and set the count value back to
 574:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * zero. */
 575:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 576:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 577:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Restart SysTick. */
 578:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 579:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 580:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 581:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * set its parameter to 0 to indicate that its implementation contains
 582:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * its own wait for interrupt or wait for event instruction, and so wfi
 583:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * should not be executed again.  However, the original expected idle
 584:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * time variable must remain unmodified, so a copy is taken. */
 585:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             xModifiableIdleTime = xExpectedIdleTime;
 586:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 587:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 588:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             if( xModifiableIdleTime > 0 )
 589:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             {
 590:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 __asm volatile ( "dsb" ::: "memory" );
 591:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 __asm volatile ( "wfi" );
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 31


 592:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 __asm volatile ( "isb" );
 593:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             }
 594:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 595:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 596:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 597:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Re-enable interrupts to allow the interrupt that brought the MCU
 598:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * out of sleep mode to execute immediately.  see comments above
 599:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * __disable_interrupt() call above. */
 600:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 601:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "dsb" );
 602:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "isb" );
 603:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 604:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Disable interrupts again because the clock is about to be stopped
 605:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * and interrupts that execute while the clock is stopped will increase
 606:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * any slippage between the time maintained by the RTOS and calendar
 607:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * time. */
 608:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "cpsid i" ::: "memory" );
 609:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "dsb" );
 610:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "isb" );
 611:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 612:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Disable the SysTick clock without reading the
 613:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * portNVIC_SYSTICK_CTRL_REG register to ensure the
 614:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 615:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * the time the SysTick is stopped for is accounted for as best it can
 616:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * be, but using the tickless mode will inevitably result in some tiny
 617:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * drift of the time maintained by the kernel with respect to calendar
 618:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * time*/
 619:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 620:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 621:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Determine if the SysTick clock has already counted to zero and
 622:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * been set back to the current reload value (the reload back being
 623:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * correct for the entire expected idle time) or if the SysTick is yet
 624:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * to count to zero (in which case an interrupt other than the SysTick
 625:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * must have brought the system out of sleep mode). */
 626:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 627:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             {
 628:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 uint32_t ulCalculatedLoadValue;
 629:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 630:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 /* The tick interrupt is already pending, and the SysTick count
 631:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * reloaded with ulReloadValue.  Reset the
 632:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 633:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * period. */
 634:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portN
 635:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 636:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 /* Don't allow a tiny value, or values that have somehow
 637:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * underflowed because the post sleep hook did something
 638:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * that took too long. */
 639:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadVal
 640:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 {
 641:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                     ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 642:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 }
 643:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 644:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 645:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 646:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 /* As the pending tick will be processed as soon as this
 647:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * function exits, the tick value maintained by the tick is stepped
 648:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * forward by one less than the time spent waiting. */
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 32


 649:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 650:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             }
 651:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             else
 652:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             {
 653:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 /* Something other than the tick interrupt ended the sleep.
 654:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * Work out how long the sleep lasted rounded to complete tick
 655:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * periods (not the ulReload value which accounted for part
 656:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * ticks). */
 657:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - po
 658:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 659:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 /* How many complete tick periods passed while the processor
 660:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * was waiting? */
 661:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 662:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 663:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 /* The reload value is set to whatever fraction of a single tick
 664:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                  * period remains. */
 665:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOne
 666:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             }
 667:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 668:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 669:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 670:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * value. */
 671:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 672:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 673:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             vTaskStepTick( ulCompleteTickPeriods );
 674:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 675:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 676:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Exit with interrupts enabled. */
 677:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 678:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         }
 679:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     }
 680:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 681:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* #if configUSE_TICKLESS_IDLE */
 682:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 683:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 684:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 685:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 686:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * frequency.
 687:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 688:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** __attribute__( ( weak ) ) void vPortSetupTimerInterrupt( void )
 689:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 914              		.loc 1 689 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919 0000 80B4     		push	{r7}
 920              	.LCFI40:
 921              		.cfi_def_cfa_offset 4
 922              		.cfi_offset 7, -4
 923 0002 00AF     		add	r7, sp, #0
 924              	.LCFI41:
 925              		.cfi_def_cfa_register 7
 690:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Calculate the constants required to configure the tick interrupt. */
 691:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #if ( configUSE_TICKLESS_IDLE == 1 )
 692:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         {
 693:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 33


 694:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 695:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSY
 696:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         }
 697:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     #endif /* configUSE_TICKLESS_IDLE */
 698:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 699:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Stop and clear the SysTick. */
 700:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CTRL_REG = 0UL;
 926              		.loc 1 700 0
 927 0004 0A4B     		ldr	r3, .L47
 928 0006 0022     		movs	r2, #0
 929 0008 1A60     		str	r2, [r3]
 701:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 930              		.loc 1 701 0
 931 000a 0A4B     		ldr	r3, .L47+4
 932 000c 0022     		movs	r2, #0
 933 000e 1A60     		str	r2, [r3]
 702:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 703:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     /* Configure SysTick to interrupt at the requested rate. */
 704:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 934              		.loc 1 704 0
 935 0010 094A     		ldr	r2, .L47+8
 936 0012 0A4B     		ldr	r3, .L47+12
 937 0014 1B68     		ldr	r3, [r3]
 938 0016 0A49     		ldr	r1, .L47+16
 939 0018 A1FB0313 		umull	r1, r3, r1, r3
 940 001c 9B09     		lsrs	r3, r3, #6
 941 001e 013B     		subs	r3, r3, #1
 942 0020 1360     		str	r3, [r2]
 705:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SY
 943              		.loc 1 705 0
 944 0022 034B     		ldr	r3, .L47
 945 0024 0722     		movs	r2, #7
 946 0026 1A60     		str	r2, [r3]
 706:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 947              		.loc 1 706 0
 948 0028 BD46     		mov	sp, r7
 949              	.LCFI42:
 950              		.cfi_def_cfa_register 13
 951              		@ sp needed
 952 002a 5DF8047B 		ldr	r7, [sp], #4
 953              	.LCFI43:
 954              		.cfi_restore 7
 955              		.cfi_def_cfa_offset 0
 956 002e 7047     		bx	lr
 957              	.L48:
 958              		.align	2
 959              	.L47:
 960 0030 10E000E0 		.word	-536813552
 961 0034 18E000E0 		.word	-536813544
 962 0038 14E000E0 		.word	-536813548
 963 003c 00000000 		.word	SystemCoreClock
 964 0040 D34D6210 		.word	274877907
 965              		.cfi_endproc
 966              	.LFE15:
 968              		.section	.text.vPortEnableVFP,"ax",%progbits
 969              		.align	2
 970              		.thumb
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 34


 971              		.thumb_func
 973              	vPortEnableVFP:
 974              	.LFB16:
 707:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 708:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 709:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* This is a naked function. */
 710:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void )
 711:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 975              		.loc 1 711 0
 976              		.cfi_startproc
 977              		@ Naked Function: prologue and epilogue provided by programmer.
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 712:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     __asm volatile
 980              		.loc 1 712 0
 981              	@ 712 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 982 0000 DFF80C00 			ldr.w r0, =0xE000ED88		
 983 0004 0168     		ldr r1, [r0]				
 984              									
 985 0006 41F47001 		orr r1, r1, #( 0xf << 20 )	
 986 000a 0160     		str r1, [r0]				
 987 000c 7047     		bx r14						
 988 000e 000088ED 		.ltorg						
 988      00E0
 989              	
 990              	@ 0 "" 2
 713:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     (
 714:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr.w r0, =0xE000ED88		\n"/* The FPU enable bits are in the CPACR. */
 715:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	ldr r1, [r0]				\n"
 716:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "								\n"
 717:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	orr r1, r1, #( 0xf << 20 )	\n"/* Enable CP10 and CP11 coprocessors, then save back. */
 718:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	str r1, [r0]				\n"
 719:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	bx r14						\n"
 720:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         "	.ltorg						\n"
 721:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     );
 722:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 991              		.loc 1 722 0
 992              		.thumb
 993              		.cfi_endproc
 994              	.LFE16:
 996              		.section	.text.vPortValidateInterruptPriority,"ax",%progbits
 997              		.align	2
 998              		.global	vPortValidateInterruptPriority
 999              		.thumb
 1000              		.thumb_func
 1002              	vPortValidateInterruptPriority:
 1003              	.LFB17:
 723:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 724:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 725:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if ( configASSERT_DEFINED == 1 )
 726:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 727:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     void vPortValidateInterruptPriority( void )
 728:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     {
 1004              		.loc 1 728 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 16
 1007              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 35


 1008              		@ link register save eliminated.
 1009 0000 80B4     		push	{r7}
 1010              	.LCFI44:
 1011              		.cfi_def_cfa_offset 4
 1012              		.cfi_offset 7, -4
 1013 0002 85B0     		sub	sp, sp, #20
 1014              	.LCFI45:
 1015              		.cfi_def_cfa_offset 24
 1016 0004 00AF     		add	r7, sp, #0
 1017              	.LCFI46:
 1018              		.cfi_def_cfa_register 7
 729:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         uint32_t ulCurrentInterrupt;
 730:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         uint8_t ucCurrentPriority;
 731:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 732:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* Obtain the number of the currently executing interrupt. */
 733:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 1019              		.loc 1 733 0
 1020              	@ 733 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1021 0006 EFF30583 		mrs r3, ipsr
 1022              	@ 0 "" 2
 1023              		.thumb
 1024 000a FB60     		str	r3, [r7, #12]
 734:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 735:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* Is the interrupt number a user defined interrupt? */
 736:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 1025              		.loc 1 736 0
 1026 000c FB68     		ldr	r3, [r7, #12]
 1027 000e 0F2B     		cmp	r3, #15
 1028 0010 13D9     		bls	.L51
 737:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         {
 738:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* Look up the interrupt's priority. */
 739:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 1029              		.loc 1 739 0
 1030 0012 154A     		ldr	r2, .L55
 1031 0014 FB68     		ldr	r3, [r7, #12]
 1032 0016 1344     		add	r3, r3, r2
 1033 0018 1B78     		ldrb	r3, [r3]
 1034 001a FB72     		strb	r3, [r7, #11]
 740:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 741:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             /* The following assertion will fail if a service routine (ISR) for
 742:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * an interrupt that has been assigned a priority above
 743:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 744:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * function.  ISR safe FreeRTOS API functions must *only* be called
 745:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * from interrupts that have been assigned a priority at or below
 746:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY.
 747:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              *
 748:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * Numerically low interrupt priority numbers represent logically high
 749:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * interrupt priorities, therefore the priority of the interrupt must
 750:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * be set to a value equal to or numerically *higher* than
 751:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY.
 752:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              *
 753:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * Interrupts that	use the FreeRTOS API must not be left at their
 754:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * default priority of	zero as that is the highest possible priority,
 755:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
 756:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * and	therefore also guaranteed to be invalid.
 757:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              *
 758:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * FreeRTOS maintains separate thread and ISR API functions to ensure
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 36


 759:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * interrupt entry is as fast and simple as possible.
 760:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              *
 761:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * The following links provide detailed information:
 762:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html
 763:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****              * https://www.FreeRTOS.org/FAQHelp.html */
 764:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****             configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 1035              		.loc 1 764 0
 1036 001c 134B     		ldr	r3, .L55+4
 1037 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1038 0020 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 1039 0022 9A42     		cmp	r2, r3
 1040 0024 09D2     		bcs	.L51
 1041              	.LBB56:
 1042              	.LBB57:
 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1043              		.loc 2 197 0 discriminator 1
 1044              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1045 0026 4FF05003 			mov r3, #80												
 1046 002a 83F31188 		msr basepri, r3											
 1047 002e BFF36F8F 		isb														
 1048 0032 BFF34F8F 		dsb														
 1049              	
 1050              	@ 0 "" 2
 1051              		.thumb
 1052 0036 7B60     		str	r3, [r7, #4]
 1053              	.L52:
 1054              	.LBE57:
 1055              	.LBE56:
 1056              		.loc 1 764 0 discriminator 1
 1057 0038 FEE7     		b	.L52
 1058              	.L51:
 765:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         }
 766:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 767:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         /* Priority grouping:  The interrupt controller (NVIC) allows the bits
 768:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * that define each interrupt's priority to be split between bits that
 769:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * define the interrupt's pre-emption priority bits and bits that define
 770:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * the interrupt's sub-priority.  For simplicity all bits must be defined
 771:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * to be pre-emption priority bits.  The following assertion will fail if
 772:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * this is not the case (if some bits represent a sub-priority).
 773:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          *
 774:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * If the application only uses CMSIS libraries for interrupt
 775:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * configuration then the correct setting can be achieved on all Cortex-M
 776:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 777:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * scheduler.  Note however that some vendor specific peripheral libraries
 778:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * assume a non-zero priority group setting, in which cases using a value
 779:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****          * of zero will result in unpredictable behaviour. */
 780:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****         configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 1059              		.loc 1 780 0
 1060 003a 0D4B     		ldr	r3, .L55+8
 1061 003c 1B68     		ldr	r3, [r3]
 1062 003e 03F4E062 		and	r2, r3, #1792
 1063 0042 0C4B     		ldr	r3, .L55+12
 1064 0044 1B68     		ldr	r3, [r3]
 1065 0046 9A42     		cmp	r2, r3
 1066 0048 09D9     		bls	.L50
 1067              	.LBB58:
 1068              	.LBB59:
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 37


 197:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1069              		.loc 2 197 0 discriminator 1
 1070              	@ 197 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port
 1071 004a 4FF05003 			mov r3, #80												
 1072 004e 83F31188 		msr basepri, r3											
 1073 0052 BFF36F8F 		isb														
 1074 0056 BFF34F8F 		dsb														
 1075              	
 1076              	@ 0 "" 2
 1077              		.thumb
 1078 005a 3B60     		str	r3, [r7]
 1079              	.L54:
 1080              	.LBE59:
 1081              	.LBE58:
 1082              		.loc 1 780 0 discriminator 2
 1083 005c FEE7     		b	.L54
 1084              	.L50:
 781:../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****     }
 1085              		.loc 1 781 0
 1086 005e 1437     		adds	r7, r7, #20
 1087              	.LCFI47:
 1088              		.cfi_def_cfa_offset 4
 1089 0060 BD46     		mov	sp, r7
 1090              	.LCFI48:
 1091              		.cfi_def_cfa_register 13
 1092              		@ sp needed
 1093 0062 5DF8047B 		ldr	r7, [sp], #4
 1094              	.LCFI49:
 1095              		.cfi_restore 7
 1096              		.cfi_def_cfa_offset 0
 1097 0066 7047     		bx	lr
 1098              	.L56:
 1099              		.align	2
 1100              	.L55:
 1101 0068 F0E300E0 		.word	-536812560
 1102 006c 00000000 		.word	ucMaxSysCallPriority
 1103 0070 0CED00E0 		.word	-536810228
 1104 0074 00000000 		.word	ulMaxPRIGROUPValue
 1105              		.cfi_endproc
 1106              	.LFE17:
 1108              		.text
 1109              	.Letext0:
 1110              		.file 3 "/Users/adambujak/Workspace/whisper_system/.dependencies/gcc-arm-none-eabi-4_9-2015q3/arm-
 1111              		.file 4 "/Users/adambujak/Workspace/whisper_system/.dependencies/gcc-arm-none-eabi-4_9-2015q3/arm-
 1112              		.file 5 "../../../../dependencies/freertos/FreeRTOSv10.4.1/FreeRTOS/Source/include/projdefs.h"
 1113              		.file 6 "../include/FreeRTOSConfig.h"
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 port.c
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:21     .data.uxCriticalNesting:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:24     .data.uxCriticalNesting:0000000000000000 uxCriticalNesting
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:29     .bss.ucMaxSysCallPriority:0000000000000000 ucMaxSysCallPriority
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:30     .bss.ucMaxSysCallPriority:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:32     .bss.ulMaxPRIGROUPValue:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:35     .bss.ulMaxPRIGROUPValue:0000000000000000 ulMaxPRIGROUPValue
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:38     .rodata.pcInterruptPriorityRegisters:0000000000000000 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:41     .rodata.pcInterruptPriorityRegisters:0000000000000000 pcInterruptPriorityRegisters
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:44     .text.pxPortInitialiseStack:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:49     .text.pxPortInitialiseStack:0000000000000000 pxPortInitialiseStack
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:134    .text.pxPortInitialiseStack:0000000000000064 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:143    .text.prvTaskExitError:0000000000000000 prvTaskExitError
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:139    .text.prvTaskExitError:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:224    .text.prvTaskExitError:000000000000004c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:229    .text.SVC_Handler:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:234    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:254    .text.SVC_Handler:0000000000000020 pxCurrentTCBConst2
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:254    .text.SVC_Handler:0000000000000020 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:263    .text.prvPortStartFirstTask:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:267    .text.prvPortStartFirstTask:0000000000000000 prvPortStartFirstTask
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:288    .text.prvPortStartFirstTask:0000000000000022 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:297    .text.xPortStartScheduler:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:302    .text.xPortStartScheduler:0000000000000000 xPortStartScheduler
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:912    .text.vPortSetupTimerInterrupt:0000000000000000 vPortSetupTimerInterrupt
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:973    .text.vPortEnableVFP:0000000000000000 vPortEnableVFP
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:508    .text.xPortStartScheduler:0000000000000118 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:521    .text.vPortEndScheduler:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:526    .text.vPortEndScheduler:0000000000000000 vPortEndScheduler
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:582    .text.vPortEndScheduler:0000000000000030 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:587    .text.vPortEnterCritical:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:592    .text.vPortEnterCritical:0000000000000000 vPortEnterCritical
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:674    .text.vPortEnterCritical:0000000000000054 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:680    .text.vPortExitCritical:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:685    .text.vPortExitCritical:0000000000000000 vPortExitCritical
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:765    .text.vPortExitCritical:0000000000000048 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:770    .text.PendSV_Handler:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:775    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:823    .text.PendSV_Handler:0000000000000060 pxCurrentTCBConst
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:823    .text.PendSV_Handler:0000000000000060 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:832    .text.OSSysTick_Handler:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:837    .text.OSSysTick_Handler:0000000000000000 OSSysTick_Handler
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:902    .text.OSSysTick_Handler:000000000000003c $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:907    .text.vPortSetupTimerInterrupt:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:960    .text.vPortSetupTimerInterrupt:0000000000000030 $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:969    .text.vPortEnableVFP:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:988    .text.vPortEnableVFP:000000000000000e $d
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:997    .text.vPortValidateInterruptPriority:0000000000000000 $t
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:1002   .text.vPortValidateInterruptPriority:0000000000000000 vPortValidateInterruptPriority
/var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s:1101   .text.vPortValidateInterruptPriority:0000000000000068 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.12d3039ce5a2552d46df25be77b64279
                           .group:0000000000000000 wm4.stddef.h.39.c744ceb84abf2f8351653f0e2622da1c
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
ARM GAS  /var/folders/_8/_cw6l3nd335f_j6cn6z79m4m0000gn/T//ccV1C7Ub.s 			page 39


                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.2.23623fc0cad83877f62ccd9ca9b417c2
                           .group:0000000000000000 wm4.projdefs.h.28.d6a7c9061b707820f2fcf4c2ff5d9f24
                           .group:0000000000000000 wm4.portmacro.h.30.0285ed3864ca8fd2e12d2b9aedd88dfd
                           .group:0000000000000000 wm4.portable.h.63.e9cc508c3850f44ce542149380c67812
                           .group:0000000000000000 wm4.mpu_wrappers.h.28.163fb40577cf8d1578015ea3f2ff4cdb
                           .group:0000000000000000 wm4.FreeRTOS.h.67.b174ccccfb8001b827e8ddeee1ca37a2
                           .group:0000000000000000 wm4.list.h.57.02ec67e07eacffe5ca7cfb7326896236
                           .group:0000000000000000 wm4.task.h.47.2d3fe49a094b8ec1e3e6aac441e8db21

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
SystemCoreClock
